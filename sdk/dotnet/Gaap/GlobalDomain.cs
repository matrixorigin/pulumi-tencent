// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Gaap
{
    [TencentcloudResourceType("tencentcloud:Gaap/globalDomain:GlobalDomain")]
    public partial class GlobalDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// alias.
        /// </summary>
        [Output("alias")]
        public Output<string?> Alias { get; private set; } = null!;

        /// <summary>
        /// Domain name default entry.
        /// </summary>
        [Output("defaultValue")]
        public Output<string> DefaultValue { get; private set; } = null!;

        /// <summary>
        /// Domain Name Project ID.
        /// </summary>
        [Output("projectId")]
        public Output<int> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Global domain statue. Available values: open and close, default is open.
        /// </summary>
        [Output("status")]
        public Output<string> Status { get; private set; } = null!;

        /// <summary>
        /// Instance tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a GlobalDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public GlobalDomain(string name, GlobalDomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/globalDomain:GlobalDomain", name, args ?? new GlobalDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private GlobalDomain(string name, Input<string> id, GlobalDomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Gaap/globalDomain:GlobalDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing GlobalDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static GlobalDomain Get(string name, Input<string> id, GlobalDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new GlobalDomain(name, id, state, options);
        }
    }

    public sealed class GlobalDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// alias.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// Domain name default entry.
        /// </summary>
        [Input("defaultValue", required: true)]
        public Input<string> DefaultValue { get; set; } = null!;

        /// <summary>
        /// Domain Name Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        /// <summary>
        /// Global domain statue. Available values: open and close, default is open.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GlobalDomainArgs()
        {
        }
        public static new GlobalDomainArgs Empty => new GlobalDomainArgs();
    }

    public sealed class GlobalDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// alias.
        /// </summary>
        [Input("alias")]
        public Input<string>? Alias { get; set; }

        /// <summary>
        /// Domain name default entry.
        /// </summary>
        [Input("defaultValue")]
        public Input<string>? DefaultValue { get; set; }

        /// <summary>
        /// Domain Name Project ID.
        /// </summary>
        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        /// <summary>
        /// Global domain statue. Available values: open and close, default is open.
        /// </summary>
        [Input("status")]
        public Input<string>? Status { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Instance tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public GlobalDomainState()
        {
        }
        public static new GlobalDomainState Empty => new GlobalDomainState();
    }
}
