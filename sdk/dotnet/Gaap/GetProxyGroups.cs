// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Gaap
{
    public static class GetProxyGroups
    {
        public static Task<GetProxyGroupsResult> InvokeAsync(GetProxyGroupsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetProxyGroupsResult>("tencentcloud:Gaap/getProxyGroups:getProxyGroups", args ?? new GetProxyGroupsArgs(), options.WithDefaults());

        public static Output<GetProxyGroupsResult> Invoke(GetProxyGroupsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetProxyGroupsResult>("tencentcloud:Gaap/getProxyGroups:getProxyGroups", args ?? new GetProxyGroupsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetProxyGroupsArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private List<Inputs.GetProxyGroupsFilterArgs>? _filters;
        public List<Inputs.GetProxyGroupsFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetProxyGroupsFilterArgs>());
            set => _filters = value;
        }

        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("tagSets")]
        private List<Inputs.GetProxyGroupsTagSetArgs>? _tagSets;
        public List<Inputs.GetProxyGroupsTagSetArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new List<Inputs.GetProxyGroupsTagSetArgs>());
            set => _tagSets = value;
        }

        public GetProxyGroupsArgs()
        {
        }
        public static new GetProxyGroupsArgs Empty => new GetProxyGroupsArgs();
    }

    public sealed class GetProxyGroupsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("filters")]
        private InputList<Inputs.GetProxyGroupsFilterInputArgs>? _filters;
        public InputList<Inputs.GetProxyGroupsFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetProxyGroupsFilterInputArgs>());
            set => _filters = value;
        }

        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("tagSets")]
        private InputList<Inputs.GetProxyGroupsTagSetInputArgs>? _tagSets;
        public InputList<Inputs.GetProxyGroupsTagSetInputArgs> TagSets
        {
            get => _tagSets ?? (_tagSets = new InputList<Inputs.GetProxyGroupsTagSetInputArgs>());
            set => _tagSets = value;
        }

        public GetProxyGroupsInvokeArgs()
        {
        }
        public static new GetProxyGroupsInvokeArgs Empty => new GetProxyGroupsInvokeArgs();
    }


    [OutputType]
    public sealed class GetProxyGroupsResult
    {
        public readonly ImmutableArray<Outputs.GetProxyGroupsFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int ProjectId;
        public readonly ImmutableArray<Outputs.GetProxyGroupsProxyGroupListResult> ProxyGroupLists;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetProxyGroupsTagSetResult> TagSets;

        [OutputConstructor]
        private GetProxyGroupsResult(
            ImmutableArray<Outputs.GetProxyGroupsFilterResult> filters,

            string id,

            int projectId,

            ImmutableArray<Outputs.GetProxyGroupsProxyGroupListResult> proxyGroupLists,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetProxyGroupsTagSetResult> tagSets)
        {
            Filters = filters;
            Id = id;
            ProjectId = projectId;
            ProxyGroupLists = proxyGroupLists;
            ResultOutputFile = resultOutputFile;
            TagSets = tagSets;
        }
    }
}
