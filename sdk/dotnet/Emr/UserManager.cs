// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Emr
{
    [TencentcloudResourceType("tencentcloud:Emr/userManager:UserManager")]
    public partial class UserManager : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Create time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Download keytab url.
        /// </summary>
        [Output("downloadKeytabUrl")]
        public Output<string> DownloadKeytabUrl { get; private set; } = null!;

        /// <summary>
        /// Cluster string ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// PassWord.
        /// </summary>
        [Output("password")]
        public Output<string> Password { get; private set; } = null!;

        /// <summary>
        /// If support download keytab.
        /// </summary>
        [Output("supportDownloadKeytab")]
        public Output<bool> SupportDownloadKeytab { get; private set; } = null!;

        /// <summary>
        /// User group membership.
        /// </summary>
        [Output("userGroup")]
        public Output<string> UserGroup { get; private set; } = null!;

        /// <summary>
        /// Username.
        /// </summary>
        [Output("userName")]
        public Output<string> UserName { get; private set; } = null!;

        /// <summary>
        /// User type.
        /// </summary>
        [Output("userType")]
        public Output<string> UserType { get; private set; } = null!;


        /// <summary>
        /// Create a UserManager resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public UserManager(string name, UserManagerArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Emr/userManager:UserManager", name, args ?? new UserManagerArgs(), MakeResourceOptions(options, ""))
        {
        }

        private UserManager(string name, Input<string> id, UserManagerState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Emr/userManager:UserManager", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing UserManager resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static UserManager Get(string name, Input<string> id, UserManagerState? state = null, CustomResourceOptions? options = null)
        {
            return new UserManager(name, id, state, options);
        }
    }

    public sealed class UserManagerArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Cluster string ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        /// <summary>
        /// PassWord.
        /// </summary>
        [Input("password", required: true)]
        public Input<string> Password { get; set; } = null!;

        /// <summary>
        /// User group membership.
        /// </summary>
        [Input("userGroup", required: true)]
        public Input<string> UserGroup { get; set; } = null!;

        /// <summary>
        /// Username.
        /// </summary>
        [Input("userName", required: true)]
        public Input<string> UserName { get; set; } = null!;

        public UserManagerArgs()
        {
        }
        public static new UserManagerArgs Empty => new UserManagerArgs();
    }

    public sealed class UserManagerState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Create time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Download keytab url.
        /// </summary>
        [Input("downloadKeytabUrl")]
        public Input<string>? DownloadKeytabUrl { get; set; }

        /// <summary>
        /// Cluster string ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// PassWord.
        /// </summary>
        [Input("password")]
        public Input<string>? Password { get; set; }

        /// <summary>
        /// If support download keytab.
        /// </summary>
        [Input("supportDownloadKeytab")]
        public Input<bool>? SupportDownloadKeytab { get; set; }

        /// <summary>
        /// User group membership.
        /// </summary>
        [Input("userGroup")]
        public Input<string>? UserGroup { get; set; }

        /// <summary>
        /// Username.
        /// </summary>
        [Input("userName")]
        public Input<string>? UserName { get; set; }

        /// <summary>
        /// User type.
        /// </summary>
        [Input("userType")]
        public Input<string>? UserType { get; set; }

        public UserManagerState()
        {
        }
        public static new UserManagerState Empty => new UserManagerState();
    }
}
