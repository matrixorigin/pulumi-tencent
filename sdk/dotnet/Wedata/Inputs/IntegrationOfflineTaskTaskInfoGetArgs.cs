// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Wedata.Inputs
{

    public sealed class IntegrationOfflineTaskTaskInfoGetArgs : global::Pulumi.ResourceArgs
    {
        [Input("appId")]
        public Input<string>? AppId { get; set; }

        [Input("configs")]
        private InputList<Inputs.IntegrationOfflineTaskTaskInfoConfigGetArgs>? _configs;
        public InputList<Inputs.IntegrationOfflineTaskTaskInfoConfigGetArgs> Configs
        {
            get => _configs ?? (_configs = new InputList<Inputs.IntegrationOfflineTaskTaskInfoConfigGetArgs>());
            set => _configs = value;
        }

        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        [Input("creatorUin")]
        public Input<string>? CreatorUin { get; set; }

        [Input("dataProxyUrls")]
        private InputList<string>? _dataProxyUrls;
        public InputList<string> DataProxyUrls
        {
            get => _dataProxyUrls ?? (_dataProxyUrls = new InputList<string>());
            set => _dataProxyUrls = value;
        }

        [Input("executeContexts")]
        private InputList<Inputs.IntegrationOfflineTaskTaskInfoExecuteContextGetArgs>? _executeContexts;
        public InputList<Inputs.IntegrationOfflineTaskTaskInfoExecuteContextGetArgs> ExecuteContexts
        {
            get => _executeContexts ?? (_executeContexts = new InputList<Inputs.IntegrationOfflineTaskTaskInfoExecuteContextGetArgs>());
            set => _executeContexts = value;
        }

        [Input("executorGroupName")]
        public Input<string>? ExecutorGroupName { get; set; }

        [Input("executorId")]
        public Input<string>? ExecutorId { get; set; }

        [Input("extConfigs")]
        private InputList<Inputs.IntegrationOfflineTaskTaskInfoExtConfigGetArgs>? _extConfigs;
        public InputList<Inputs.IntegrationOfflineTaskTaskInfoExtConfigGetArgs> ExtConfigs
        {
            get => _extConfigs ?? (_extConfigs = new InputList<Inputs.IntegrationOfflineTaskTaskInfoExtConfigGetArgs>());
            set => _extConfigs = value;
        }

        [Input("hasVersion")]
        public Input<bool>? HasVersion { get; set; }

        [Input("inLongManagerUrl")]
        public Input<string>? InLongManagerUrl { get; set; }

        [Input("inLongManagerVersion")]
        public Input<string>? InLongManagerVersion { get; set; }

        [Input("inLongStreamId")]
        public Input<string>? InLongStreamId { get; set; }

        [Input("incharge")]
        public Input<string>? Incharge { get; set; }

        [Input("inputDatasourceType")]
        public Input<string>? InputDatasourceType { get; set; }

        [Input("instanceVersion")]
        public Input<int>? InstanceVersion { get; set; }

        [Input("lastRunTime")]
        public Input<string>? LastRunTime { get; set; }

        [Input("locked")]
        public Input<bool>? Locked { get; set; }

        [Input("locker")]
        public Input<string>? Locker { get; set; }

        [Input("mappings")]
        private InputList<Inputs.IntegrationOfflineTaskTaskInfoMappingGetArgs>? _mappings;
        public InputList<Inputs.IntegrationOfflineTaskTaskInfoMappingGetArgs> Mappings
        {
            get => _mappings ?? (_mappings = new InputList<Inputs.IntegrationOfflineTaskTaskInfoMappingGetArgs>());
            set => _mappings = value;
        }

        [Input("numRecordsIn")]
        public Input<int>? NumRecordsIn { get; set; }

        [Input("numRecordsOut")]
        public Input<int>? NumRecordsOut { get; set; }

        [Input("numRestarts")]
        public Input<int>? NumRestarts { get; set; }

        [Input("offlineTaskAddEntity")]
        public Input<Inputs.IntegrationOfflineTaskTaskInfoOfflineTaskAddEntityGetArgs>? OfflineTaskAddEntity { get; set; }

        [Input("operatorUin")]
        public Input<string>? OperatorUin { get; set; }

        [Input("outputDatasourceType")]
        public Input<string>? OutputDatasourceType { get; set; }

        [Input("ownerUin")]
        public Input<string>? OwnerUin { get; set; }

        [Input("readPhase")]
        public Input<int>? ReadPhase { get; set; }

        [Input("readerDelay")]
        public Input<double>? ReaderDelay { get; set; }

        [Input("runningCu")]
        public Input<double>? RunningCu { get; set; }

        [Input("scheduleTaskId")]
        public Input<string>? ScheduleTaskId { get; set; }

        [Input("status")]
        public Input<int>? Status { get; set; }

        [Input("stopTime")]
        public Input<string>? StopTime { get; set; }

        [Input("submit")]
        public Input<bool>? Submit { get; set; }

        [Input("switchResource")]
        public Input<int>? SwitchResource { get; set; }

        [Input("syncType")]
        public Input<int>? SyncType { get; set; }

        [Input("taskAlarmRegularLists")]
        private InputList<string>? _taskAlarmRegularLists;
        public InputList<string> TaskAlarmRegularLists
        {
            get => _taskAlarmRegularLists ?? (_taskAlarmRegularLists = new InputList<string>());
            set => _taskAlarmRegularLists = value;
        }

        [Input("taskGroupId")]
        public Input<string>? TaskGroupId { get; set; }

        [Input("taskMode")]
        public Input<string>? TaskMode { get; set; }

        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        [Input("workflowId")]
        public Input<string>? WorkflowId { get; set; }

        public IntegrationOfflineTaskTaskInfoGetArgs()
        {
        }
        public static new IntegrationOfflineTaskTaskInfoGetArgs Empty => new IntegrationOfflineTaskTaskInfoGetArgs();
    }
}
