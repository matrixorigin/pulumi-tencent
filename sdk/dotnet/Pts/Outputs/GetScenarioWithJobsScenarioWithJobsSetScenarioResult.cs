// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Pts.Outputs
{

    [OutputType]
    public sealed class GetScenarioWithJobsScenarioWithJobsSetScenarioResult
    {
        public readonly int AppId;
        public readonly ImmutableArray<string> Configs;
        public readonly string CreatedAt;
        public readonly string CronId;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioDatasetResult> Datasets;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioDomainNameConfigResult> DomainNameConfigs;
        public readonly string EncodedScripts;
        public readonly ImmutableArray<string> Extensions;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioLoadResult> Loads;
        public readonly string Name;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioNotificationHookResult> NotificationHooks;
        public readonly string Owner;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioPluginResult> Plugins;
        public readonly string ProjectId;
        public readonly string ProjectName;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioProtocolResult> Protocols;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioRequestFileResult> RequestFiles;
        public readonly string ScenarioId;
        public readonly string SlaId;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioSlaPolicyResult> SlaPolicies;
        public readonly int Status;
        public readonly string SubAccountUin;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioTestScriptResult> TestScripts;
        public readonly string Type;
        public readonly string Uin;
        public readonly string UpdatedAt;

        [OutputConstructor]
        private GetScenarioWithJobsScenarioWithJobsSetScenarioResult(
            int appId,

            ImmutableArray<string> configs,

            string createdAt,

            string cronId,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioDatasetResult> datasets,

            string description,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioDomainNameConfigResult> domainNameConfigs,

            string encodedScripts,

            ImmutableArray<string> extensions,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioLoadResult> loads,

            string name,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioNotificationHookResult> notificationHooks,

            string owner,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioPluginResult> plugins,

            string projectId,

            string projectName,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioProtocolResult> protocols,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioRequestFileResult> requestFiles,

            string scenarioId,

            string slaId,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioSlaPolicyResult> slaPolicies,

            int status,

            string subAccountUin,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetScenarioTestScriptResult> testScripts,

            string type,

            string uin,

            string updatedAt)
        {
            AppId = appId;
            Configs = configs;
            CreatedAt = createdAt;
            CronId = cronId;
            Datasets = datasets;
            Description = description;
            DomainNameConfigs = domainNameConfigs;
            EncodedScripts = encodedScripts;
            Extensions = extensions;
            Loads = loads;
            Name = name;
            NotificationHooks = notificationHooks;
            Owner = owner;
            Plugins = plugins;
            ProjectId = projectId;
            ProjectName = projectName;
            Protocols = protocols;
            RequestFiles = requestFiles;
            ScenarioId = scenarioId;
            SlaId = slaId;
            SlaPolicies = slaPolicies;
            Status = status;
            SubAccountUin = subAccountUin;
            TestScripts = testScripts;
            Type = type;
            Uin = uin;
            UpdatedAt = updatedAt;
        }
    }
}
