// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Pts.Outputs
{

    [OutputType]
    public sealed class GetScenarioWithJobsScenarioWithJobsSetJobResult
    {
        public readonly int AbortReason;
        public readonly ImmutableArray<string> Configs;
        public readonly string CreatedAt;
        public readonly string CronId;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobDatasetResult> Datasets;
        public readonly bool Debug;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobDomainNameConfigResult> DomainNameConfigs;
        public readonly int Duration;
        public readonly string EndTime;
        public readonly double ErrorRate;
        public readonly ImmutableArray<string> Extensions;
        public readonly string JobId;
        public readonly string JobOwner;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadSourceInfoResult> LoadSourceInfos;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadSourceResult> LoadSources;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadResult> Loads;
        public readonly int MaxRequestsPerSecond;
        public readonly int MaxVirtualUserCount;
        public readonly string Message;
        public readonly double NetworkReceiveRate;
        public readonly double NetworkSendRate;
        public readonly string Note;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobNotificationHookResult> NotificationHooks;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobPluginResult> Plugins;
        public readonly string ProjectId;
        public readonly string ProjectName;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobProtocolResult> Protocols;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobRequestFileResult> RequestFiles;
        public readonly double RequestTotal;
        public readonly double RequestsPerSecond;
        public readonly double ResponseTimeAverage;
        public readonly double ResponseTimeMax;
        public readonly double ResponseTimeMin;
        public readonly double ResponseTimeP90;
        public readonly double ResponseTimeP95;
        public readonly double ResponseTimeP99;
        public readonly string ScenarioId;
        public readonly string ScenarioName;
        public readonly ImmutableArray<string> Scripts;
        public readonly string StartTime;
        public readonly int Status;
        public readonly ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobTestScriptResult> TestScripts;
        public readonly string Type;

        [OutputConstructor]
        private GetScenarioWithJobsScenarioWithJobsSetJobResult(
            int abortReason,

            ImmutableArray<string> configs,

            string createdAt,

            string cronId,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobDatasetResult> datasets,

            bool debug,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobDomainNameConfigResult> domainNameConfigs,

            int duration,

            string endTime,

            double errorRate,

            ImmutableArray<string> extensions,

            string jobId,

            string jobOwner,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadSourceInfoResult> loadSourceInfos,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadSourceResult> loadSources,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobLoadResult> loads,

            int maxRequestsPerSecond,

            int maxVirtualUserCount,

            string message,

            double networkReceiveRate,

            double networkSendRate,

            string note,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobNotificationHookResult> notificationHooks,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobPluginResult> plugins,

            string projectId,

            string projectName,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobProtocolResult> protocols,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobRequestFileResult> requestFiles,

            double requestTotal,

            double requestsPerSecond,

            double responseTimeAverage,

            double responseTimeMax,

            double responseTimeMin,

            double responseTimeP90,

            double responseTimeP95,

            double responseTimeP99,

            string scenarioId,

            string scenarioName,

            ImmutableArray<string> scripts,

            string startTime,

            int status,

            ImmutableArray<Outputs.GetScenarioWithJobsScenarioWithJobsSetJobTestScriptResult> testScripts,

            string type)
        {
            AbortReason = abortReason;
            Configs = configs;
            CreatedAt = createdAt;
            CronId = cronId;
            Datasets = datasets;
            Debug = debug;
            DomainNameConfigs = domainNameConfigs;
            Duration = duration;
            EndTime = endTime;
            ErrorRate = errorRate;
            Extensions = extensions;
            JobId = jobId;
            JobOwner = jobOwner;
            LoadSourceInfos = loadSourceInfos;
            LoadSources = loadSources;
            Loads = loads;
            MaxRequestsPerSecond = maxRequestsPerSecond;
            MaxVirtualUserCount = maxVirtualUserCount;
            Message = message;
            NetworkReceiveRate = networkReceiveRate;
            NetworkSendRate = networkSendRate;
            Note = note;
            NotificationHooks = notificationHooks;
            Plugins = plugins;
            ProjectId = projectId;
            ProjectName = projectName;
            Protocols = protocols;
            RequestFiles = requestFiles;
            RequestTotal = requestTotal;
            RequestsPerSecond = requestsPerSecond;
            ResponseTimeAverage = responseTimeAverage;
            ResponseTimeMax = responseTimeMax;
            ResponseTimeMin = responseTimeMin;
            ResponseTimeP90 = responseTimeP90;
            ResponseTimeP95 = responseTimeP95;
            ResponseTimeP99 = responseTimeP99;
            ScenarioId = scenarioId;
            ScenarioName = scenarioName;
            Scripts = scripts;
            StartTime = startTime;
            Status = status;
            TestScripts = testScripts;
            Type = type;
        }
    }
}
