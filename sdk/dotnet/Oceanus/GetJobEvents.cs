// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Oceanus
{
    public static class GetJobEvents
    {
        public static Task<GetJobEventsResult> InvokeAsync(GetJobEventsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetJobEventsResult>("tencentcloud:Oceanus/getJobEvents:getJobEvents", args ?? new GetJobEventsArgs(), options.WithDefaults());

        public static Output<GetJobEventsResult> Invoke(GetJobEventsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetJobEventsResult>("tencentcloud:Oceanus/getJobEvents:getJobEvents", args ?? new GetJobEventsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetJobEventsArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTimestamp", required: true)]
        public int EndTimestamp { get; set; }

        [Input("jobId", required: true)]
        public string JobId { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startTimestamp", required: true)]
        public int StartTimestamp { get; set; }

        [Input("types")]
        private List<string>? _types;
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        [Input("workSpaceId", required: true)]
        public string WorkSpaceId { get; set; } = null!;

        public GetJobEventsArgs()
        {
        }
        public static new GetJobEventsArgs Empty => new GetJobEventsArgs();
    }

    public sealed class GetJobEventsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTimestamp", required: true)]
        public Input<int> EndTimestamp { get; set; } = null!;

        [Input("jobId", required: true)]
        public Input<string> JobId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startTimestamp", required: true)]
        public Input<int> StartTimestamp { get; set; } = null!;

        [Input("types")]
        private InputList<string>? _types;
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        [Input("workSpaceId", required: true)]
        public Input<string> WorkSpaceId { get; set; } = null!;

        public GetJobEventsInvokeArgs()
        {
        }
        public static new GetJobEventsInvokeArgs Empty => new GetJobEventsInvokeArgs();
    }


    [OutputType]
    public sealed class GetJobEventsResult
    {
        public readonly int EndTimestamp;
        public readonly ImmutableArray<Outputs.GetJobEventsEventResult> Events;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string JobId;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<int> RunningOrderIds;
        public readonly int StartTimestamp;
        public readonly ImmutableArray<string> Types;
        public readonly string WorkSpaceId;

        [OutputConstructor]
        private GetJobEventsResult(
            int endTimestamp,

            ImmutableArray<Outputs.GetJobEventsEventResult> events,

            string id,

            string jobId,

            string? resultOutputFile,

            ImmutableArray<int> runningOrderIds,

            int startTimestamp,

            ImmutableArray<string> types,

            string workSpaceId)
        {
            EndTimestamp = endTimestamp;
            Events = events;
            Id = id;
            JobId = jobId;
            ResultOutputFile = resultOutputFile;
            RunningOrderIds = runningOrderIds;
            StartTimestamp = startTimestamp;
            Types = types;
            WorkSpaceId = workSpaceId;
        }
    }
}
