// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Oceanus
{
    [TencentcloudResourceType("tencentcloud:Oceanus/job:Job")]
    public partial class Job : global::Pulumi.CustomResource
    {
        /// <summary>
        /// When ClusterType=2, it is required to specify the ID of the exclusive cluster to which the job is submitted.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        /// <summary>
        /// The type of the cluster. 1 indicates shared cluster, and 2 indicates exclusive cluster.
        /// </summary>
        [Output("clusterType")]
        public Output<int> ClusterType { get; private set; } = null!;

        /// <summary>
        /// Set the memory specification of each CU, in GB. It supports 2, 4, 8, and 16 (which needs to apply for the whitelist
        /// before use). The default is 4, that is, 1 CU corresponds to 4 GB of running memory.
        /// </summary>
        [Output("cuMem")]
        public Output<int?> CuMem { get; private set; } = null!;

        /// <summary>
        /// The Flink version that the job runs.
        /// </summary>
        [Output("flinkVersion")]
        public Output<string?> FlinkVersion { get; private set; } = null!;

        /// <summary>
        /// The folder ID to which the job name belongs. The root directory is root.
        /// </summary>
        [Output("folderId")]
        public Output<string?> FolderId { get; private set; } = null!;

        /// <summary>
        /// The type of the job. 1 indicates SQL job, and 2 indicates JAR job.
        /// </summary>
        [Output("jobType")]
        public Output<int> JobType { get; private set; } = null!;

        /// <summary>
        /// The name of the job. It can be composed of Chinese, English, numbers, hyphens (-), underscores (_), and periods (.), and
        /// the length cannot exceed 50 characters. Note that the job name cannot be the same as an existing job.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The remark information of the job. It can be set arbitrarily.
        /// </summary>
        [Output("remark")]
        public Output<string?> Remark { get; private set; } = null!;

        /// <summary>
        /// The workspace SerialId.
        /// </summary>
        [Output("workSpaceId")]
        public Output<string?> WorkSpaceId { get; private set; } = null!;


        /// <summary>
        /// Create a Job resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Job(string name, JobArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Oceanus/job:Job", name, args ?? new JobArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Job(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Oceanus/job:Job", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Job resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Job Get(string name, Input<string> id, JobState? state = null, CustomResourceOptions? options = null)
        {
            return new Job(name, id, state, options);
        }
    }

    public sealed class JobArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When ClusterType=2, it is required to specify the ID of the exclusive cluster to which the job is submitted.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The type of the cluster. 1 indicates shared cluster, and 2 indicates exclusive cluster.
        /// </summary>
        [Input("clusterType", required: true)]
        public Input<int> ClusterType { get; set; } = null!;

        /// <summary>
        /// Set the memory specification of each CU, in GB. It supports 2, 4, 8, and 16 (which needs to apply for the whitelist
        /// before use). The default is 4, that is, 1 CU corresponds to 4 GB of running memory.
        /// </summary>
        [Input("cuMem")]
        public Input<int>? CuMem { get; set; }

        /// <summary>
        /// The Flink version that the job runs.
        /// </summary>
        [Input("flinkVersion")]
        public Input<string>? FlinkVersion { get; set; }

        /// <summary>
        /// The folder ID to which the job name belongs. The root directory is root.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The type of the job. 1 indicates SQL job, and 2 indicates JAR job.
        /// </summary>
        [Input("jobType", required: true)]
        public Input<int> JobType { get; set; } = null!;

        /// <summary>
        /// The name of the job. It can be composed of Chinese, English, numbers, hyphens (-), underscores (_), and periods (.), and
        /// the length cannot exceed 50 characters. Note that the job name cannot be the same as an existing job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remark information of the job. It can be set arbitrarily.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The workspace SerialId.
        /// </summary>
        [Input("workSpaceId")]
        public Input<string>? WorkSpaceId { get; set; }

        public JobArgs()
        {
        }
        public static new JobArgs Empty => new JobArgs();
    }

    public sealed class JobState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// When ClusterType=2, it is required to specify the ID of the exclusive cluster to which the job is submitted.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// The type of the cluster. 1 indicates shared cluster, and 2 indicates exclusive cluster.
        /// </summary>
        [Input("clusterType")]
        public Input<int>? ClusterType { get; set; }

        /// <summary>
        /// Set the memory specification of each CU, in GB. It supports 2, 4, 8, and 16 (which needs to apply for the whitelist
        /// before use). The default is 4, that is, 1 CU corresponds to 4 GB of running memory.
        /// </summary>
        [Input("cuMem")]
        public Input<int>? CuMem { get; set; }

        /// <summary>
        /// The Flink version that the job runs.
        /// </summary>
        [Input("flinkVersion")]
        public Input<string>? FlinkVersion { get; set; }

        /// <summary>
        /// The folder ID to which the job name belongs. The root directory is root.
        /// </summary>
        [Input("folderId")]
        public Input<string>? FolderId { get; set; }

        /// <summary>
        /// The type of the job. 1 indicates SQL job, and 2 indicates JAR job.
        /// </summary>
        [Input("jobType")]
        public Input<int>? JobType { get; set; }

        /// <summary>
        /// The name of the job. It can be composed of Chinese, English, numbers, hyphens (-), underscores (_), and periods (.), and
        /// the length cannot exceed 50 characters. Note that the job name cannot be the same as an existing job.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The remark information of the job. It can be set arbitrarily.
        /// </summary>
        [Input("remark")]
        public Input<string>? Remark { get; set; }

        /// <summary>
        /// The workspace SerialId.
        /// </summary>
        [Input("workSpaceId")]
        public Input<string>? WorkSpaceId { get; set; }

        public JobState()
        {
        }
        public static new JobState Empty => new JobState();
    }
}
