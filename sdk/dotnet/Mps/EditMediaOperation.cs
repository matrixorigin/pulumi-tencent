// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mps
{
    [TencentcloudResourceType("tencentcloud:Mps/editMediaOperation:EditMediaOperation")]
    public partial class EditMediaOperation : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Information of input video file.
        /// </summary>
        [Output("fileInfos")]
        public Output<ImmutableArray<Outputs.EditMediaOperationFileInfo>> FileInfos { get; private set; } = null!;

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Output("outputConfig")]
        public Output<Outputs.EditMediaOperationOutputConfig?> OutputConfig { get; private set; } = null!;

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Output("outputObjectPath")]
        public Output<string> OutputObjectPath { get; private set; } = null!;

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Output("outputStorage")]
        public Output<Outputs.EditMediaOperationOutputStorage> OutputStorage { get; private set; } = null!;

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will
        /// return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Output("sessionContext")]
        public Output<string?> SessionContext { get; private set; } = null!;

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will
        /// return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered,
        /// no deduplication will be performed.
        /// </summary>
        [Output("sessionId")]
        public Output<string?> SessionId { get; private set; } = null!;

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Output("taskNotifyConfig")]
        public Output<Outputs.EditMediaOperationTaskNotifyConfig?> TaskNotifyConfig { get; private set; } = null!;

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0
        /// will be used.
        /// </summary>
        [Output("tasksPriority")]
        public Output<int?> TasksPriority { get; private set; } = null!;


        /// <summary>
        /// Create a EditMediaOperation resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EditMediaOperation(string name, EditMediaOperationArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/editMediaOperation:EditMediaOperation", name, args ?? new EditMediaOperationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EditMediaOperation(string name, Input<string> id, EditMediaOperationState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Mps/editMediaOperation:EditMediaOperation", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EditMediaOperation resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EditMediaOperation Get(string name, Input<string> id, EditMediaOperationState? state = null, CustomResourceOptions? options = null)
        {
            return new EditMediaOperation(name, id, state, options);
        }
    }

    public sealed class EditMediaOperationArgs : global::Pulumi.ResourceArgs
    {
        [Input("fileInfos", required: true)]
        private InputList<Inputs.EditMediaOperationFileInfoArgs>? _fileInfos;

        /// <summary>
        /// Information of input video file.
        /// </summary>
        public InputList<Inputs.EditMediaOperationFileInfoArgs> FileInfos
        {
            get => _fileInfos ?? (_fileInfos = new InputList<Inputs.EditMediaOperationFileInfoArgs>());
            set => _fileInfos = value;
        }

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Input("outputConfig")]
        public Input<Inputs.EditMediaOperationOutputConfigArgs>? OutputConfig { get; set; }

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Input("outputObjectPath", required: true)]
        public Input<string> OutputObjectPath { get; set; } = null!;

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Input("outputStorage", required: true)]
        public Input<Inputs.EditMediaOperationOutputStorageArgs> OutputStorage { get; set; } = null!;

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will
        /// return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Input("sessionContext")]
        public Input<string>? SessionContext { get; set; }

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will
        /// return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered,
        /// no deduplication will be performed.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Input("taskNotifyConfig")]
        public Input<Inputs.EditMediaOperationTaskNotifyConfigArgs>? TaskNotifyConfig { get; set; }

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0
        /// will be used.
        /// </summary>
        [Input("tasksPriority")]
        public Input<int>? TasksPriority { get; set; }

        public EditMediaOperationArgs()
        {
        }
        public static new EditMediaOperationArgs Empty => new EditMediaOperationArgs();
    }

    public sealed class EditMediaOperationState : global::Pulumi.ResourceArgs
    {
        [Input("fileInfos")]
        private InputList<Inputs.EditMediaOperationFileInfoGetArgs>? _fileInfos;

        /// <summary>
        /// Information of input video file.
        /// </summary>
        public InputList<Inputs.EditMediaOperationFileInfoGetArgs> FileInfos
        {
            get => _fileInfos ?? (_fileInfos = new InputList<Inputs.EditMediaOperationFileInfoGetArgs>());
            set => _fileInfos = value;
        }

        /// <summary>
        /// Configuration for output files of video editing.
        /// </summary>
        [Input("outputConfig")]
        public Input<Inputs.EditMediaOperationOutputConfigGetArgs>? OutputConfig { get; set; }

        /// <summary>
        /// The path to save the media processing output file.
        /// </summary>
        [Input("outputObjectPath")]
        public Input<string>? OutputObjectPath { get; set; }

        /// <summary>
        /// The storage location of the media processing output file.
        /// </summary>
        [Input("outputStorage")]
        public Input<Inputs.EditMediaOperationOutputStorageGetArgs>? OutputStorage { get; set; }

        /// <summary>
        /// The source context which is used to pass through the user request information. The task flow status change callback will
        /// return the value of this field. It can contain up to 1,000 characters.
        /// </summary>
        [Input("sessionContext")]
        public Input<string>? SessionContext { get; set; }

        /// <summary>
        /// The ID used for deduplication. If there was a request with the same ID in the last three days, the current request will
        /// return an error. The ID can contain up to 50 characters. If this parameter is left empty or an empty string is entered,
        /// no deduplication will be performed.
        /// </summary>
        [Input("sessionId")]
        public Input<string>? SessionId { get; set; }

        /// <summary>
        /// Event notification information of task. If this parameter is left empty, no event notifications will be obtained.
        /// </summary>
        [Input("taskNotifyConfig")]
        public Input<Inputs.EditMediaOperationTaskNotifyConfigGetArgs>? TaskNotifyConfig { get; set; }

        /// <summary>
        /// Task priority. The higher the value, the higher the priority. Value range: [-10,10]. If this parameter is left empty, 0
        /// will be used.
        /// </summary>
        [Input("tasksPriority")]
        public Input<int>? TasksPriority { get; set; }

        public EditMediaOperationState()
        {
        }
        public static new EditMediaOperationState Empty => new EditMediaOperationState();
    }
}
