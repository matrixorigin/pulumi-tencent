// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Mps
{
    public static class GetMediaMetaData
    {
        public static Task<GetMediaMetaDataResult> InvokeAsync(GetMediaMetaDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetMediaMetaDataResult>("tencentcloud:Mps/getMediaMetaData:getMediaMetaData", args ?? new GetMediaMetaDataArgs(), options.WithDefaults());

        public static Output<GetMediaMetaDataResult> Invoke(GetMediaMetaDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetMediaMetaDataResult>("tencentcloud:Mps/getMediaMetaData:getMediaMetaData", args ?? new GetMediaMetaDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetMediaMetaDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("inputInfo", required: true)]
        public Inputs.GetMediaMetaDataInputInfoArgs InputInfo { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetMediaMetaDataArgs()
        {
        }
        public static new GetMediaMetaDataArgs Empty => new GetMediaMetaDataArgs();
    }

    public sealed class GetMediaMetaDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("inputInfo", required: true)]
        public Input<Inputs.GetMediaMetaDataInputInfoInputArgs> InputInfo { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetMediaMetaDataInvokeArgs()
        {
        }
        public static new GetMediaMetaDataInvokeArgs Empty => new GetMediaMetaDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetMediaMetaDataResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly Outputs.GetMediaMetaDataInputInfoResult InputInfo;
        public readonly ImmutableArray<Outputs.GetMediaMetaDataMetaDataResult> MetaDatas;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetMediaMetaDataResult(
            string id,

            Outputs.GetMediaMetaDataInputInfoResult inputInfo,

            ImmutableArray<Outputs.GetMediaMetaDataMetaDataResult> metaDatas,

            string? resultOutputFile)
        {
            Id = id;
            InputInfo = inputInfo;
            MetaDatas = metaDatas;
            ResultOutputFile = resultOutputFile;
        }
    }
}
