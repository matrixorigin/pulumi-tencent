// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Teo
{
    [TencentcloudResourceType("tencentcloud:Teo/originGroup:OriginGroup")]
    public partial class OriginGroup : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Origin site group creation time.
        /// </summary>
        [Output("createTime")]
        public Output<string> CreateTime { get; private set; } = null!;

        /// <summary>
        /// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
        /// configuration priority to be higher than the Host Header of the origin site group.
        /// </summary>
        [Output("hostHeader")]
        public Output<string?> HostHeader { get; private set; } = null!;

        /// <summary>
        /// OriginGroup Name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// OriginGroup ID.
        /// </summary>
        [Output("originGroupId")]
        public Output<string> OriginGroupId { get; private set; } = null!;

        /// <summary>
        /// Origin site records.
        /// </summary>
        [Output("records")]
        public Output<ImmutableArray<Outputs.OriginGroupRecord>> Records { get; private set; } = null!;

        /// <summary>
        /// List of referenced instances of the origin site group.
        /// </summary>
        [Output("references")]
        public Output<ImmutableArray<Outputs.OriginGroupReference>> References { get; private set; } = null!;

        /// <summary>
        /// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
        /// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
        /// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
        /// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
        /// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// Origin site group update time.
        /// </summary>
        [Output("updateTime")]
        public Output<string> UpdateTime { get; private set; } = null!;

        /// <summary>
        /// Site ID.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a OriginGroup resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public OriginGroup(string name, OriginGroupArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/originGroup:OriginGroup", name, args ?? new OriginGroupArgs(), MakeResourceOptions(options, ""))
        {
        }

        private OriginGroup(string name, Input<string> id, OriginGroupState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/originGroup:OriginGroup", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing OriginGroup resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static OriginGroup Get(string name, Input<string> id, OriginGroupState? state = null, CustomResourceOptions? options = null)
        {
            return new OriginGroup(name, id, state, options);
        }
    }

    public sealed class OriginGroupArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
        /// configuration priority to be higher than the Host Header of the origin site group.
        /// </summary>
        [Input("hostHeader")]
        public Input<string>? HostHeader { get; set; }

        /// <summary>
        /// OriginGroup Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("records", required: true)]
        private InputList<Inputs.OriginGroupRecordArgs>? _records;

        /// <summary>
        /// Origin site records.
        /// </summary>
        public InputList<Inputs.OriginGroupRecordArgs> Records
        {
            get => _records ?? (_records = new InputList<Inputs.OriginGroupRecordArgs>());
            set => _records = value;
        }

        /// <summary>
        /// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
        /// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
        /// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
        /// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
        /// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// Site ID.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public OriginGroupArgs()
        {
        }
        public static new OriginGroupArgs Empty => new OriginGroupArgs();
    }

    public sealed class OriginGroupState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Origin site group creation time.
        /// </summary>
        [Input("createTime")]
        public Input<string>? CreateTime { get; set; }

        /// <summary>
        /// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
        /// configuration priority to be higher than the Host Header of the origin site group.
        /// </summary>
        [Input("hostHeader")]
        public Input<string>? HostHeader { get; set; }

        /// <summary>
        /// OriginGroup Name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// OriginGroup ID.
        /// </summary>
        [Input("originGroupId")]
        public Input<string>? OriginGroupId { get; set; }

        [Input("records")]
        private InputList<Inputs.OriginGroupRecordGetArgs>? _records;

        /// <summary>
        /// Origin site records.
        /// </summary>
        public InputList<Inputs.OriginGroupRecordGetArgs> Records
        {
            get => _records ?? (_records = new InputList<Inputs.OriginGroupRecordGetArgs>());
            set => _records = value;
        }

        [Input("references")]
        private InputList<Inputs.OriginGroupReferenceGetArgs>? _references;

        /// <summary>
        /// List of referenced instances of the origin site group.
        /// </summary>
        public InputList<Inputs.OriginGroupReferenceGetArgs> References
        {
            get => _references ?? (_references = new InputList<Inputs.OriginGroupReferenceGetArgs>());
            set => _references = value;
        }

        /// <summary>
        /// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
        /// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
        /// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
        /// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
        /// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// Origin site group update time.
        /// </summary>
        [Input("updateTime")]
        public Input<string>? UpdateTime { get; set; }

        /// <summary>
        /// Site ID.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public OriginGroupState()
        {
        }
        public static new OriginGroupState Empty => new OriginGroupState();
    }
}
