// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Teo
{
    [TencentcloudResourceType("tencentcloud:Teo/realtimeLogDelivery:RealtimeLogDelivery")]
    public partial class RealtimeLogDelivery : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
        /// China).
        /// </summary>
        [Output("area")]
        public Output<string> Area { get; private set; } = null!;

        /// <summary>
        /// CLS configuration information. This parameter is required when TaskType is cls.
        /// </summary>
        [Output("cls")]
        public Output<Outputs.RealtimeLogDeliveryCls> Cls { get; private set; } = null!;

        /// <summary>
        /// Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
        /// custom_endpoint.
        /// </summary>
        [Output("customEndpoint")]
        public Output<Outputs.RealtimeLogDeliveryCustomEndpoint> CustomEndpoint { get; private set; } = null!;

        /// <summary>
        /// The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
        /// headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
        /// </summary>
        [Output("customFields")]
        public Output<ImmutableArray<Outputs.RealtimeLogDeliveryCustomField>> CustomFields { get; private set; } = null!;

        /// <summary>
        /// The filter condition for log delivery. If it is not filled, all logs will be delivered.
        /// </summary>
        [Output("deliveryConditions")]
        public Output<ImmutableArray<Outputs.RealtimeLogDeliveryDeliveryCondition>> DeliveryConditions { get; private set; } = null!;

        /// <summary>
        /// The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
        /// to keep the original configuration. Not required when creating.
        /// </summary>
        [Output("deliveryStatus")]
        public Output<string> DeliveryStatus { get; private set; } = null!;

        /// <summary>
        /// List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
        /// Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
        /// sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
        /// `https://cloud.tencent.com/document/api/1552/86336`.
        /// </summary>
        [Output("entityLists")]
        public Output<ImmutableArray<string>> EntityLists { get; private set; } = null!;

        /// <summary>
        /// A list of preset fields for delivery.
        /// </summary>
        [Output("fields")]
        public Output<ImmutableArray<string>> Fields { get; private set; } = null!;

        /// <summary>
        /// The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
        /// follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
        /// is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
        /// LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
        /// LogFormat.
        /// </summary>
        [Output("logFormat")]
        public Output<Outputs.RealtimeLogDeliveryLogFormat> LogFormat { get; private set; } = null!;

        /// <summary>
        /// Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
        /// `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
        /// `web-bot`: Bot management log.
        /// </summary>
        [Output("logType")]
        public Output<string> LogType { get; private set; } = null!;

        /// <summary>
        /// Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
        /// </summary>
        [Output("s3")]
        public Output<Outputs.RealtimeLogDeliveryS3> S3 { get; private set; } = null!;

        /// <summary>
        /// The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
        /// is 60.5%. Leaving it blank means the sampling ratio is 100%.
        /// </summary>
        [Output("sample")]
        public Output<int> Sample { get; private set; } = null!;

        /// <summary>
        /// Real-time log delivery task ID.
        /// </summary>
        [Output("taskId")]
        public Output<string> TaskId { get; private set; } = null!;

        /// <summary>
        /// The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
        /// length is 200 characters.
        /// </summary>
        [Output("taskName")]
        public Output<string> TaskName { get; private set; } = null!;

        /// <summary>
        /// The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
        /// to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
        /// </summary>
        [Output("taskType")]
        public Output<string> TaskType { get; private set; } = null!;

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Output("zoneId")]
        public Output<string> ZoneId { get; private set; } = null!;


        /// <summary>
        /// Create a RealtimeLogDelivery resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public RealtimeLogDelivery(string name, RealtimeLogDeliveryArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/realtimeLogDelivery:RealtimeLogDelivery", name, args ?? new RealtimeLogDeliveryArgs(), MakeResourceOptions(options, ""))
        {
        }

        private RealtimeLogDelivery(string name, Input<string> id, RealtimeLogDeliveryState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Teo/realtimeLogDelivery:RealtimeLogDelivery", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing RealtimeLogDelivery resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static RealtimeLogDelivery Get(string name, Input<string> id, RealtimeLogDeliveryState? state = null, CustomResourceOptions? options = null)
        {
            return new RealtimeLogDelivery(name, id, state, options);
        }
    }

    public sealed class RealtimeLogDeliveryArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
        /// China).
        /// </summary>
        [Input("area", required: true)]
        public Input<string> Area { get; set; } = null!;

        /// <summary>
        /// CLS configuration information. This parameter is required when TaskType is cls.
        /// </summary>
        [Input("cls")]
        public Input<Inputs.RealtimeLogDeliveryClsArgs>? Cls { get; set; }

        /// <summary>
        /// Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
        /// custom_endpoint.
        /// </summary>
        [Input("customEndpoint")]
        public Input<Inputs.RealtimeLogDeliveryCustomEndpointArgs>? CustomEndpoint { get; set; }

        [Input("customFields")]
        private InputList<Inputs.RealtimeLogDeliveryCustomFieldArgs>? _customFields;

        /// <summary>
        /// The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
        /// headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
        /// </summary>
        public InputList<Inputs.RealtimeLogDeliveryCustomFieldArgs> CustomFields
        {
            get => _customFields ?? (_customFields = new InputList<Inputs.RealtimeLogDeliveryCustomFieldArgs>());
            set => _customFields = value;
        }

        [Input("deliveryConditions")]
        private InputList<Inputs.RealtimeLogDeliveryDeliveryConditionArgs>? _deliveryConditions;

        /// <summary>
        /// The filter condition for log delivery. If it is not filled, all logs will be delivered.
        /// </summary>
        public InputList<Inputs.RealtimeLogDeliveryDeliveryConditionArgs> DeliveryConditions
        {
            get => _deliveryConditions ?? (_deliveryConditions = new InputList<Inputs.RealtimeLogDeliveryDeliveryConditionArgs>());
            set => _deliveryConditions = value;
        }

        /// <summary>
        /// The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
        /// to keep the original configuration. Not required when creating.
        /// </summary>
        [Input("deliveryStatus")]
        public Input<string>? DeliveryStatus { get; set; }

        [Input("entityLists", required: true)]
        private InputList<string>? _entityLists;

        /// <summary>
        /// List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
        /// Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
        /// sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
        /// `https://cloud.tencent.com/document/api/1552/86336`.
        /// </summary>
        public InputList<string> EntityLists
        {
            get => _entityLists ?? (_entityLists = new InputList<string>());
            set => _entityLists = value;
        }

        [Input("fields", required: true)]
        private InputList<string>? _fields;

        /// <summary>
        /// A list of preset fields for delivery.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
        /// follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
        /// is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
        /// LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
        /// LogFormat.
        /// </summary>
        [Input("logFormat")]
        public Input<Inputs.RealtimeLogDeliveryLogFormatArgs>? LogFormat { get; set; }

        /// <summary>
        /// Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
        /// `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
        /// `web-bot`: Bot management log.
        /// </summary>
        [Input("logType", required: true)]
        public Input<string> LogType { get; set; } = null!;

        /// <summary>
        /// Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
        /// </summary>
        [Input("s3")]
        public Input<Inputs.RealtimeLogDeliveryS3Args>? S3 { get; set; }

        /// <summary>
        /// The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
        /// is 60.5%. Leaving it blank means the sampling ratio is 100%.
        /// </summary>
        [Input("sample", required: true)]
        public Input<int> Sample { get; set; } = null!;

        /// <summary>
        /// The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
        /// length is 200 characters.
        /// </summary>
        [Input("taskName", required: true)]
        public Input<string> TaskName { get; set; } = null!;

        /// <summary>
        /// The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
        /// to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<string> TaskType { get; set; } = null!;

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Input("zoneId", required: true)]
        public Input<string> ZoneId { get; set; } = null!;

        public RealtimeLogDeliveryArgs()
        {
        }
        public static new RealtimeLogDeliveryArgs Empty => new RealtimeLogDeliveryArgs();
    }

    public sealed class RealtimeLogDeliveryState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
        /// China).
        /// </summary>
        [Input("area")]
        public Input<string>? Area { get; set; }

        /// <summary>
        /// CLS configuration information. This parameter is required when TaskType is cls.
        /// </summary>
        [Input("cls")]
        public Input<Inputs.RealtimeLogDeliveryClsGetArgs>? Cls { get; set; }

        /// <summary>
        /// Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
        /// custom_endpoint.
        /// </summary>
        [Input("customEndpoint")]
        public Input<Inputs.RealtimeLogDeliveryCustomEndpointGetArgs>? CustomEndpoint { get; set; }

        [Input("customFields")]
        private InputList<Inputs.RealtimeLogDeliveryCustomFieldGetArgs>? _customFields;

        /// <summary>
        /// The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
        /// headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
        /// </summary>
        public InputList<Inputs.RealtimeLogDeliveryCustomFieldGetArgs> CustomFields
        {
            get => _customFields ?? (_customFields = new InputList<Inputs.RealtimeLogDeliveryCustomFieldGetArgs>());
            set => _customFields = value;
        }

        [Input("deliveryConditions")]
        private InputList<Inputs.RealtimeLogDeliveryDeliveryConditionGetArgs>? _deliveryConditions;

        /// <summary>
        /// The filter condition for log delivery. If it is not filled, all logs will be delivered.
        /// </summary>
        public InputList<Inputs.RealtimeLogDeliveryDeliveryConditionGetArgs> DeliveryConditions
        {
            get => _deliveryConditions ?? (_deliveryConditions = new InputList<Inputs.RealtimeLogDeliveryDeliveryConditionGetArgs>());
            set => _deliveryConditions = value;
        }

        /// <summary>
        /// The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
        /// to keep the original configuration. Not required when creating.
        /// </summary>
        [Input("deliveryStatus")]
        public Input<string>? DeliveryStatus { get; set; }

        [Input("entityLists")]
        private InputList<string>? _entityLists;

        /// <summary>
        /// List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
        /// Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
        /// sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
        /// `https://cloud.tencent.com/document/api/1552/86336`.
        /// </summary>
        public InputList<string> EntityLists
        {
            get => _entityLists ?? (_entityLists = new InputList<string>());
            set => _entityLists = value;
        }

        [Input("fields")]
        private InputList<string>? _fields;

        /// <summary>
        /// A list of preset fields for delivery.
        /// </summary>
        public InputList<string> Fields
        {
            get => _fields ?? (_fields = new InputList<string>());
            set => _fields = value;
        }

        /// <summary>
        /// The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
        /// follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
        /// is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
        /// LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
        /// LogFormat.
        /// </summary>
        [Input("logFormat")]
        public Input<Inputs.RealtimeLogDeliveryLogFormatGetArgs>? LogFormat { get; set; }

        /// <summary>
        /// Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
        /// `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
        /// `web-bot`: Bot management log.
        /// </summary>
        [Input("logType")]
        public Input<string>? LogType { get; set; }

        /// <summary>
        /// Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
        /// </summary>
        [Input("s3")]
        public Input<Inputs.RealtimeLogDeliveryS3GetArgs>? S3 { get; set; }

        /// <summary>
        /// The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
        /// is 60.5%. Leaving it blank means the sampling ratio is 100%.
        /// </summary>
        [Input("sample")]
        public Input<int>? Sample { get; set; }

        /// <summary>
        /// Real-time log delivery task ID.
        /// </summary>
        [Input("taskId")]
        public Input<string>? TaskId { get; set; }

        /// <summary>
        /// The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
        /// length is 200 characters.
        /// </summary>
        [Input("taskName")]
        public Input<string>? TaskName { get; set; }

        /// <summary>
        /// The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
        /// to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
        /// </summary>
        [Input("taskType")]
        public Input<string>? TaskType { get; set; }

        /// <summary>
        /// ID of the site.
        /// </summary>
        [Input("zoneId")]
        public Input<string>? ZoneId { get; set; }

        public RealtimeLogDeliveryState()
        {
        }
        public static new RealtimeLogDeliveryState Empty => new RealtimeLogDeliveryState();
    }
}
