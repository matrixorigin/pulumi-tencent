// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Css
{
    public static class GetXp2pDetailInfoList
    {
        public static Task<GetXp2pDetailInfoListResult> InvokeAsync(GetXp2pDetailInfoListArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetXp2pDetailInfoListResult>("tencentcloud:Css/getXp2pDetailInfoList:getXp2pDetailInfoList", args ?? new GetXp2pDetailInfoListArgs(), options.WithDefaults());

        public static Output<GetXp2pDetailInfoListResult> Invoke(GetXp2pDetailInfoListInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetXp2pDetailInfoListResult>("tencentcloud:Css/getXp2pDetailInfoList:getXp2pDetailInfoList", args ?? new GetXp2pDetailInfoListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetXp2pDetailInfoListArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        private List<string>? _dimensions;
        public List<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new List<string>());
            set => _dimensions = value;
        }

        [Input("queryTime")]
        public string? QueryTime { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("streamNames")]
        private List<string>? _streamNames;
        public List<string> StreamNames
        {
            get => _streamNames ?? (_streamNames = new List<string>());
            set => _streamNames = value;
        }

        [Input("types")]
        private List<string>? _types;
        public List<string> Types
        {
            get => _types ?? (_types = new List<string>());
            set => _types = value;
        }

        public GetXp2pDetailInfoListArgs()
        {
        }
        public static new GetXp2pDetailInfoListArgs Empty => new GetXp2pDetailInfoListArgs();
    }

    public sealed class GetXp2pDetailInfoListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        private InputList<string>? _dimensions;
        public InputList<string> Dimensions
        {
            get => _dimensions ?? (_dimensions = new InputList<string>());
            set => _dimensions = value;
        }

        [Input("queryTime")]
        public Input<string>? QueryTime { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("streamNames")]
        private InputList<string>? _streamNames;
        public InputList<string> StreamNames
        {
            get => _streamNames ?? (_streamNames = new InputList<string>());
            set => _streamNames = value;
        }

        [Input("types")]
        private InputList<string>? _types;
        public InputList<string> Types
        {
            get => _types ?? (_types = new InputList<string>());
            set => _types = value;
        }

        public GetXp2pDetailInfoListInvokeArgs()
        {
        }
        public static new GetXp2pDetailInfoListInvokeArgs Empty => new GetXp2pDetailInfoListInvokeArgs();
    }


    [OutputType]
    public sealed class GetXp2pDetailInfoListResult
    {
        public readonly ImmutableArray<Outputs.GetXp2pDetailInfoListDataInfoListResult> DataInfoLists;
        public readonly ImmutableArray<string> Dimensions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? QueryTime;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<string> StreamNames;
        public readonly ImmutableArray<string> Types;

        [OutputConstructor]
        private GetXp2pDetailInfoListResult(
            ImmutableArray<Outputs.GetXp2pDetailInfoListDataInfoListResult> dataInfoLists,

            ImmutableArray<string> dimensions,

            string id,

            string? queryTime,

            string? resultOutputFile,

            ImmutableArray<string> streamNames,

            ImmutableArray<string> types)
        {
            DataInfoLists = dataInfoLists;
            Dimensions = dimensions;
            Id = id;
            QueryTime = queryTime;
            ResultOutputFile = resultOutputFile;
            StreamNames = streamNames;
            Types = types;
        }
    }
}
