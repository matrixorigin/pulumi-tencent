// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cwp
{
    [TencentcloudResourceType("tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment")]
    public partial class LicenseBindAttachment : global::Pulumi.CustomResource
    {
        /// <summary>
        /// agent status.
        /// </summary>
        [Output("agentStatus")]
        public Output<string> AgentStatus { get; private set; } = null!;

        /// <summary>
        /// Is it allowed to change the binding, false is not allowed to change the binding.
        /// </summary>
        [Output("isSwitchBind")]
        public Output<bool> IsSwitchBind { get; private set; } = null!;

        /// <summary>
        /// Allow unbinding, false does not allow unbinding.
        /// </summary>
        [Output("isUnbind")]
        public Output<bool> IsUnbind { get; private set; } = null!;

        /// <summary>
        /// License ID.
        /// </summary>
        [Output("licenseId")]
        public Output<int> LicenseId { get; private set; } = null!;

        /// <summary>
        /// LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default
        /// is 0.
        /// </summary>
        [Output("licenseType")]
        public Output<int> LicenseType { get; private set; } = null!;

        /// <summary>
        /// machine ip.
        /// </summary>
        [Output("machineIp")]
        public Output<string> MachineIp { get; private set; } = null!;

        /// <summary>
        /// machine name.
        /// </summary>
        [Output("machineName")]
        public Output<string> MachineName { get; private set; } = null!;

        /// <summary>
        /// machine wan ip.
        /// </summary>
        [Output("machineWanIp")]
        public Output<string> MachineWanIp { get; private set; } = null!;

        /// <summary>
        /// Machine quota that needs to be bound.
        /// </summary>
        [Output("quuid")]
        public Output<string> Quuid { get; private set; } = null!;

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Output("resourceId")]
        public Output<string> ResourceId { get; private set; } = null!;

        /// <summary>
        /// uuid.
        /// </summary>
        [Output("uuid")]
        public Output<string> Uuid { get; private set; } = null!;


        /// <summary>
        /// Create a LicenseBindAttachment resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public LicenseBindAttachment(string name, LicenseBindAttachmentArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment", name, args ?? new LicenseBindAttachmentArgs(), MakeResourceOptions(options, ""))
        {
        }

        private LicenseBindAttachment(string name, Input<string> id, LicenseBindAttachmentState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cwp/licenseBindAttachment:LicenseBindAttachment", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing LicenseBindAttachment resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static LicenseBindAttachment Get(string name, Input<string> id, LicenseBindAttachmentState? state = null, CustomResourceOptions? options = null)
        {
            return new LicenseBindAttachment(name, id, state, options);
        }
    }

    public sealed class LicenseBindAttachmentArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// License ID.
        /// </summary>
        [Input("licenseId", required: true)]
        public Input<int> LicenseId { get; set; } = null!;

        /// <summary>
        /// LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default
        /// is 0.
        /// </summary>
        [Input("licenseType", required: true)]
        public Input<int> LicenseType { get; set; } = null!;

        /// <summary>
        /// Machine quota that needs to be bound.
        /// </summary>
        [Input("quuid", required: true)]
        public Input<string> Quuid { get; set; } = null!;

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("resourceId", required: true)]
        public Input<string> ResourceId { get; set; } = null!;

        public LicenseBindAttachmentArgs()
        {
        }
        public static new LicenseBindAttachmentArgs Empty => new LicenseBindAttachmentArgs();
    }

    public sealed class LicenseBindAttachmentState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// agent status.
        /// </summary>
        [Input("agentStatus")]
        public Input<string>? AgentStatus { get; set; }

        /// <summary>
        /// Is it allowed to change the binding, false is not allowed to change the binding.
        /// </summary>
        [Input("isSwitchBind")]
        public Input<bool>? IsSwitchBind { get; set; }

        /// <summary>
        /// Allow unbinding, false does not allow unbinding.
        /// </summary>
        [Input("isUnbind")]
        public Input<bool>? IsUnbind { get; set; }

        /// <summary>
        /// License ID.
        /// </summary>
        [Input("licenseId")]
        public Input<int>? LicenseId { get; set; }

        /// <summary>
        /// LicenseType, 0 CWP Pro - Pay as you go, 1 CWP Pro - Monthly subscription, 2 CWP Ultimate - Monthly subscription. Default
        /// is 0.
        /// </summary>
        [Input("licenseType")]
        public Input<int>? LicenseType { get; set; }

        /// <summary>
        /// machine ip.
        /// </summary>
        [Input("machineIp")]
        public Input<string>? MachineIp { get; set; }

        /// <summary>
        /// machine name.
        /// </summary>
        [Input("machineName")]
        public Input<string>? MachineName { get; set; }

        /// <summary>
        /// machine wan ip.
        /// </summary>
        [Input("machineWanIp")]
        public Input<string>? MachineWanIp { get; set; }

        /// <summary>
        /// Machine quota that needs to be bound.
        /// </summary>
        [Input("quuid")]
        public Input<string>? Quuid { get; set; }

        /// <summary>
        /// Resource ID.
        /// </summary>
        [Input("resourceId")]
        public Input<string>? ResourceId { get; set; }

        /// <summary>
        /// uuid.
        /// </summary>
        [Input("uuid")]
        public Input<string>? Uuid { get; set; }

        public LicenseBindAttachmentState()
        {
        }
        public static new LicenseBindAttachmentState Empty => new LicenseBindAttachmentState();
    }
}
