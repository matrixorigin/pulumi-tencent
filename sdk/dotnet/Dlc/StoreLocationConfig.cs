// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dlc
{
    [TencentcloudResourceType("tencentcloud:Dlc/storeLocationConfig:StoreLocationConfig")]
    public partial class StoreLocationConfig : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to enable advanced settings: 0-no, 1-yes.
        /// </summary>
        [Output("enable")]
        public Output<int> Enable { get; private set; } = null!;

        /// <summary>
        /// The calculation results are stored in the cos path, such as: cosn://bucketname/.
        /// </summary>
        [Output("storeLocation")]
        public Output<string> StoreLocation { get; private set; } = null!;


        /// <summary>
        /// Create a StoreLocationConfig resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public StoreLocationConfig(string name, StoreLocationConfigArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dlc/storeLocationConfig:StoreLocationConfig", name, args ?? new StoreLocationConfigArgs(), MakeResourceOptions(options, ""))
        {
        }

        private StoreLocationConfig(string name, Input<string> id, StoreLocationConfigState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dlc/storeLocationConfig:StoreLocationConfig", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing StoreLocationConfig resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static StoreLocationConfig Get(string name, Input<string> id, StoreLocationConfigState? state = null, CustomResourceOptions? options = null)
        {
            return new StoreLocationConfig(name, id, state, options);
        }
    }

    public sealed class StoreLocationConfigArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable advanced settings: 0-no, 1-yes.
        /// </summary>
        [Input("enable", required: true)]
        public Input<int> Enable { get; set; } = null!;

        /// <summary>
        /// The calculation results are stored in the cos path, such as: cosn://bucketname/.
        /// </summary>
        [Input("storeLocation", required: true)]
        public Input<string> StoreLocation { get; set; } = null!;

        public StoreLocationConfigArgs()
        {
        }
        public static new StoreLocationConfigArgs Empty => new StoreLocationConfigArgs();
    }

    public sealed class StoreLocationConfigState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to enable advanced settings: 0-no, 1-yes.
        /// </summary>
        [Input("enable")]
        public Input<int>? Enable { get; set; }

        /// <summary>
        /// The calculation results are stored in the cos path, such as: cosn://bucketname/.
        /// </summary>
        [Input("storeLocation")]
        public Input<string>? StoreLocation { get; set; }

        public StoreLocationConfigState()
        {
        }
        public static new StoreLocationConfigState Empty => new StoreLocationConfigState();
    }
}
