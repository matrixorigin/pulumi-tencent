// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dlc.Outputs
{

    [OutputType]
    public sealed class GetDescribeDataEngineDataEngineResult
    {
        public readonly bool AutoResume;
        public readonly bool AutoSuspend;
        public readonly int AutoSuspendTime;
        public readonly string ChildImageVersionId;
        public readonly string CidrBlock;
        public readonly string ClusterType;
        public readonly int CreateTime;
        public readonly int CrontabResumeSuspend;
        public readonly ImmutableArray<Outputs.GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyResult> CrontabResumeSuspendStrategies;
        public readonly string DataEngineId;
        public readonly string DataEngineName;
        public readonly bool DefaultDataEngine;
        public readonly bool DefaultHouse;
        public readonly int ElasticLimit;
        public readonly bool ElasticSwitch;
        public readonly string EngineExecType;
        public readonly string EngineType;
        public readonly string ExpireTime;
        public readonly string ImageVersionId;
        public readonly string ImageVersionName;
        public readonly string IsolatedTime;
        public readonly int MaxClusters;
        public readonly int MaxConcurrency;
        public readonly string Message;
        public readonly int MinClusters;
        public readonly int Mode;
        public readonly ImmutableArray<Outputs.GetDescribeDataEngineDataEngineNetworkConnectionSetResult> NetworkConnectionSets;
        public readonly ImmutableArray<string> Permissions;
        public readonly string QuotaId;
        public readonly int RenewFlag;
        public readonly string ResourceType;
        public readonly string ReversalTime;
        public readonly ImmutableArray<Outputs.GetDescribeDataEngineDataEngineSessionResourceTemplateResult> SessionResourceTemplates;
        public readonly int Size;
        public readonly int SpendAfter;
        public readonly bool StartStandbyCluster;
        public readonly int State;
        public readonly string SubAccountUin;
        public readonly ImmutableArray<Outputs.GetDescribeDataEngineDataEngineTagListResult> TagLists;
        public readonly int TolerableQueueTime;
        public readonly string UiURL;
        public readonly int UpdateTime;
        public readonly string UserAlias;
        public readonly int UserAppId;
        public readonly string UserUin;

        [OutputConstructor]
        private GetDescribeDataEngineDataEngineResult(
            bool autoResume,

            bool autoSuspend,

            int autoSuspendTime,

            string childImageVersionId,

            string cidrBlock,

            string clusterType,

            int createTime,

            int crontabResumeSuspend,

            ImmutableArray<Outputs.GetDescribeDataEngineDataEngineCrontabResumeSuspendStrategyResult> crontabResumeSuspendStrategies,

            string dataEngineId,

            string dataEngineName,

            bool defaultDataEngine,

            bool defaultHouse,

            int elasticLimit,

            bool elasticSwitch,

            string engineExecType,

            string engineType,

            string expireTime,

            string imageVersionId,

            string imageVersionName,

            string isolatedTime,

            int maxClusters,

            int maxConcurrency,

            string message,

            int minClusters,

            int mode,

            ImmutableArray<Outputs.GetDescribeDataEngineDataEngineNetworkConnectionSetResult> networkConnectionSets,

            ImmutableArray<string> permissions,

            string quotaId,

            int renewFlag,

            string resourceType,

            string reversalTime,

            ImmutableArray<Outputs.GetDescribeDataEngineDataEngineSessionResourceTemplateResult> sessionResourceTemplates,

            int size,

            int spendAfter,

            bool startStandbyCluster,

            int state,

            string subAccountUin,

            ImmutableArray<Outputs.GetDescribeDataEngineDataEngineTagListResult> tagLists,

            int tolerableQueueTime,

            string uiURL,

            int updateTime,

            string userAlias,

            int userAppId,

            string userUin)
        {
            AutoResume = autoResume;
            AutoSuspend = autoSuspend;
            AutoSuspendTime = autoSuspendTime;
            ChildImageVersionId = childImageVersionId;
            CidrBlock = cidrBlock;
            ClusterType = clusterType;
            CreateTime = createTime;
            CrontabResumeSuspend = crontabResumeSuspend;
            CrontabResumeSuspendStrategies = crontabResumeSuspendStrategies;
            DataEngineId = dataEngineId;
            DataEngineName = dataEngineName;
            DefaultDataEngine = defaultDataEngine;
            DefaultHouse = defaultHouse;
            ElasticLimit = elasticLimit;
            ElasticSwitch = elasticSwitch;
            EngineExecType = engineExecType;
            EngineType = engineType;
            ExpireTime = expireTime;
            ImageVersionId = imageVersionId;
            ImageVersionName = imageVersionName;
            IsolatedTime = isolatedTime;
            MaxClusters = maxClusters;
            MaxConcurrency = maxConcurrency;
            Message = message;
            MinClusters = minClusters;
            Mode = mode;
            NetworkConnectionSets = networkConnectionSets;
            Permissions = permissions;
            QuotaId = quotaId;
            RenewFlag = renewFlag;
            ResourceType = resourceType;
            ReversalTime = reversalTime;
            SessionResourceTemplates = sessionResourceTemplates;
            Size = size;
            SpendAfter = spendAfter;
            StartStandbyCluster = startStandbyCluster;
            State = state;
            SubAccountUin = subAccountUin;
            TagLists = tagLists;
            TolerableQueueTime = tolerableQueueTime;
            UiURL = uiURL;
            UpdateTime = updateTime;
            UserAlias = userAlias;
            UserAppId = userAppId;
            UserUin = userUin;
        }
    }
}
