// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Vod
{
    [TencentcloudResourceType("tencentcloud:Vod/watermarkTemplate:WatermarkTemplate")]
    public partial class WatermarkTemplate : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Template description. Length limit: 256 characters.
        /// </summary>
        [Output("comment")]
        public Output<string> Comment { get; private set; } = null!;

        /// <summary>
        /// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
        /// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
        /// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
        /// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
        /// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
        /// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
        /// </summary>
        [Output("coordinateOrigin")]
        public Output<string> CoordinateOrigin { get; private set; } = null!;

        /// <summary>
        /// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
        /// </summary>
        [Output("imageTemplate")]
        public Output<Outputs.WatermarkTemplateImageTemplate> ImageTemplate { get; private set; } = null!;

        /// <summary>
        /// Watermarking template name. Length limit: 64 characters.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
        /// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
        /// application or a newly created one), they must fill in this field with the application ID.
        /// </summary>
        [Output("subAppId")]
        public Output<int> SubAppId { get; private set; } = null!;

        /// <summary>
        /// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
        /// </summary>
        [Output("svgTemplate")]
        public Output<Outputs.WatermarkTemplateSvgTemplate> SvgTemplate { get; private set; } = null!;

        /// <summary>
        /// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
        /// </summary>
        [Output("textTemplate")]
        public Output<Outputs.WatermarkTemplateTextTemplate> TextTemplate { get; private set; } = null!;

        /// <summary>
        /// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;

        /// <summary>
        /// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
        /// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
        /// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Output("xPos")]
        public Output<string> XPos { get; private set; } = null!;

        /// <summary>
        /// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
        /// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
        /// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Output("yPos")]
        public Output<string> YPos { get; private set; } = null!;


        /// <summary>
        /// Create a WatermarkTemplate resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public WatermarkTemplate(string name, WatermarkTemplateArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Vod/watermarkTemplate:WatermarkTemplate", name, args ?? new WatermarkTemplateArgs(), MakeResourceOptions(options, ""))
        {
        }

        private WatermarkTemplate(string name, Input<string> id, WatermarkTemplateState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Vod/watermarkTemplate:WatermarkTemplate", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing WatermarkTemplate resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static WatermarkTemplate Get(string name, Input<string> id, WatermarkTemplateState? state = null, CustomResourceOptions? options = null)
        {
            return new WatermarkTemplate(name, id, state, options);
        }
    }

    public sealed class WatermarkTemplateArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Template description. Length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
        /// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
        /// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
        /// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
        /// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
        /// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
        /// </summary>
        [Input("coordinateOrigin")]
        public Input<string>? CoordinateOrigin { get; set; }

        /// <summary>
        /// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
        /// </summary>
        [Input("imageTemplate")]
        public Input<Inputs.WatermarkTemplateImageTemplateArgs>? ImageTemplate { get; set; }

        /// <summary>
        /// Watermarking template name. Length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
        /// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
        /// application or a newly created one), they must fill in this field with the application ID.
        /// </summary>
        [Input("subAppId", required: true)]
        public Input<int> SubAppId { get; set; } = null!;

        /// <summary>
        /// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
        /// </summary>
        [Input("svgTemplate")]
        public Input<Inputs.WatermarkTemplateSvgTemplateArgs>? SvgTemplate { get; set; }

        /// <summary>
        /// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
        /// </summary>
        [Input("textTemplate")]
        public Input<Inputs.WatermarkTemplateTextTemplateArgs>? TextTemplate { get; set; }

        /// <summary>
        /// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        /// <summary>
        /// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
        /// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
        /// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Input("xPos")]
        public Input<string>? XPos { get; set; }

        /// <summary>
        /// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
        /// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
        /// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Input("yPos")]
        public Input<string>? YPos { get; set; }

        public WatermarkTemplateArgs()
        {
        }
        public static new WatermarkTemplateArgs Empty => new WatermarkTemplateArgs();
    }

    public sealed class WatermarkTemplateState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Template description. Length limit: 256 characters.
        /// </summary>
        [Input("comment")]
        public Input<string>? Comment { get; set; }

        /// <summary>
        /// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
        /// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
        /// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
        /// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
        /// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
        /// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
        /// </summary>
        [Input("coordinateOrigin")]
        public Input<string>? CoordinateOrigin { get; set; }

        /// <summary>
        /// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
        /// </summary>
        [Input("imageTemplate")]
        public Input<Inputs.WatermarkTemplateImageTemplateGetArgs>? ImageTemplate { get; set; }

        /// <summary>
        /// Watermarking template name. Length limit: 64 characters.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
        /// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
        /// application or a newly created one), they must fill in this field with the application ID.
        /// </summary>
        [Input("subAppId")]
        public Input<int>? SubAppId { get; set; }

        /// <summary>
        /// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
        /// </summary>
        [Input("svgTemplate")]
        public Input<Inputs.WatermarkTemplateSvgTemplateGetArgs>? SvgTemplate { get; set; }

        /// <summary>
        /// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
        /// </summary>
        [Input("textTemplate")]
        public Input<Inputs.WatermarkTemplateTextTemplateGetArgs>? TextTemplate { get; set; }

        /// <summary>
        /// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        /// <summary>
        /// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
        /// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
        /// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Input("xPos")]
        public Input<string>? XPos { get; set; }

        /// <summary>
        /// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
        /// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
        /// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
        /// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
        /// </summary>
        [Input("yPos")]
        public Input<string>? YPos { get; set; }

        public WatermarkTemplateState()
        {
        }
        public static new WatermarkTemplateState Empty => new WatermarkTemplateState();
    }
}
