// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Elasticsearch.Outputs
{

    [OutputType]
    public sealed class GetViewsClusterViewResult
    {
        public readonly double AvgCpuUsage;
        public readonly double AvgDiskUsage;
        public readonly double AvgMemUsage;
        public readonly double Break;
        public readonly int DataNodeNum;
        public readonly int DiskUsedInBytes;
        public readonly int DocNum;
        public readonly double Health;
        public readonly int IndexNum;
        public readonly int InitializingShardNum;
        public readonly int NodeNum;
        public readonly int PrimaryShardNum;
        public readonly int RelocatingShardNum;
        public readonly string SearchableSnapshotCosAppId;
        public readonly string SearchableSnapshotCosBucket;
        public readonly int ShardNum;
        public readonly ImmutableArray<string> TargetNodeTypes;
        public readonly int TotalCosStorage;
        public readonly int TotalDiskSize;
        public readonly int TotalNodeNum;
        public readonly int UnassignedShardNum;
        public readonly double Visible;

        [OutputConstructor]
        private GetViewsClusterViewResult(
            double avgCpuUsage,

            double avgDiskUsage,

            double avgMemUsage,

            double @break,

            int dataNodeNum,

            int diskUsedInBytes,

            int docNum,

            double health,

            int indexNum,

            int initializingShardNum,

            int nodeNum,

            int primaryShardNum,

            int relocatingShardNum,

            string searchableSnapshotCosAppId,

            string searchableSnapshotCosBucket,

            int shardNum,

            ImmutableArray<string> targetNodeTypes,

            int totalCosStorage,

            int totalDiskSize,

            int totalNodeNum,

            int unassignedShardNum,

            double visible)
        {
            AvgCpuUsage = avgCpuUsage;
            AvgDiskUsage = avgDiskUsage;
            AvgMemUsage = avgMemUsage;
            Break = @break;
            DataNodeNum = dataNodeNum;
            DiskUsedInBytes = diskUsedInBytes;
            DocNum = docNum;
            Health = health;
            IndexNum = indexNum;
            InitializingShardNum = initializingShardNum;
            NodeNum = nodeNum;
            PrimaryShardNum = primaryShardNum;
            RelocatingShardNum = relocatingShardNum;
            SearchableSnapshotCosAppId = searchableSnapshotCosAppId;
            SearchableSnapshotCosBucket = searchableSnapshotCosBucket;
            ShardNum = shardNum;
            TargetNodeTypes = targetNodeTypes;
            TotalCosStorage = totalCosStorage;
            TotalDiskSize = totalDiskSize;
            TotalNodeNum = totalNodeNum;
            UnassignedShardNum = unassignedShardNum;
            Visible = visible;
        }
    }
}
