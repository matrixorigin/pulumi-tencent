// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Elasticsearch
{
    [TencentcloudResourceType("tencentcloud:Elasticsearch/diagnoseInstance:DiagnoseInstance")]
    public partial class DiagnoseInstance : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Indexes that need to be diagnosed. Wildcards are supported.
        /// </summary>
        [Output("diagnoseIndices")]
        public Output<string?> DiagnoseIndices { get; private set; } = null!;

        /// <summary>
        /// Diagnostic items that need to be triggered.
        /// </summary>
        [Output("diagnoseJobs")]
        public Output<ImmutableArray<string>> DiagnoseJobs { get; private set; } = null!;

        /// <summary>
        /// Instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;


        /// <summary>
        /// Create a DiagnoseInstance resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DiagnoseInstance(string name, DiagnoseInstanceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Elasticsearch/diagnoseInstance:DiagnoseInstance", name, args ?? new DiagnoseInstanceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DiagnoseInstance(string name, Input<string> id, DiagnoseInstanceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Elasticsearch/diagnoseInstance:DiagnoseInstance", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DiagnoseInstance resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DiagnoseInstance Get(string name, Input<string> id, DiagnoseInstanceState? state = null, CustomResourceOptions? options = null)
        {
            return new DiagnoseInstance(name, id, state, options);
        }
    }

    public sealed class DiagnoseInstanceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indexes that need to be diagnosed. Wildcards are supported.
        /// </summary>
        [Input("diagnoseIndices")]
        public Input<string>? DiagnoseIndices { get; set; }

        [Input("diagnoseJobs")]
        private InputList<string>? _diagnoseJobs;

        /// <summary>
        /// Diagnostic items that need to be triggered.
        /// </summary>
        public InputList<string> DiagnoseJobs
        {
            get => _diagnoseJobs ?? (_diagnoseJobs = new InputList<string>());
            set => _diagnoseJobs = value;
        }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public DiagnoseInstanceArgs()
        {
        }
        public static new DiagnoseInstanceArgs Empty => new DiagnoseInstanceArgs();
    }

    public sealed class DiagnoseInstanceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Indexes that need to be diagnosed. Wildcards are supported.
        /// </summary>
        [Input("diagnoseIndices")]
        public Input<string>? DiagnoseIndices { get; set; }

        [Input("diagnoseJobs")]
        private InputList<string>? _diagnoseJobs;

        /// <summary>
        /// Diagnostic items that need to be triggered.
        /// </summary>
        public InputList<string> DiagnoseJobs
        {
            get => _diagnoseJobs ?? (_diagnoseJobs = new InputList<string>());
            set => _diagnoseJobs = value;
        }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        public DiagnoseInstanceState()
        {
        }
        public static new DiagnoseInstanceState Empty => new DiagnoseInstanceState();
    }
}
