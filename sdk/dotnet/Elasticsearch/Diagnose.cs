// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Elasticsearch
{
    [TencentcloudResourceType("tencentcloud:Elasticsearch/diagnose:Diagnose")]
    public partial class Diagnose : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Intelligent operation and maintenance staff regularly patrol the inspection time every day, the time format is HH:00:00,
        /// such as 15:00:00.
        /// </summary>
        [Output("cronTime")]
        public Output<string?> CronTime { get; private set; } = null!;

        /// <summary>
        /// Diagnostic items and meta-information of intelligent operation and maintenance.
        /// </summary>
        [Output("diagnoseJobMetas")]
        public Output<ImmutableArray<Outputs.DiagnoseDiagnoseJobMeta>> DiagnoseJobMetas { get; private set; } = null!;

        /// <summary>
        /// Instance id.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// The maximum number of manual triggers per day for intelligent operation and maintenance staff.
        /// </summary>
        [Output("maxCount")]
        public Output<int> MaxCount { get; private set; } = null!;


        /// <summary>
        /// Create a Diagnose resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Diagnose(string name, DiagnoseArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Elasticsearch/diagnose:Diagnose", name, args ?? new DiagnoseArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Diagnose(string name, Input<string> id, DiagnoseState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Elasticsearch/diagnose:Diagnose", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Diagnose resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Diagnose Get(string name, Input<string> id, DiagnoseState? state = null, CustomResourceOptions? options = null)
        {
            return new Diagnose(name, id, state, options);
        }
    }

    public sealed class DiagnoseArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Intelligent operation and maintenance staff regularly patrol the inspection time every day, the time format is HH:00:00,
        /// such as 15:00:00.
        /// </summary>
        [Input("cronTime")]
        public Input<string>? CronTime { get; set; }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        public DiagnoseArgs()
        {
        }
        public static new DiagnoseArgs Empty => new DiagnoseArgs();
    }

    public sealed class DiagnoseState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Intelligent operation and maintenance staff regularly patrol the inspection time every day, the time format is HH:00:00,
        /// such as 15:00:00.
        /// </summary>
        [Input("cronTime")]
        public Input<string>? CronTime { get; set; }

        [Input("diagnoseJobMetas")]
        private InputList<Inputs.DiagnoseDiagnoseJobMetaGetArgs>? _diagnoseJobMetas;

        /// <summary>
        /// Diagnostic items and meta-information of intelligent operation and maintenance.
        /// </summary>
        public InputList<Inputs.DiagnoseDiagnoseJobMetaGetArgs> DiagnoseJobMetas
        {
            get => _diagnoseJobMetas ?? (_diagnoseJobMetas = new InputList<Inputs.DiagnoseDiagnoseJobMetaGetArgs>());
            set => _diagnoseJobMetas = value;
        }

        /// <summary>
        /// Instance id.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        /// <summary>
        /// The maximum number of manual triggers per day for intelligent operation and maintenance staff.
        /// </summary>
        [Input("maxCount")]
        public Input<int>? MaxCount { get; set; }

        public DiagnoseState()
        {
        }
        public static new DiagnoseState Empty => new DiagnoseState();
    }
}
