// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Rum
{
    public static class GetEventUrl
    {
        public static Task<GetEventUrlResult> InvokeAsync(GetEventUrlArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventUrlResult>("tencentcloud:Rum/getEventUrl:getEventUrl", args ?? new GetEventUrlArgs(), options.WithDefaults());

        public static Output<GetEventUrlResult> Invoke(GetEventUrlInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventUrlResult>("tencentcloud:Rum/getEventUrl:getEventUrl", args ?? new GetEventUrlInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventUrlArgs : global::Pulumi.InvokeArgs
    {
        [Input("area")]
        public string? Area { get; set; }

        [Input("brand")]
        public string? Brand { get; set; }

        [Input("browser")]
        public string? Browser { get; set; }

        [Input("device")]
        public string? Device { get; set; }

        [Input("endTime", required: true)]
        public int EndTime { get; set; }

        [Input("engine")]
        public string? Engine { get; set; }

        [Input("env")]
        public string? Env { get; set; }

        [Input("extFirst")]
        public string? ExtFirst { get; set; }

        [Input("extSecond")]
        public string? ExtSecond { get; set; }

        [Input("extThird")]
        public string? ExtThird { get; set; }

        [Input("from")]
        public string? From { get; set; }

        [Input("isAbroad")]
        public string? IsAbroad { get; set; }

        [Input("isp")]
        public string? Isp { get; set; }

        [Input("level")]
        public string? Level { get; set; }

        [Input("name")]
        public string? Name { get; set; }

        [Input("netType")]
        public string? NetType { get; set; }

        [Input("os")]
        public string? Os { get; set; }

        [Input("platform")]
        public string? Platform { get; set; }

        [Input("projectId", required: true)]
        public int ProjectId { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startTime", required: true)]
        public int StartTime { get; set; }

        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        [Input("versionNum")]
        public string? VersionNum { get; set; }

        public GetEventUrlArgs()
        {
        }
        public static new GetEventUrlArgs Empty => new GetEventUrlArgs();
    }

    public sealed class GetEventUrlInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("area")]
        public Input<string>? Area { get; set; }

        [Input("brand")]
        public Input<string>? Brand { get; set; }

        [Input("browser")]
        public Input<string>? Browser { get; set; }

        [Input("device")]
        public Input<string>? Device { get; set; }

        [Input("endTime", required: true)]
        public Input<int> EndTime { get; set; } = null!;

        [Input("engine")]
        public Input<string>? Engine { get; set; }

        [Input("env")]
        public Input<string>? Env { get; set; }

        [Input("extFirst")]
        public Input<string>? ExtFirst { get; set; }

        [Input("extSecond")]
        public Input<string>? ExtSecond { get; set; }

        [Input("extThird")]
        public Input<string>? ExtThird { get; set; }

        [Input("from")]
        public Input<string>? From { get; set; }

        [Input("isAbroad")]
        public Input<string>? IsAbroad { get; set; }

        [Input("isp")]
        public Input<string>? Isp { get; set; }

        [Input("level")]
        public Input<string>? Level { get; set; }

        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("netType")]
        public Input<string>? NetType { get; set; }

        [Input("os")]
        public Input<string>? Os { get; set; }

        [Input("platform")]
        public Input<string>? Platform { get; set; }

        [Input("projectId", required: true)]
        public Input<int> ProjectId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startTime", required: true)]
        public Input<int> StartTime { get; set; } = null!;

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("versionNum")]
        public Input<string>? VersionNum { get; set; }

        public GetEventUrlInvokeArgs()
        {
        }
        public static new GetEventUrlInvokeArgs Empty => new GetEventUrlInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventUrlResult
    {
        public readonly string? Area;
        public readonly string? Brand;
        public readonly string? Browser;
        public readonly string? Device;
        public readonly int EndTime;
        public readonly string? Engine;
        public readonly string? Env;
        public readonly string? ExtFirst;
        public readonly string? ExtSecond;
        public readonly string? ExtThird;
        public readonly string? From;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? IsAbroad;
        public readonly string? Isp;
        public readonly string? Level;
        public readonly string? Name;
        public readonly string? NetType;
        public readonly string? Os;
        public readonly string? Platform;
        public readonly int ProjectId;
        public readonly string Result;
        public readonly string? ResultOutputFile;
        public readonly int StartTime;
        public readonly string Type;
        public readonly string? VersionNum;

        [OutputConstructor]
        private GetEventUrlResult(
            string? area,

            string? brand,

            string? browser,

            string? device,

            int endTime,

            string? engine,

            string? env,

            string? extFirst,

            string? extSecond,

            string? extThird,

            string? from,

            string id,

            string? isAbroad,

            string? isp,

            string? level,

            string? name,

            string? netType,

            string? os,

            string? platform,

            int projectId,

            string result,

            string? resultOutputFile,

            int startTime,

            string type,

            string? versionNum)
        {
            Area = area;
            Brand = brand;
            Browser = browser;
            Device = device;
            EndTime = endTime;
            Engine = engine;
            Env = env;
            ExtFirst = extFirst;
            ExtSecond = extSecond;
            ExtThird = extThird;
            From = from;
            Id = id;
            IsAbroad = isAbroad;
            Isp = isp;
            Level = level;
            Name = name;
            NetType = netType;
            Os = os;
            Platform = platform;
            ProjectId = projectId;
            Result = result;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
            Type = type;
            VersionNum = versionNum;
        }
    }
}
