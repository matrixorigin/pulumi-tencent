// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Rum
{
    public static class GetTawArea
    {
        public static Task<GetTawAreaResult> InvokeAsync(GetTawAreaArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTawAreaResult>("tencentcloud:Rum/getTawArea:getTawArea", args ?? new GetTawAreaArgs(), options.WithDefaults());

        public static Output<GetTawAreaResult> Invoke(GetTawAreaInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTawAreaResult>("tencentcloud:Rum/getTawArea:getTawArea", args ?? new GetTawAreaInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTawAreaArgs : global::Pulumi.InvokeArgs
    {
        [Input("areaIds")]
        private List<int>? _areaIds;
        public List<int> AreaIds
        {
            get => _areaIds ?? (_areaIds = new List<int>());
            set => _areaIds = value;
        }

        [Input("areaKeys")]
        private List<string>? _areaKeys;
        public List<string> AreaKeys
        {
            get => _areaKeys ?? (_areaKeys = new List<string>());
            set => _areaKeys = value;
        }

        [Input("areaStatuses")]
        private List<int>? _areaStatuses;
        public List<int> AreaStatuses
        {
            get => _areaStatuses ?? (_areaStatuses = new List<int>());
            set => _areaStatuses = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetTawAreaArgs()
        {
        }
        public static new GetTawAreaArgs Empty => new GetTawAreaArgs();
    }

    public sealed class GetTawAreaInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("areaIds")]
        private InputList<int>? _areaIds;
        public InputList<int> AreaIds
        {
            get => _areaIds ?? (_areaIds = new InputList<int>());
            set => _areaIds = value;
        }

        [Input("areaKeys")]
        private InputList<string>? _areaKeys;
        public InputList<string> AreaKeys
        {
            get => _areaKeys ?? (_areaKeys = new InputList<string>());
            set => _areaKeys = value;
        }

        [Input("areaStatuses")]
        private InputList<int>? _areaStatuses;
        public InputList<int> AreaStatuses
        {
            get => _areaStatuses ?? (_areaStatuses = new InputList<int>());
            set => _areaStatuses = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetTawAreaInvokeArgs()
        {
        }
        public static new GetTawAreaInvokeArgs Empty => new GetTawAreaInvokeArgs();
    }


    [OutputType]
    public sealed class GetTawAreaResult
    {
        public readonly ImmutableArray<int> AreaIds;
        public readonly ImmutableArray<string> AreaKeys;
        public readonly ImmutableArray<Outputs.GetTawAreaAreaSetResult> AreaSets;
        public readonly ImmutableArray<int> AreaStatuses;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetTawAreaResult(
            ImmutableArray<int> areaIds,

            ImmutableArray<string> areaKeys,

            ImmutableArray<Outputs.GetTawAreaAreaSetResult> areaSets,

            ImmutableArray<int> areaStatuses,

            string id,

            string? resultOutputFile)
        {
            AreaIds = areaIds;
            AreaKeys = areaKeys;
            AreaSets = areaSets;
            AreaStatuses = areaStatuses;
            Id = id;
            ResultOutputFile = resultOutputFile;
        }
    }
}
