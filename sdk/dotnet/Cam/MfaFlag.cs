// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cam
{
    [TencentcloudResourceType("tencentcloud:Cam/mfaFlag:MfaFlag")]
    public partial class MfaFlag : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Action flag setting.
        /// </summary>
        [Output("actionFlag")]
        public Output<Outputs.MfaFlagActionFlag?> ActionFlag { get; private set; } = null!;

        /// <summary>
        /// Login flag setting.
        /// </summary>
        [Output("loginFlag")]
        public Output<Outputs.MfaFlagLoginFlag?> LoginFlag { get; private set; } = null!;

        /// <summary>
        /// Operate uin.
        /// </summary>
        [Output("opUin")]
        public Output<int> OpUin { get; private set; } = null!;


        /// <summary>
        /// Create a MfaFlag resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public MfaFlag(string name, MfaFlagArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/mfaFlag:MfaFlag", name, args ?? new MfaFlagArgs(), MakeResourceOptions(options, ""))
        {
        }

        private MfaFlag(string name, Input<string> id, MfaFlagState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/mfaFlag:MfaFlag", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing MfaFlag resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static MfaFlag Get(string name, Input<string> id, MfaFlagState? state = null, CustomResourceOptions? options = null)
        {
            return new MfaFlag(name, id, state, options);
        }
    }

    public sealed class MfaFlagArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action flag setting.
        /// </summary>
        [Input("actionFlag")]
        public Input<Inputs.MfaFlagActionFlagArgs>? ActionFlag { get; set; }

        /// <summary>
        /// Login flag setting.
        /// </summary>
        [Input("loginFlag")]
        public Input<Inputs.MfaFlagLoginFlagArgs>? LoginFlag { get; set; }

        /// <summary>
        /// Operate uin.
        /// </summary>
        [Input("opUin", required: true)]
        public Input<int> OpUin { get; set; } = null!;

        public MfaFlagArgs()
        {
        }
        public static new MfaFlagArgs Empty => new MfaFlagArgs();
    }

    public sealed class MfaFlagState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Action flag setting.
        /// </summary>
        [Input("actionFlag")]
        public Input<Inputs.MfaFlagActionFlagGetArgs>? ActionFlag { get; set; }

        /// <summary>
        /// Login flag setting.
        /// </summary>
        [Input("loginFlag")]
        public Input<Inputs.MfaFlagLoginFlagGetArgs>? LoginFlag { get; set; }

        /// <summary>
        /// Operate uin.
        /// </summary>
        [Input("opUin")]
        public Input<int>? OpUin { get; set; }

        public MfaFlagState()
        {
        }
        public static new MfaFlagState Empty => new MfaFlagState();
    }
}
