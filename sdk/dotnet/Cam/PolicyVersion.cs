// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cam
{
    [TencentcloudResourceType("tencentcloud:Cam/policyVersion:PolicyVersion")]
    public partial class PolicyVersion : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Strategic text information.
        /// </summary>
        [Output("policyDocument")]
        public Output<string> PolicyDocument { get; private set; } = null!;

        /// <summary>
        /// Strategy ID.
        /// </summary>
        [Output("policyId")]
        public Output<int> PolicyId { get; private set; } = null!;

        /// <summary>
        /// Strategic version detailsNote: This field may return NULL, indicating that the valid value cannot be obtained.
        /// </summary>
        [Output("policyVersions")]
        public Output<ImmutableArray<Outputs.PolicyVersionPolicyVersion>> CamPolicyVersion { get; private set; } = null!;

        /// <summary>
        /// Whether to set as a version of the current strategy.
        /// </summary>
        [Output("setAsDefault")]
        public Output<bool> SetAsDefault { get; private set; } = null!;


        /// <summary>
        /// Create a PolicyVersion resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PolicyVersion(string name, PolicyVersionArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/policyVersion:PolicyVersion", name, args ?? new PolicyVersionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PolicyVersion(string name, Input<string> id, PolicyVersionState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Cam/policyVersion:PolicyVersion", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PolicyVersion resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PolicyVersion Get(string name, Input<string> id, PolicyVersionState? state = null, CustomResourceOptions? options = null)
        {
            return new PolicyVersion(name, id, state, options);
        }
    }

    public sealed class PolicyVersionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Strategic text information.
        /// </summary>
        [Input("policyDocument", required: true)]
        public Input<string> PolicyDocument { get; set; } = null!;

        /// <summary>
        /// Strategy ID.
        /// </summary>
        [Input("policyId", required: true)]
        public Input<int> PolicyId { get; set; } = null!;

        [Input("policyVersions")]
        private InputList<Inputs.PolicyVersionPolicyVersionArgs>? _policyVersions;

        /// <summary>
        /// Strategic version detailsNote: This field may return NULL, indicating that the valid value cannot be obtained.
        /// </summary>
        public InputList<Inputs.PolicyVersionPolicyVersionArgs> CamPolicyVersion
        {
            get => _policyVersions ?? (_policyVersions = new InputList<Inputs.PolicyVersionPolicyVersionArgs>());
            set => _policyVersions = value;
        }

        /// <summary>
        /// Whether to set as a version of the current strategy.
        /// </summary>
        [Input("setAsDefault", required: true)]
        public Input<bool> SetAsDefault { get; set; } = null!;

        public PolicyVersionArgs()
        {
        }
        public static new PolicyVersionArgs Empty => new PolicyVersionArgs();
    }

    public sealed class PolicyVersionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Strategic text information.
        /// </summary>
        [Input("policyDocument")]
        public Input<string>? PolicyDocument { get; set; }

        /// <summary>
        /// Strategy ID.
        /// </summary>
        [Input("policyId")]
        public Input<int>? PolicyId { get; set; }

        [Input("policyVersions")]
        private InputList<Inputs.PolicyVersionPolicyVersionGetArgs>? _policyVersions;

        /// <summary>
        /// Strategic version detailsNote: This field may return NULL, indicating that the valid value cannot be obtained.
        /// </summary>
        public InputList<Inputs.PolicyVersionPolicyVersionGetArgs> CamPolicyVersion
        {
            get => _policyVersions ?? (_policyVersions = new InputList<Inputs.PolicyVersionPolicyVersionGetArgs>());
            set => _policyVersions = value;
        }

        /// <summary>
        /// Whether to set as a version of the current strategy.
        /// </summary>
        [Input("setAsDefault")]
        public Input<bool>? SetAsDefault { get; set; }

        public PolicyVersionState()
        {
        }
        public static new PolicyVersionState Empty => new PolicyVersionState();
    }
}
