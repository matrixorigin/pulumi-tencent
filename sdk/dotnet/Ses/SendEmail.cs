// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ses
{
    [TencentcloudResourceType("tencentcloud:Ses/sendEmail:SendEmail")]
    public partial class SendEmail : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the
        /// size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total
        /// size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        /// </summary>
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.SendEmailAttachment>> Attachments { get; private set; } = null!;

        /// <summary>
        /// The email address of the cc recipient can support up to 20 cc recipients.
        /// </summary>
        [Output("bccs")]
        public Output<ImmutableArray<string>> Bccs { get; private set; } = null!;

        /// <summary>
        /// Cc recipient email address, up to 20 people can be copied.
        /// </summary>
        [Output("ccs")]
        public Output<ImmutableArray<string>> Ccs { get; private set; } = null!;

        /// <summary>
        /// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display
        /// all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the
        /// emails.
        /// </summary>
        [Output("destinations")]
        public Output<ImmutableArray<string>> Destinations { get; private set; } = null!;

        /// <summary>
        /// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the
        /// address in the following format:Sender.
        /// </summary>
        [Output("fromEmailAddress")]
        public Output<string> FromEmailAddress { get; private set; } = null!;

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Output("replyToAddresses")]
        public Output<string?> ReplyToAddresses { get; private set; } = null!;

        /// <summary>
        /// Email subject.
        /// </summary>
        [Output("subject")]
        public Output<string> Subject { get; private set; } = null!;

        /// <summary>
        /// Template parameters for template-based sending. As Simple has been disused, Template is required.
        /// </summary>
        [Output("template")]
        public Output<Outputs.SendEmailTemplate?> Template { get; private set; } = null!;

        /// <summary>
        /// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1:
        /// trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email
        /// exceeds a specified value,the system will automatically choose the non-trigger-based type.
        /// </summary>
        [Output("triggerType")]
        public Output<int?> TriggerType { get; private set; } = null!;

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Output("unsubscribe")]
        public Output<string?> Unsubscribe { get; private set; } = null!;


        /// <summary>
        /// Create a SendEmail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public SendEmail(string name, SendEmailArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ses/sendEmail:SendEmail", name, args ?? new SendEmailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private SendEmail(string name, Input<string> id, SendEmailState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ses/sendEmail:SendEmail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing SendEmail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static SendEmail Get(string name, Input<string> id, SendEmailState? state = null, CustomResourceOptions? options = null)
        {
            return new SendEmail(name, id, state, options);
        }
    }

    public sealed class SendEmailArgs : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.SendEmailAttachmentArgs>? _attachments;

        /// <summary>
        /// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the
        /// size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total
        /// size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        /// </summary>
        public InputList<Inputs.SendEmailAttachmentArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.SendEmailAttachmentArgs>());
            set => _attachments = value;
        }

        [Input("bccs")]
        private InputList<string>? _bccs;

        /// <summary>
        /// The email address of the cc recipient can support up to 20 cc recipients.
        /// </summary>
        public InputList<string> Bccs
        {
            get => _bccs ?? (_bccs = new InputList<string>());
            set => _bccs = value;
        }

        [Input("ccs")]
        private InputList<string>? _ccs;

        /// <summary>
        /// Cc recipient email address, up to 20 people can be copied.
        /// </summary>
        public InputList<string> Ccs
        {
            get => _ccs ?? (_ccs = new InputList<string>());
            set => _ccs = value;
        }

        [Input("destinations", required: true)]
        private InputList<string>? _destinations;

        /// <summary>
        /// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display
        /// all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the
        /// emails.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the
        /// address in the following format:Sender.
        /// </summary>
        [Input("fromEmailAddress", required: true)]
        public Input<string> FromEmailAddress { get; set; } = null!;

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Input("replyToAddresses")]
        public Input<string>? ReplyToAddresses { get; set; }

        /// <summary>
        /// Email subject.
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        /// <summary>
        /// Template parameters for template-based sending. As Simple has been disused, Template is required.
        /// </summary>
        [Input("template")]
        public Input<Inputs.SendEmailTemplateArgs>? Template { get; set; }

        /// <summary>
        /// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1:
        /// trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email
        /// exceeds a specified value,the system will automatically choose the non-trigger-based type.
        /// </summary>
        [Input("triggerType")]
        public Input<int>? TriggerType { get; set; }

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Input("unsubscribe")]
        public Input<string>? Unsubscribe { get; set; }

        public SendEmailArgs()
        {
        }
        public static new SendEmailArgs Empty => new SendEmailArgs();
    }

    public sealed class SendEmailState : global::Pulumi.ResourceArgs
    {
        [Input("attachments")]
        private InputList<Inputs.SendEmailAttachmentGetArgs>? _attachments;

        /// <summary>
        /// Parameters for the attachments to be sent. The TencentCloud API supports a request packet of up to 8 MB in size,and the
        /// size of the attachment content will increase by 1.5 times after Base64 encoding. Therefore,you need to keep the total
        /// size of all attachments below 4 MB. If the entire request exceeds 8 MB,the API will return an error.
        /// </summary>
        public InputList<Inputs.SendEmailAttachmentGetArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.SendEmailAttachmentGetArgs>());
            set => _attachments = value;
        }

        [Input("bccs")]
        private InputList<string>? _bccs;

        /// <summary>
        /// The email address of the cc recipient can support up to 20 cc recipients.
        /// </summary>
        public InputList<string> Bccs
        {
            get => _bccs ?? (_bccs = new InputList<string>());
            set => _bccs = value;
        }

        [Input("ccs")]
        private InputList<string>? _ccs;

        /// <summary>
        /// Cc recipient email address, up to 20 people can be copied.
        /// </summary>
        public InputList<string> Ccs
        {
            get => _ccs ?? (_ccs = new InputList<string>());
            set => _ccs = value;
        }

        [Input("destinations")]
        private InputList<string>? _destinations;

        /// <summary>
        /// Recipient email addresses. You can send an email to up to 50 recipients at a time. Note: the email content will display
        /// all recipient addresses. To send one-to-one emails to several recipients, please call the API multiple times to send the
        /// emails.
        /// </summary>
        public InputList<string> Destinations
        {
            get => _destinations ?? (_destinations = new InputList<string>());
            set => _destinations = value;
        }

        /// <summary>
        /// Sender address. Enter a sender address, for example, noreply@mail.qcloud.com.To display the sender name, enter the
        /// address in the following format:Sender.
        /// </summary>
        [Input("fromEmailAddress")]
        public Input<string>? FromEmailAddress { get; set; }

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Input("replyToAddresses")]
        public Input<string>? ReplyToAddresses { get; set; }

        /// <summary>
        /// Email subject.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        /// <summary>
        /// Template parameters for template-based sending. As Simple has been disused, Template is required.
        /// </summary>
        [Input("template")]
        public Input<Inputs.SendEmailTemplateGetArgs>? Template { get; set; }

        /// <summary>
        /// Email triggering type. 0 (default): non-trigger-based, suitable for marketing emails and non-immediate emails;1:
        /// trigger-based, suitable for immediate emails such as emails containing verification codes.If the size of an email
        /// exceeds a specified value,the system will automatically choose the non-trigger-based type.
        /// </summary>
        [Input("triggerType")]
        public Input<int>? TriggerType { get; set; }

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Input("unsubscribe")]
        public Input<string>? Unsubscribe { get; set; }

        public SendEmailState()
        {
        }
        public static new SendEmailState Empty => new SendEmailState();
    }
}
