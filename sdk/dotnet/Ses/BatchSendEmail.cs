// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ses
{
    [TencentcloudResourceType("tencentcloud:Ses/batchSendEmail:BatchSendEmail")]
    public partial class BatchSendEmail : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        /// </summary>
        [Output("adLocation")]
        public Output<int?> AdLocation { get; private set; } = null!;

        /// <summary>
        /// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        /// </summary>
        [Output("attachments")]
        public Output<ImmutableArray<Outputs.BatchSendEmailAttachment>> Attachments { get; private set; } = null!;

        /// <summary>
        /// Parameter required for a recurring sending task.
        /// </summary>
        [Output("cycleParam")]
        public Output<Outputs.BatchSendEmailCycleParam?> CycleParam { get; private set; } = null!;

        /// <summary>
        /// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in
        /// the following format:sender &amp;amp;amp;lt;email address&amp;amp;amp;gt;. For example:Tencent Cloud team
        /// &amp;amp;amp;lt;noreply@mail.qcloud.com&amp;amp;amp;gt;.
        /// </summary>
        [Output("fromEmailAddress")]
        public Output<string> FromEmailAddress { get; private set; } = null!;

        /// <summary>
        /// Recipient group ID.
        /// </summary>
        [Output("receiverId")]
        public Output<int> ReceiverId { get; private set; } = null!;

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Output("replyToAddresses")]
        public Output<string?> ReplyToAddresses { get; private set; } = null!;

        /// <summary>
        /// Email subject.
        /// </summary>
        [Output("subject")]
        public Output<string> Subject { get; private set; } = null!;

        /// <summary>
        /// Task type. 1: immediate; 2: scheduled; 3: recurring.
        /// </summary>
        [Output("taskType")]
        public Output<int> TaskType { get; private set; } = null!;

        /// <summary>
        /// Template when emails are sent using a template.
        /// </summary>
        [Output("template")]
        public Output<Outputs.BatchSendEmailTemplate?> Template { get; private set; } = null!;

        /// <summary>
        /// Parameter required for a scheduled sending task.
        /// </summary>
        [Output("timedParam")]
        public Output<Outputs.BatchSendEmailTimedParam?> TimedParam { get; private set; } = null!;

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Output("unsubscribe")]
        public Output<string?> Unsubscribe { get; private set; } = null!;


        /// <summary>
        /// Create a BatchSendEmail resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public BatchSendEmail(string name, BatchSendEmailArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Ses/batchSendEmail:BatchSendEmail", name, args ?? new BatchSendEmailArgs(), MakeResourceOptions(options, ""))
        {
        }

        private BatchSendEmail(string name, Input<string> id, BatchSendEmailState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Ses/batchSendEmail:BatchSendEmail", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing BatchSendEmail resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static BatchSendEmail Get(string name, Input<string> id, BatchSendEmailState? state = null, CustomResourceOptions? options = null)
        {
            return new BatchSendEmail(name, id, state, options);
        }
    }

    public sealed class BatchSendEmailArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        /// </summary>
        [Input("adLocation")]
        public Input<int>? AdLocation { get; set; }

        [Input("attachments")]
        private InputList<Inputs.BatchSendEmailAttachmentArgs>? _attachments;

        /// <summary>
        /// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        /// </summary>
        public InputList<Inputs.BatchSendEmailAttachmentArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.BatchSendEmailAttachmentArgs>());
            set => _attachments = value;
        }

        /// <summary>
        /// Parameter required for a recurring sending task.
        /// </summary>
        [Input("cycleParam")]
        public Input<Inputs.BatchSendEmailCycleParamArgs>? CycleParam { get; set; }

        /// <summary>
        /// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in
        /// the following format:sender &amp;amp;amp;lt;email address&amp;amp;amp;gt;. For example:Tencent Cloud team
        /// &amp;amp;amp;lt;noreply@mail.qcloud.com&amp;amp;amp;gt;.
        /// </summary>
        [Input("fromEmailAddress", required: true)]
        public Input<string> FromEmailAddress { get; set; } = null!;

        /// <summary>
        /// Recipient group ID.
        /// </summary>
        [Input("receiverId", required: true)]
        public Input<int> ReceiverId { get; set; } = null!;

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Input("replyToAddresses")]
        public Input<string>? ReplyToAddresses { get; set; }

        /// <summary>
        /// Email subject.
        /// </summary>
        [Input("subject", required: true)]
        public Input<string> Subject { get; set; } = null!;

        /// <summary>
        /// Task type. 1: immediate; 2: scheduled; 3: recurring.
        /// </summary>
        [Input("taskType", required: true)]
        public Input<int> TaskType { get; set; } = null!;

        /// <summary>
        /// Template when emails are sent using a template.
        /// </summary>
        [Input("template")]
        public Input<Inputs.BatchSendEmailTemplateArgs>? Template { get; set; }

        /// <summary>
        /// Parameter required for a scheduled sending task.
        /// </summary>
        [Input("timedParam")]
        public Input<Inputs.BatchSendEmailTimedParamArgs>? TimedParam { get; set; }

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Input("unsubscribe")]
        public Input<string>? Unsubscribe { get; set; }

        public BatchSendEmailArgs()
        {
        }
        public static new BatchSendEmailArgs Empty => new BatchSendEmailArgs();
    }

    public sealed class BatchSendEmailState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to add an ad tag. 0: Add no tag; 1: Add before the subject; 2: Add after the subject.
        /// </summary>
        [Input("adLocation")]
        public Input<int>? AdLocation { get; set; }

        [Input("attachments")]
        private InputList<Inputs.BatchSendEmailAttachmentGetArgs>? _attachments;

        /// <summary>
        /// Attachment parameters to set when you need to send attachments. This parameter is currently unavailable.
        /// </summary>
        public InputList<Inputs.BatchSendEmailAttachmentGetArgs> Attachments
        {
            get => _attachments ?? (_attachments = new InputList<Inputs.BatchSendEmailAttachmentGetArgs>());
            set => _attachments = value;
        }

        /// <summary>
        /// Parameter required for a recurring sending task.
        /// </summary>
        [Input("cycleParam")]
        public Input<Inputs.BatchSendEmailCycleParamGetArgs>? CycleParam { get; set; }

        /// <summary>
        /// Sender address. Enter a sender address such as noreply@mail.qcloud.com. To display the sender name, enter the address in
        /// the following format:sender &amp;amp;amp;lt;email address&amp;amp;amp;gt;. For example:Tencent Cloud team
        /// &amp;amp;amp;lt;noreply@mail.qcloud.com&amp;amp;amp;gt;.
        /// </summary>
        [Input("fromEmailAddress")]
        public Input<string>? FromEmailAddress { get; set; }

        /// <summary>
        /// Recipient group ID.
        /// </summary>
        [Input("receiverId")]
        public Input<int>? ReceiverId { get; set; }

        /// <summary>
        /// Reply-to address. You can enter a valid personal email address that can receive emails. If this parameter is left empty,
        /// reply emails will fail to be sent.
        /// </summary>
        [Input("replyToAddresses")]
        public Input<string>? ReplyToAddresses { get; set; }

        /// <summary>
        /// Email subject.
        /// </summary>
        [Input("subject")]
        public Input<string>? Subject { get; set; }

        /// <summary>
        /// Task type. 1: immediate; 2: scheduled; 3: recurring.
        /// </summary>
        [Input("taskType")]
        public Input<int>? TaskType { get; set; }

        /// <summary>
        /// Template when emails are sent using a template.
        /// </summary>
        [Input("template")]
        public Input<Inputs.BatchSendEmailTemplateGetArgs>? Template { get; set; }

        /// <summary>
        /// Parameter required for a scheduled sending task.
        /// </summary>
        [Input("timedParam")]
        public Input<Inputs.BatchSendEmailTimedParamGetArgs>? TimedParam { get; set; }

        /// <summary>
        /// Unsubscribe link option. 0: Do not add unsubscribe link; 1: English 2: Simplified Chinese; 3: Traditional Chinese; 4:
        /// Spanish; 5: French; 6: German; 7: Japanese; 8: Korean; 9: Arabic; 10: Thai.
        /// </summary>
        [Input("unsubscribe")]
        public Input<string>? Unsubscribe { get; set; }

        public BatchSendEmailState()
        {
        }
        public static new BatchSendEmailState Empty => new BatchSendEmailState();
    }
}
