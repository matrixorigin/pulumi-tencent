// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dasb
{
    [TencentcloudResourceType("tencentcloud:Dasb/resource:Resource")]
    public partial class Resource : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Automatic renewal. 1 is auto renew flag, 0 is not.
        /// </summary>
        [Output("autoRenewFlag")]
        public Output<int> AutoRenewFlag { get; private set; } = null!;

        /// <summary>
        /// Subnet segments that require service activation.
        /// </summary>
        [Output("cidrBlock")]
        public Output<string> CidrBlock { get; private set; } = null!;

        /// <summary>
        /// Deploy region.
        /// </summary>
        [Output("deployRegion")]
        public Output<string> DeployRegion { get; private set; } = null!;

        /// <summary>
        /// Deploy zone.
        /// </summary>
        [Output("deployZone")]
        public Output<string> DeployZone { get; private set; } = null!;

        /// <summary>
        /// Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
        /// </summary>
        [Output("packageBandwidth")]
        public Output<int> PackageBandwidth { get; private set; } = null!;

        /// <summary>
        /// Resource type.Value:standard/pro.
        /// </summary>
        [Output("resourceEdition")]
        public Output<string> ResourceEdition { get; private set; } = null!;

        /// <summary>
        /// Number of resource nodes.
        /// </summary>
        [Output("resourceNode")]
        public Output<int> ResourceNode { get; private set; } = null!;

        /// <summary>
        /// Deploy resource subnetId.
        /// </summary>
        [Output("subnetId")]
        public Output<string> SubnetId { get; private set; } = null!;

        /// <summary>
        /// Billing time. This field is mandatory, with a minimum value of 1.
        /// </summary>
        [Output("timeSpan")]
        public Output<int?> TimeSpan { get; private set; } = null!;

        /// <summary>
        /// Billing cycle, only support m: month. This field is mandatory, fill in m.
        /// </summary>
        [Output("timeUnit")]
        public Output<string?> TimeUnit { get; private set; } = null!;

        /// <summary>
        /// The network segment corresponding to the VPC that requires service activation.
        /// </summary>
        [Output("vpcCidrBlock")]
        public Output<string> VpcCidrBlock { get; private set; } = null!;

        /// <summary>
        /// Deploy resource vpcId.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;


        /// <summary>
        /// Create a Resource resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Resource(string name, ResourceArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/resource:Resource", name, args ?? new ResourceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Resource(string name, Input<string> id, ResourceState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/resource:Resource", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Resource resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Resource Get(string name, Input<string> id, ResourceState? state = null, CustomResourceOptions? options = null)
        {
            return new Resource(name, id, state, options);
        }
    }

    public sealed class ResourceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic renewal. 1 is auto renew flag, 0 is not.
        /// </summary>
        [Input("autoRenewFlag", required: true)]
        public Input<int> AutoRenewFlag { get; set; } = null!;

        /// <summary>
        /// Subnet segments that require service activation.
        /// </summary>
        [Input("cidrBlock", required: true)]
        public Input<string> CidrBlock { get; set; } = null!;

        /// <summary>
        /// Deploy region.
        /// </summary>
        [Input("deployRegion", required: true)]
        public Input<string> DeployRegion { get; set; } = null!;

        /// <summary>
        /// Deploy zone.
        /// </summary>
        [Input("deployZone", required: true)]
        public Input<string> DeployZone { get; set; } = null!;

        /// <summary>
        /// Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
        /// </summary>
        [Input("packageBandwidth")]
        public Input<int>? PackageBandwidth { get; set; }

        /// <summary>
        /// Resource type.Value:standard/pro.
        /// </summary>
        [Input("resourceEdition", required: true)]
        public Input<string> ResourceEdition { get; set; } = null!;

        /// <summary>
        /// Number of resource nodes.
        /// </summary>
        [Input("resourceNode", required: true)]
        public Input<int> ResourceNode { get; set; } = null!;

        /// <summary>
        /// Deploy resource subnetId.
        /// </summary>
        [Input("subnetId", required: true)]
        public Input<string> SubnetId { get; set; } = null!;

        /// <summary>
        /// Billing time. This field is mandatory, with a minimum value of 1.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Billing cycle, only support m: month. This field is mandatory, fill in m.
        /// </summary>
        [Input("timeUnit")]
        public Input<string>? TimeUnit { get; set; }

        /// <summary>
        /// The network segment corresponding to the VPC that requires service activation.
        /// </summary>
        [Input("vpcCidrBlock", required: true)]
        public Input<string> VpcCidrBlock { get; set; } = null!;

        /// <summary>
        /// Deploy resource vpcId.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        public ResourceArgs()
        {
        }
        public static new ResourceArgs Empty => new ResourceArgs();
    }

    public sealed class ResourceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Automatic renewal. 1 is auto renew flag, 0 is not.
        /// </summary>
        [Input("autoRenewFlag")]
        public Input<int>? AutoRenewFlag { get; set; }

        /// <summary>
        /// Subnet segments that require service activation.
        /// </summary>
        [Input("cidrBlock")]
        public Input<string>? CidrBlock { get; set; }

        /// <summary>
        /// Deploy region.
        /// </summary>
        [Input("deployRegion")]
        public Input<string>? DeployRegion { get; set; }

        /// <summary>
        /// Deploy zone.
        /// </summary>
        [Input("deployZone")]
        public Input<string>? DeployZone { get; set; }

        /// <summary>
        /// Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
        /// </summary>
        [Input("packageBandwidth")]
        public Input<int>? PackageBandwidth { get; set; }

        /// <summary>
        /// Resource type.Value:standard/pro.
        /// </summary>
        [Input("resourceEdition")]
        public Input<string>? ResourceEdition { get; set; }

        /// <summary>
        /// Number of resource nodes.
        /// </summary>
        [Input("resourceNode")]
        public Input<int>? ResourceNode { get; set; }

        /// <summary>
        /// Deploy resource subnetId.
        /// </summary>
        [Input("subnetId")]
        public Input<string>? SubnetId { get; set; }

        /// <summary>
        /// Billing time. This field is mandatory, with a minimum value of 1.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Billing cycle, only support m: month. This field is mandatory, fill in m.
        /// </summary>
        [Input("timeUnit")]
        public Input<string>? TimeUnit { get; set; }

        /// <summary>
        /// The network segment corresponding to the VPC that requires service activation.
        /// </summary>
        [Input("vpcCidrBlock")]
        public Input<string>? VpcCidrBlock { get; set; }

        /// <summary>
        /// Deploy resource vpcId.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        public ResourceState()
        {
        }
        public static new ResourceState Empty => new ResourceState();
    }
}
