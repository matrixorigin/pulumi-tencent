// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dasb
{
    [TencentcloudResourceType("tencentcloud:Dasb/acl:Acl")]
    public partial class Acl : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Associate high-risk DB template IDs.
        /// </summary>
        [Output("acTemplateIdSets")]
        public Output<ImmutableArray<string>> AcTemplateIdSets { get; private set; } = null!;

        /// <summary>
        /// Associated accounts.
        /// </summary>
        [Output("accountSets")]
        public Output<ImmutableArray<string>> AccountSets { get; private set; } = null!;

        /// <summary>
        /// Allow access credential,default allow.
        /// </summary>
        [Output("allowAccessCredential")]
        public Output<bool?> AllowAccessCredential { get; private set; } = null!;

        /// <summary>
        /// Allow any account.
        /// </summary>
        [Output("allowAnyAccount")]
        public Output<bool> AllowAnyAccount { get; private set; } = null!;

        /// <summary>
        /// Allow clip file down.
        /// </summary>
        [Output("allowClipFileDown")]
        public Output<bool?> AllowClipFileDown { get; private set; } = null!;

        /// <summary>
        /// Allow clip file up.
        /// </summary>
        [Output("allowClipFileUp")]
        public Output<bool?> AllowClipFileUp { get; private set; } = null!;

        /// <summary>
        /// Allow clip text down.
        /// </summary>
        [Output("allowClipTextDown")]
        public Output<bool?> AllowClipTextDown { get; private set; } = null!;

        /// <summary>
        /// Allow clip text up.
        /// </summary>
        [Output("allowClipTextUp")]
        public Output<bool?> AllowClipTextUp { get; private set; } = null!;

        /// <summary>
        /// Allow disk file download.
        /// </summary>
        [Output("allowDiskFileDown")]
        public Output<bool?> AllowDiskFileDown { get; private set; } = null!;

        /// <summary>
        /// Allow disk file upload.
        /// </summary>
        [Output("allowDiskFileUp")]
        public Output<bool?> AllowDiskFileUp { get; private set; } = null!;

        /// <summary>
        /// Allow disk redirect.
        /// </summary>
        [Output("allowDiskRedirect")]
        public Output<bool> AllowDiskRedirect { get; private set; } = null!;

        /// <summary>
        /// Allow sftp file delete.
        /// </summary>
        [Output("allowFileDel")]
        public Output<bool?> AllowFileDel { get; private set; } = null!;

        /// <summary>
        /// Allow sftp file download.
        /// </summary>
        [Output("allowFileDown")]
        public Output<bool?> AllowFileDown { get; private set; } = null!;

        /// <summary>
        /// Allow sftp up file.
        /// </summary>
        [Output("allowFileUp")]
        public Output<bool?> AllowFileUp { get; private set; } = null!;

        /// <summary>
        /// Allow shell file download.
        /// </summary>
        [Output("allowShellFileDown")]
        public Output<bool?> AllowShellFileDown { get; private set; } = null!;

        /// <summary>
        /// Allow shell file upload.
        /// </summary>
        [Output("allowShellFileUp")]
        public Output<bool?> AllowShellFileUp { get; private set; } = null!;

        /// <summary>
        /// Associated high-risk command template ID.
        /// </summary>
        [Output("cmdTemplateIdSets")]
        public Output<ImmutableArray<int>> CmdTemplateIdSets { get; private set; } = null!;

        /// <summary>
        /// Department id.
        /// </summary>
        [Output("departmentId")]
        public Output<string?> DepartmentId { get; private set; } = null!;

        /// <summary>
        /// Associated device group ID.
        /// </summary>
        [Output("deviceGroupIdSets")]
        public Output<ImmutableArray<int>> DeviceGroupIdSets { get; private set; } = null!;

        /// <summary>
        /// Associated collection of device IDs.
        /// </summary>
        [Output("deviceIdSets")]
        public Output<ImmutableArray<int>> DeviceIdSets { get; private set; } = null!;

        /// <summary>
        /// File transfer download size limit (reserved parameter, currently unused).
        /// </summary>
        [Output("maxFileDownSize")]
        public Output<int?> MaxFileDownSize { get; private set; } = null!;

        /// <summary>
        /// File upload transfer size limit (artifact parameter, currently unused).
        /// </summary>
        [Output("maxFileUpSize")]
        public Output<int?> MaxFileUpSize { get; private set; } = null!;

        /// <summary>
        /// Acl name.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// Associated user group ID.
        /// </summary>
        [Output("userGroupIdSets")]
        public Output<ImmutableArray<int>> UserGroupIdSets { get; private set; } = null!;

        /// <summary>
        /// Associated set of user IDs.
        /// </summary>
        [Output("userIdSets")]
        public Output<ImmutableArray<int>> UserIdSets { get; private set; } = null!;

        /// <summary>
        /// Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Output("validateFrom")]
        public Output<string> ValidateFrom { get; private set; } = null!;

        /// <summary>
        /// Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Output("validateTo")]
        public Output<string> ValidateTo { get; private set; } = null!;


        /// <summary>
        /// Create a Acl resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Acl(string name, AclArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/acl:Acl", name, args ?? new AclArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Acl(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Dasb/acl:Acl", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Acl resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Acl Get(string name, Input<string> id, AclState? state = null, CustomResourceOptions? options = null)
        {
            return new Acl(name, id, state, options);
        }
    }

    public sealed class AclArgs : global::Pulumi.ResourceArgs
    {
        [Input("acTemplateIdSets")]
        private InputList<string>? _acTemplateIdSets;

        /// <summary>
        /// Associate high-risk DB template IDs.
        /// </summary>
        public InputList<string> AcTemplateIdSets
        {
            get => _acTemplateIdSets ?? (_acTemplateIdSets = new InputList<string>());
            set => _acTemplateIdSets = value;
        }

        [Input("accountSets")]
        private InputList<string>? _accountSets;

        /// <summary>
        /// Associated accounts.
        /// </summary>
        public InputList<string> AccountSets
        {
            get => _accountSets ?? (_accountSets = new InputList<string>());
            set => _accountSets = value;
        }

        /// <summary>
        /// Allow access credential,default allow.
        /// </summary>
        [Input("allowAccessCredential")]
        public Input<bool>? AllowAccessCredential { get; set; }

        /// <summary>
        /// Allow any account.
        /// </summary>
        [Input("allowAnyAccount", required: true)]
        public Input<bool> AllowAnyAccount { get; set; } = null!;

        /// <summary>
        /// Allow clip file down.
        /// </summary>
        [Input("allowClipFileDown")]
        public Input<bool>? AllowClipFileDown { get; set; }

        /// <summary>
        /// Allow clip file up.
        /// </summary>
        [Input("allowClipFileUp")]
        public Input<bool>? AllowClipFileUp { get; set; }

        /// <summary>
        /// Allow clip text down.
        /// </summary>
        [Input("allowClipTextDown")]
        public Input<bool>? AllowClipTextDown { get; set; }

        /// <summary>
        /// Allow clip text up.
        /// </summary>
        [Input("allowClipTextUp")]
        public Input<bool>? AllowClipTextUp { get; set; }

        /// <summary>
        /// Allow disk file download.
        /// </summary>
        [Input("allowDiskFileDown")]
        public Input<bool>? AllowDiskFileDown { get; set; }

        /// <summary>
        /// Allow disk file upload.
        /// </summary>
        [Input("allowDiskFileUp")]
        public Input<bool>? AllowDiskFileUp { get; set; }

        /// <summary>
        /// Allow disk redirect.
        /// </summary>
        [Input("allowDiskRedirect", required: true)]
        public Input<bool> AllowDiskRedirect { get; set; } = null!;

        /// <summary>
        /// Allow sftp file delete.
        /// </summary>
        [Input("allowFileDel")]
        public Input<bool>? AllowFileDel { get; set; }

        /// <summary>
        /// Allow sftp file download.
        /// </summary>
        [Input("allowFileDown")]
        public Input<bool>? AllowFileDown { get; set; }

        /// <summary>
        /// Allow sftp up file.
        /// </summary>
        [Input("allowFileUp")]
        public Input<bool>? AllowFileUp { get; set; }

        /// <summary>
        /// Allow shell file download.
        /// </summary>
        [Input("allowShellFileDown")]
        public Input<bool>? AllowShellFileDown { get; set; }

        /// <summary>
        /// Allow shell file upload.
        /// </summary>
        [Input("allowShellFileUp")]
        public Input<bool>? AllowShellFileUp { get; set; }

        [Input("cmdTemplateIdSets")]
        private InputList<int>? _cmdTemplateIdSets;

        /// <summary>
        /// Associated high-risk command template ID.
        /// </summary>
        public InputList<int> CmdTemplateIdSets
        {
            get => _cmdTemplateIdSets ?? (_cmdTemplateIdSets = new InputList<int>());
            set => _cmdTemplateIdSets = value;
        }

        /// <summary>
        /// Department id.
        /// </summary>
        [Input("departmentId")]
        public Input<string>? DepartmentId { get; set; }

        [Input("deviceGroupIdSets")]
        private InputList<int>? _deviceGroupIdSets;

        /// <summary>
        /// Associated device group ID.
        /// </summary>
        public InputList<int> DeviceGroupIdSets
        {
            get => _deviceGroupIdSets ?? (_deviceGroupIdSets = new InputList<int>());
            set => _deviceGroupIdSets = value;
        }

        [Input("deviceIdSets")]
        private InputList<int>? _deviceIdSets;

        /// <summary>
        /// Associated collection of device IDs.
        /// </summary>
        public InputList<int> DeviceIdSets
        {
            get => _deviceIdSets ?? (_deviceIdSets = new InputList<int>());
            set => _deviceIdSets = value;
        }

        /// <summary>
        /// File transfer download size limit (reserved parameter, currently unused).
        /// </summary>
        [Input("maxFileDownSize")]
        public Input<int>? MaxFileDownSize { get; set; }

        /// <summary>
        /// File upload transfer size limit (artifact parameter, currently unused).
        /// </summary>
        [Input("maxFileUpSize")]
        public Input<int>? MaxFileUpSize { get; set; }

        /// <summary>
        /// Acl name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("userGroupIdSets")]
        private InputList<int>? _userGroupIdSets;

        /// <summary>
        /// Associated user group ID.
        /// </summary>
        public InputList<int> UserGroupIdSets
        {
            get => _userGroupIdSets ?? (_userGroupIdSets = new InputList<int>());
            set => _userGroupIdSets = value;
        }

        [Input("userIdSets")]
        private InputList<int>? _userIdSets;

        /// <summary>
        /// Associated set of user IDs.
        /// </summary>
        public InputList<int> UserIdSets
        {
            get => _userIdSets ?? (_userIdSets = new InputList<int>());
            set => _userIdSets = value;
        }

        /// <summary>
        /// Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Input("validateFrom")]
        public Input<string>? ValidateFrom { get; set; }

        /// <summary>
        /// Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Input("validateTo")]
        public Input<string>? ValidateTo { get; set; }

        public AclArgs()
        {
        }
        public static new AclArgs Empty => new AclArgs();
    }

    public sealed class AclState : global::Pulumi.ResourceArgs
    {
        [Input("acTemplateIdSets")]
        private InputList<string>? _acTemplateIdSets;

        /// <summary>
        /// Associate high-risk DB template IDs.
        /// </summary>
        public InputList<string> AcTemplateIdSets
        {
            get => _acTemplateIdSets ?? (_acTemplateIdSets = new InputList<string>());
            set => _acTemplateIdSets = value;
        }

        [Input("accountSets")]
        private InputList<string>? _accountSets;

        /// <summary>
        /// Associated accounts.
        /// </summary>
        public InputList<string> AccountSets
        {
            get => _accountSets ?? (_accountSets = new InputList<string>());
            set => _accountSets = value;
        }

        /// <summary>
        /// Allow access credential,default allow.
        /// </summary>
        [Input("allowAccessCredential")]
        public Input<bool>? AllowAccessCredential { get; set; }

        /// <summary>
        /// Allow any account.
        /// </summary>
        [Input("allowAnyAccount")]
        public Input<bool>? AllowAnyAccount { get; set; }

        /// <summary>
        /// Allow clip file down.
        /// </summary>
        [Input("allowClipFileDown")]
        public Input<bool>? AllowClipFileDown { get; set; }

        /// <summary>
        /// Allow clip file up.
        /// </summary>
        [Input("allowClipFileUp")]
        public Input<bool>? AllowClipFileUp { get; set; }

        /// <summary>
        /// Allow clip text down.
        /// </summary>
        [Input("allowClipTextDown")]
        public Input<bool>? AllowClipTextDown { get; set; }

        /// <summary>
        /// Allow clip text up.
        /// </summary>
        [Input("allowClipTextUp")]
        public Input<bool>? AllowClipTextUp { get; set; }

        /// <summary>
        /// Allow disk file download.
        /// </summary>
        [Input("allowDiskFileDown")]
        public Input<bool>? AllowDiskFileDown { get; set; }

        /// <summary>
        /// Allow disk file upload.
        /// </summary>
        [Input("allowDiskFileUp")]
        public Input<bool>? AllowDiskFileUp { get; set; }

        /// <summary>
        /// Allow disk redirect.
        /// </summary>
        [Input("allowDiskRedirect")]
        public Input<bool>? AllowDiskRedirect { get; set; }

        /// <summary>
        /// Allow sftp file delete.
        /// </summary>
        [Input("allowFileDel")]
        public Input<bool>? AllowFileDel { get; set; }

        /// <summary>
        /// Allow sftp file download.
        /// </summary>
        [Input("allowFileDown")]
        public Input<bool>? AllowFileDown { get; set; }

        /// <summary>
        /// Allow sftp up file.
        /// </summary>
        [Input("allowFileUp")]
        public Input<bool>? AllowFileUp { get; set; }

        /// <summary>
        /// Allow shell file download.
        /// </summary>
        [Input("allowShellFileDown")]
        public Input<bool>? AllowShellFileDown { get; set; }

        /// <summary>
        /// Allow shell file upload.
        /// </summary>
        [Input("allowShellFileUp")]
        public Input<bool>? AllowShellFileUp { get; set; }

        [Input("cmdTemplateIdSets")]
        private InputList<int>? _cmdTemplateIdSets;

        /// <summary>
        /// Associated high-risk command template ID.
        /// </summary>
        public InputList<int> CmdTemplateIdSets
        {
            get => _cmdTemplateIdSets ?? (_cmdTemplateIdSets = new InputList<int>());
            set => _cmdTemplateIdSets = value;
        }

        /// <summary>
        /// Department id.
        /// </summary>
        [Input("departmentId")]
        public Input<string>? DepartmentId { get; set; }

        [Input("deviceGroupIdSets")]
        private InputList<int>? _deviceGroupIdSets;

        /// <summary>
        /// Associated device group ID.
        /// </summary>
        public InputList<int> DeviceGroupIdSets
        {
            get => _deviceGroupIdSets ?? (_deviceGroupIdSets = new InputList<int>());
            set => _deviceGroupIdSets = value;
        }

        [Input("deviceIdSets")]
        private InputList<int>? _deviceIdSets;

        /// <summary>
        /// Associated collection of device IDs.
        /// </summary>
        public InputList<int> DeviceIdSets
        {
            get => _deviceIdSets ?? (_deviceIdSets = new InputList<int>());
            set => _deviceIdSets = value;
        }

        /// <summary>
        /// File transfer download size limit (reserved parameter, currently unused).
        /// </summary>
        [Input("maxFileDownSize")]
        public Input<int>? MaxFileDownSize { get; set; }

        /// <summary>
        /// File upload transfer size limit (artifact parameter, currently unused).
        /// </summary>
        [Input("maxFileUpSize")]
        public Input<int>? MaxFileUpSize { get; set; }

        /// <summary>
        /// Acl name.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        [Input("userGroupIdSets")]
        private InputList<int>? _userGroupIdSets;

        /// <summary>
        /// Associated user group ID.
        /// </summary>
        public InputList<int> UserGroupIdSets
        {
            get => _userGroupIdSets ?? (_userGroupIdSets = new InputList<int>());
            set => _userGroupIdSets = value;
        }

        [Input("userIdSets")]
        private InputList<int>? _userIdSets;

        /// <summary>
        /// Associated set of user IDs.
        /// </summary>
        public InputList<int> UserIdSets
        {
            get => _userIdSets ?? (_userIdSets = new InputList<int>());
            set => _userIdSets = value;
        }

        /// <summary>
        /// Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Input("validateFrom")]
        public Input<string>? ValidateFrom { get; set; }

        /// <summary>
        /// Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
        /// the access rights will be valid for a long time.
        /// </summary>
        [Input("validateTo")]
        public Input<string>? ValidateTo { get; set; }

        public AclState()
        {
        }
        public static new AclState Empty => new AclState();
    }
}
