// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Eni
{
    [TencentcloudResourceType("tencentcloud:Eni/ipv6Address:Ipv6Address")]
    public partial class Ipv6Address : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
        /// quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
        /// either this or 'Ipv6Addresses', must be provided.
        /// </summary>
        [Output("ipv6AddressCount")]
        public Output<int> Ipv6AddressCount { get; private set; } = null!;

        /// <summary>
        /// The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
        /// `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
        /// </summary>
        [Output("ipv6Addresses")]
        public Output<ImmutableArray<Outputs.Ipv6AddressIpv6Address>> Ipv6Addresses { get; private set; } = null!;

        /// <summary>
        /// ENI instance `ID`, in the form of `eni-m6dyj72l`.
        /// </summary>
        [Output("networkInterfaceId")]
        public Output<string> NetworkInterfaceId { get; private set; } = null!;


        /// <summary>
        /// Create a Ipv6Address resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Ipv6Address(string name, Ipv6AddressArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Eni/ipv6Address:Ipv6Address", name, args ?? new Ipv6AddressArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Ipv6Address(string name, Input<string> id, Ipv6AddressState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Eni/ipv6Address:Ipv6Address", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Ipv6Address resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Ipv6Address Get(string name, Input<string> id, Ipv6AddressState? state = null, CustomResourceOptions? options = null)
        {
            return new Ipv6Address(name, id, state, options);
        }
    }

    public sealed class Ipv6AddressArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
        /// quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
        /// either this or 'Ipv6Addresses', must be provided.
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Addresses")]
        private InputList<Inputs.Ipv6AddressIpv6AddressArgs>? _ipv6Addresses;

        /// <summary>
        /// The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
        /// `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
        /// </summary>
        public InputList<Inputs.Ipv6AddressIpv6AddressArgs> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new InputList<Inputs.Ipv6AddressIpv6AddressArgs>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// ENI instance `ID`, in the form of `eni-m6dyj72l`.
        /// </summary>
        [Input("networkInterfaceId", required: true)]
        public Input<string> NetworkInterfaceId { get; set; } = null!;

        public Ipv6AddressArgs()
        {
        }
        public static new Ipv6AddressArgs Empty => new Ipv6AddressArgs();
    }

    public sealed class Ipv6AddressState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
        /// quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
        /// either this or 'Ipv6Addresses', must be provided.
        /// </summary>
        [Input("ipv6AddressCount")]
        public Input<int>? Ipv6AddressCount { get; set; }

        [Input("ipv6Addresses")]
        private InputList<Inputs.Ipv6AddressIpv6AddressGetArgs>? _ipv6Addresses;

        /// <summary>
        /// The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
        /// `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
        /// </summary>
        public InputList<Inputs.Ipv6AddressIpv6AddressGetArgs> Ipv6Addresses
        {
            get => _ipv6Addresses ?? (_ipv6Addresses = new InputList<Inputs.Ipv6AddressIpv6AddressGetArgs>());
            set => _ipv6Addresses = value;
        }

        /// <summary>
        /// ENI instance `ID`, in the form of `eni-m6dyj72l`.
        /// </summary>
        [Input("networkInterfaceId")]
        public Input<string>? NetworkInterfaceId { get; set; }

        public Ipv6AddressState()
        {
        }
        public static new Ipv6AddressState Empty => new Ipv6AddressState();
    }
}
