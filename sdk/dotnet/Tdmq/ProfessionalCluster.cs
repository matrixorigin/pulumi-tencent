// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Tdmq
{
    [TencentcloudResourceType("tencentcloud:Tdmq/professionalCluster:ProfessionalCluster")]
    public partial class ProfessionalCluster : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether to turn on automatic monthly renewal. `1`: turn on, `0`: turn off.
        /// </summary>
        [Output("autoRenewFlag")]
        public Output<int> AutoRenewFlag { get; private set; } = null!;

        /// <summary>
        /// Whether to automatically select vouchers. `1`: Yes, `0`: No. Default is `0`.
        /// </summary>
        [Output("autoVoucher")]
        public Output<int> AutoVoucher { get; private set; } = null!;

        /// <summary>
        /// Name of cluster. It does not support Chinese characters and special characters except dashes and underscores and cannot
        /// exceed 64 characters.
        /// </summary>
        [Output("clusterName")]
        public Output<string> ClusterName { get; private set; } = null!;

        /// <summary>
        /// Cluster specification code. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Output("productName")]
        public Output<string> ProductName { get; private set; } = null!;

        /// <summary>
        /// Storage specifications. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Output("storageSize")]
        public Output<int> StorageSize { get; private set; } = null!;

        /// <summary>
        /// Tag description list.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;

        /// <summary>
        /// Purchase duration, value range: 1~50. Default: 1.
        /// </summary>
        [Output("timeSpan")]
        public Output<int> TimeSpan { get; private set; } = null!;

        /// <summary>
        /// Label of VPC network.
        /// </summary>
        [Output("vpc")]
        public Output<Outputs.ProfessionalClusterVpc?> Vpc { get; private set; } = null!;

        /// <summary>
        /// Multi-AZ deployment select three Availability Zones, like: [200002,200003,200004]. Single availability zone deployment
        /// selects an availability zone, like [200002].
        /// </summary>
        [Output("zoneIds")]
        public Output<ImmutableArray<int>> ZoneIds { get; private set; } = null!;


        /// <summary>
        /// Create a ProfessionalCluster resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ProfessionalCluster(string name, ProfessionalClusterArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/professionalCluster:ProfessionalCluster", name, args ?? new ProfessionalClusterArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ProfessionalCluster(string name, Input<string> id, ProfessionalClusterState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Tdmq/professionalCluster:ProfessionalCluster", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ProfessionalCluster resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ProfessionalCluster Get(string name, Input<string> id, ProfessionalClusterState? state = null, CustomResourceOptions? options = null)
        {
            return new ProfessionalCluster(name, id, state, options);
        }
    }

    public sealed class ProfessionalClusterArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to turn on automatic monthly renewal. `1`: turn on, `0`: turn off.
        /// </summary>
        [Input("autoRenewFlag", required: true)]
        public Input<int> AutoRenewFlag { get; set; } = null!;

        /// <summary>
        /// Whether to automatically select vouchers. `1`: Yes, `0`: No. Default is `0`.
        /// </summary>
        [Input("autoVoucher")]
        public Input<int>? AutoVoucher { get; set; }

        /// <summary>
        /// Name of cluster. It does not support Chinese characters and special characters except dashes and underscores and cannot
        /// exceed 64 characters.
        /// </summary>
        [Input("clusterName", required: true)]
        public Input<string> ClusterName { get; set; } = null!;

        /// <summary>
        /// Cluster specification code. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Input("productName", required: true)]
        public Input<string> ProductName { get; set; } = null!;

        /// <summary>
        /// Storage specifications. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Input("storageSize", required: true)]
        public Input<int> StorageSize { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Purchase duration, value range: 1~50. Default: 1.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Label of VPC network.
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.ProfessionalClusterVpcArgs>? Vpc { get; set; }

        [Input("zoneIds", required: true)]
        private InputList<int>? _zoneIds;

        /// <summary>
        /// Multi-AZ deployment select three Availability Zones, like: [200002,200003,200004]. Single availability zone deployment
        /// selects an availability zone, like [200002].
        /// </summary>
        public InputList<int> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<int>());
            set => _zoneIds = value;
        }

        public ProfessionalClusterArgs()
        {
        }
        public static new ProfessionalClusterArgs Empty => new ProfessionalClusterArgs();
    }

    public sealed class ProfessionalClusterState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether to turn on automatic monthly renewal. `1`: turn on, `0`: turn off.
        /// </summary>
        [Input("autoRenewFlag")]
        public Input<int>? AutoRenewFlag { get; set; }

        /// <summary>
        /// Whether to automatically select vouchers. `1`: Yes, `0`: No. Default is `0`.
        /// </summary>
        [Input("autoVoucher")]
        public Input<int>? AutoVoucher { get; set; }

        /// <summary>
        /// Name of cluster. It does not support Chinese characters and special characters except dashes and underscores and cannot
        /// exceed 64 characters.
        /// </summary>
        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        /// <summary>
        /// Cluster specification code. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Input("productName")]
        public Input<string>? ProductName { get; set; }

        /// <summary>
        /// Storage specifications. Reference[Professional Cluster
        /// Specifications](https://cloud.tencent.com/document/product/1179/83705).
        /// </summary>
        [Input("storageSize")]
        public Input<int>? StorageSize { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tag description list.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        /// <summary>
        /// Purchase duration, value range: 1~50. Default: 1.
        /// </summary>
        [Input("timeSpan")]
        public Input<int>? TimeSpan { get; set; }

        /// <summary>
        /// Label of VPC network.
        /// </summary>
        [Input("vpc")]
        public Input<Inputs.ProfessionalClusterVpcGetArgs>? Vpc { get; set; }

        [Input("zoneIds")]
        private InputList<int>? _zoneIds;

        /// <summary>
        /// Multi-AZ deployment select three Availability Zones, like: [200002,200003,200004]. Single availability zone deployment
        /// selects an availability zone, like [200002].
        /// </summary>
        public InputList<int> ZoneIds
        {
            get => _zoneIds ?? (_zoneIds = new InputList<int>());
            set => _zoneIds = value;
        }

        public ProfessionalClusterState()
        {
        }
        public static new ProfessionalClusterState Empty => new ProfessionalClusterState();
    }
}
