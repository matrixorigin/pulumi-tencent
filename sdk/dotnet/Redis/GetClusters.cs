// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Redis
{
    public static class GetClusters
    {
        public static Task<GetClustersResult> InvokeAsync(GetClustersArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClustersResult>("tencentcloud:Redis/getClusters:getClusters", args ?? new GetClustersArgs(), options.WithDefaults());

        public static Output<GetClustersResult> Invoke(GetClustersInvokeArgs? args = null, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClustersResult>("tencentcloud:Redis/getClusters:getClusters", args ?? new GetClustersInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClustersArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoRenewFlags")]
        private List<int>? _autoRenewFlags;
        public List<int> AutoRenewFlags
        {
            get => _autoRenewFlags ?? (_autoRenewFlags = new List<int>());
            set => _autoRenewFlags = value;
        }

        [Input("clusterName")]
        public string? ClusterName { get; set; }

        [Input("dedicatedClusterId")]
        public string? DedicatedClusterId { get; set; }

        [Input("projectIds")]
        private List<int>? _projectIds;
        public List<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new List<int>());
            set => _projectIds = value;
        }

        [Input("redisClusterIds")]
        private List<string>? _redisClusterIds;
        public List<string> RedisClusterIds
        {
            get => _redisClusterIds ?? (_redisClusterIds = new List<string>());
            set => _redisClusterIds = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("statuses")]
        private List<int>? _statuses;
        public List<int> Statuses
        {
            get => _statuses ?? (_statuses = new List<int>());
            set => _statuses = value;
        }

        public GetClustersArgs()
        {
        }
        public static new GetClustersArgs Empty => new GetClustersArgs();
    }

    public sealed class GetClustersInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("autoRenewFlags")]
        private InputList<int>? _autoRenewFlags;
        public InputList<int> AutoRenewFlags
        {
            get => _autoRenewFlags ?? (_autoRenewFlags = new InputList<int>());
            set => _autoRenewFlags = value;
        }

        [Input("clusterName")]
        public Input<string>? ClusterName { get; set; }

        [Input("dedicatedClusterId")]
        public Input<string>? DedicatedClusterId { get; set; }

        [Input("projectIds")]
        private InputList<int>? _projectIds;
        public InputList<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<int>());
            set => _projectIds = value;
        }

        [Input("redisClusterIds")]
        private InputList<string>? _redisClusterIds;
        public InputList<string> RedisClusterIds
        {
            get => _redisClusterIds ?? (_redisClusterIds = new InputList<string>());
            set => _redisClusterIds = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("statuses")]
        private InputList<int>? _statuses;
        public InputList<int> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<int>());
            set => _statuses = value;
        }

        public GetClustersInvokeArgs()
        {
        }
        public static new GetClustersInvokeArgs Empty => new GetClustersInvokeArgs();
    }


    [OutputType]
    public sealed class GetClustersResult
    {
        public readonly ImmutableArray<int> AutoRenewFlags;
        public readonly string? ClusterName;
        public readonly string? DedicatedClusterId;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<int> ProjectIds;
        public readonly ImmutableArray<string> RedisClusterIds;
        public readonly ImmutableArray<Outputs.GetClustersResourceResult> Resources;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<int> Statuses;

        [OutputConstructor]
        private GetClustersResult(
            ImmutableArray<int> autoRenewFlags,

            string? clusterName,

            string? dedicatedClusterId,

            string id,

            ImmutableArray<int> projectIds,

            ImmutableArray<string> redisClusterIds,

            ImmutableArray<Outputs.GetClustersResourceResult> resources,

            string? resultOutputFile,

            ImmutableArray<int> statuses)
        {
            AutoRenewFlags = autoRenewFlags;
            ClusterName = clusterName;
            DedicatedClusterId = dedicatedClusterId;
            Id = id;
            ProjectIds = projectIds;
            RedisClusterIds = redisClusterIds;
            Resources = resources;
            ResultOutputFile = resultOutputFile;
            Statuses = statuses;
        }
    }
}
