// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Bi
{
    [TencentcloudResourceType("tencentcloud:Bi/datasourceCloud:DatasourceCloud")]
    public partial class DatasourceCloud : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Charset.
        /// </summary>
        [Output("charset")]
        public Output<string> Charset { get; private set; } = null!;

        /// <summary>
        /// Cluster id.
        /// </summary>
        [Output("clusterId")]
        public Output<string?> ClusterId { get; private set; } = null!;

        /// <summary>
        /// Third-party datasource identification, this parameter can be ignored.
        /// </summary>
        [Output("dataOrigin")]
        public Output<string?> DataOrigin { get; private set; } = null!;

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Output("dataOriginDatasourceId")]
        public Output<string?> DataOriginDatasourceId { get; private set; } = null!;

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Output("dataOriginProjectId")]
        public Output<string?> DataOriginProjectId { get; private set; } = null!;

        /// <summary>
        /// Database name.
        /// </summary>
        [Output("dbName")]
        public Output<string> DbName { get; private set; } = null!;

        /// <summary>
        /// Password.
        /// </summary>
        [Output("dbPwd")]
        public Output<string> DbPwd { get; private set; } = null!;

        /// <summary>
        /// `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
        /// </summary>
        [Output("dbType")]
        public Output<string> DbType { get; private set; } = null!;

        /// <summary>
        /// User name.
        /// </summary>
        [Output("dbUser")]
        public Output<string> DbUser { get; private set; } = null!;

        /// <summary>
        /// Extended parameters.
        /// </summary>
        [Output("extraParam")]
        public Output<string> ExtraParam { get; private set; } = null!;

        /// <summary>
        /// Project id.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Region identifier.
        /// </summary>
        [Output("regionId")]
        public Output<string?> RegionId { get; private set; } = null!;

        /// <summary>
        /// Service type, Own or Cloud.
        /// </summary>
        [Output("serviceType")]
        public Output<Outputs.DatasourceCloudServiceType> ServiceType { get; private set; } = null!;

        /// <summary>
        /// Datasource name in BI.
        /// </summary>
        [Output("sourceName")]
        public Output<string> SourceName { get; private set; } = null!;

        /// <summary>
        /// Unified vpc identification.
        /// </summary>
        [Output("uniqVpcId")]
        public Output<string?> UniqVpcId { get; private set; } = null!;

        /// <summary>
        /// Public cloud intranet ip.
        /// </summary>
        [Output("vip")]
        public Output<string?> Vip { get; private set; } = null!;

        /// <summary>
        /// Vpc identification.
        /// </summary>
        [Output("vpcId")]
        public Output<string> VpcId { get; private set; } = null!;

        /// <summary>
        /// Public cloud intranet port.
        /// </summary>
        [Output("vport")]
        public Output<string?> Vport { get; private set; } = null!;


        /// <summary>
        /// Create a DatasourceCloud resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public DatasourceCloud(string name, DatasourceCloudArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Bi/datasourceCloud:DatasourceCloud", name, args ?? new DatasourceCloudArgs(), MakeResourceOptions(options, ""))
        {
        }

        private DatasourceCloud(string name, Input<string> id, DatasourceCloudState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Bi/datasourceCloud:DatasourceCloud", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
                AdditionalSecretOutputs =
                {
                    "dbPwd",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing DatasourceCloud resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static DatasourceCloud Get(string name, Input<string> id, DatasourceCloudState? state = null, CustomResourceOptions? options = null)
        {
            return new DatasourceCloud(name, id, state, options);
        }
    }

    public sealed class DatasourceCloudArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Charset.
        /// </summary>
        [Input("charset", required: true)]
        public Input<string> Charset { get; set; } = null!;

        /// <summary>
        /// Cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Third-party datasource identification, this parameter can be ignored.
        /// </summary>
        [Input("dataOrigin")]
        public Input<string>? DataOrigin { get; set; }

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Input("dataOriginDatasourceId")]
        public Input<string>? DataOriginDatasourceId { get; set; }

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Input("dataOriginProjectId")]
        public Input<string>? DataOriginProjectId { get; set; }

        /// <summary>
        /// Database name.
        /// </summary>
        [Input("dbName", required: true)]
        public Input<string> DbName { get; set; } = null!;

        [Input("dbPwd", required: true)]
        private Input<string>? _dbPwd;

        /// <summary>
        /// Password.
        /// </summary>
        public Input<string>? DbPwd
        {
            get => _dbPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dbPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
        /// </summary>
        [Input("dbType", required: true)]
        public Input<string> DbType { get; set; } = null!;

        /// <summary>
        /// User name.
        /// </summary>
        [Input("dbUser", required: true)]
        public Input<string> DbUser { get; set; } = null!;

        /// <summary>
        /// Extended parameters.
        /// </summary>
        [Input("extraParam")]
        public Input<string>? ExtraParam { get; set; }

        /// <summary>
        /// Project id.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Region identifier.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// Service type, Own or Cloud.
        /// </summary>
        [Input("serviceType", required: true)]
        public Input<Inputs.DatasourceCloudServiceTypeArgs> ServiceType { get; set; } = null!;

        /// <summary>
        /// Datasource name in BI.
        /// </summary>
        [Input("sourceName", required: true)]
        public Input<string> SourceName { get; set; } = null!;

        /// <summary>
        /// Unified vpc identification.
        /// </summary>
        [Input("uniqVpcId")]
        public Input<string>? UniqVpcId { get; set; }

        /// <summary>
        /// Public cloud intranet ip.
        /// </summary>
        [Input("vip")]
        public Input<string>? Vip { get; set; }

        /// <summary>
        /// Vpc identification.
        /// </summary>
        [Input("vpcId", required: true)]
        public Input<string> VpcId { get; set; } = null!;

        /// <summary>
        /// Public cloud intranet port.
        /// </summary>
        [Input("vport")]
        public Input<string>? Vport { get; set; }

        public DatasourceCloudArgs()
        {
        }
        public static new DatasourceCloudArgs Empty => new DatasourceCloudArgs();
    }

    public sealed class DatasourceCloudState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Charset.
        /// </summary>
        [Input("charset")]
        public Input<string>? Charset { get; set; }

        /// <summary>
        /// Cluster id.
        /// </summary>
        [Input("clusterId")]
        public Input<string>? ClusterId { get; set; }

        /// <summary>
        /// Third-party datasource identification, this parameter can be ignored.
        /// </summary>
        [Input("dataOrigin")]
        public Input<string>? DataOrigin { get; set; }

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Input("dataOriginDatasourceId")]
        public Input<string>? DataOriginDatasourceId { get; set; }

        /// <summary>
        /// Third-party datasource project id, this parameter can be ignored.
        /// </summary>
        [Input("dataOriginProjectId")]
        public Input<string>? DataOriginProjectId { get; set; }

        /// <summary>
        /// Database name.
        /// </summary>
        [Input("dbName")]
        public Input<string>? DbName { get; set; }

        [Input("dbPwd")]
        private Input<string>? _dbPwd;

        /// <summary>
        /// Password.
        /// </summary>
        public Input<string>? DbPwd
        {
            get => _dbPwd;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _dbPwd = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
        /// </summary>
        [Input("dbType")]
        public Input<string>? DbType { get; set; }

        /// <summary>
        /// User name.
        /// </summary>
        [Input("dbUser")]
        public Input<string>? DbUser { get; set; }

        /// <summary>
        /// Extended parameters.
        /// </summary>
        [Input("extraParam")]
        public Input<string>? ExtraParam { get; set; }

        /// <summary>
        /// Project id.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Region identifier.
        /// </summary>
        [Input("regionId")]
        public Input<string>? RegionId { get; set; }

        /// <summary>
        /// Service type, Own or Cloud.
        /// </summary>
        [Input("serviceType")]
        public Input<Inputs.DatasourceCloudServiceTypeGetArgs>? ServiceType { get; set; }

        /// <summary>
        /// Datasource name in BI.
        /// </summary>
        [Input("sourceName")]
        public Input<string>? SourceName { get; set; }

        /// <summary>
        /// Unified vpc identification.
        /// </summary>
        [Input("uniqVpcId")]
        public Input<string>? UniqVpcId { get; set; }

        /// <summary>
        /// Public cloud intranet ip.
        /// </summary>
        [Input("vip")]
        public Input<string>? Vip { get; set; }

        /// <summary>
        /// Vpc identification.
        /// </summary>
        [Input("vpcId")]
        public Input<string>? VpcId { get; set; }

        /// <summary>
        /// Public cloud intranet port.
        /// </summary>
        [Input("vport")]
        public Input<string>? Vport { get; set; }

        public DatasourceCloudState()
        {
        }
        public static new DatasourceCloudState Empty => new DatasourceCloudState();
    }
}
