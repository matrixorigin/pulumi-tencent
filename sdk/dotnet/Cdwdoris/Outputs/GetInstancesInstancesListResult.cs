// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Cdwdoris.Outputs
{

    [OutputType]
    public sealed class GetInstancesInstancesListResult
    {
        public readonly string AccessInfo;
        public readonly ImmutableArray<string> BindSGs;
        public readonly string BuildVersion;
        public readonly bool CanAttachCbs;
        public readonly int CaseSensitive;
        public readonly ImmutableArray<string> Characteristics;
        public readonly string ClsLogSetId;
        public readonly string ClsTopicId;
        public readonly string Components;
        public readonly string CoolDownBucket;
        public readonly Outputs.GetInstancesInstancesListCoreSummaryResult CoreSummary;
        public readonly string CosBucketName;
        public readonly int CosMoveFactor;
        public readonly string CreateTime;
        public readonly string Eip;
        public readonly int EnableCoolDown;
        public readonly bool EnableMultiZones;
        public readonly int EnableXmlConfig;
        public readonly string ExpireTime;
        public readonly string FlowMsg;
        public readonly string GraceShutdownWaitSeconds;
        public readonly string Ha;
        public readonly int HaType;
        public readonly bool HasClsTopic;
        public readonly int Id;
        public readonly string InstanceId;
        public readonly string InstanceName;
        public readonly bool IsWhiteSGs;
        public readonly string Kind;
        public readonly Outputs.GetInstancesInstancesListMasterSummaryResult MasterSummary;
        public readonly string Monitor;
        public readonly string PayMode;
        public readonly string Region;
        public readonly string RegionDesc;
        public readonly int RegionId;
        public readonly bool RenewFlag;
        public readonly string RestartTimeout;
        public readonly string Status;
        public readonly string StatusDesc;
        public readonly string SubnetId;
        public readonly ImmutableArray<Outputs.GetInstancesInstancesListTagResult> Tags;
        public readonly string UserNetworkInfos;
        public readonly string Version;
        public readonly string VpcId;
        public readonly string Zone;
        public readonly string ZoneDesc;

        [OutputConstructor]
        private GetInstancesInstancesListResult(
            string accessInfo,

            ImmutableArray<string> bindSGs,

            string buildVersion,

            bool canAttachCbs,

            int caseSensitive,

            ImmutableArray<string> characteristics,

            string clsLogSetId,

            string clsTopicId,

            string components,

            string coolDownBucket,

            Outputs.GetInstancesInstancesListCoreSummaryResult coreSummary,

            string cosBucketName,

            int cosMoveFactor,

            string createTime,

            string eip,

            int enableCoolDown,

            bool enableMultiZones,

            int enableXmlConfig,

            string expireTime,

            string flowMsg,

            string graceShutdownWaitSeconds,

            string ha,

            int haType,

            bool hasClsTopic,

            int id,

            string instanceId,

            string instanceName,

            bool isWhiteSGs,

            string kind,

            Outputs.GetInstancesInstancesListMasterSummaryResult masterSummary,

            string monitor,

            string payMode,

            string region,

            string regionDesc,

            int regionId,

            bool renewFlag,

            string restartTimeout,

            string status,

            string statusDesc,

            string subnetId,

            ImmutableArray<Outputs.GetInstancesInstancesListTagResult> tags,

            string userNetworkInfos,

            string version,

            string vpcId,

            string zone,

            string zoneDesc)
        {
            AccessInfo = accessInfo;
            BindSGs = bindSGs;
            BuildVersion = buildVersion;
            CanAttachCbs = canAttachCbs;
            CaseSensitive = caseSensitive;
            Characteristics = characteristics;
            ClsLogSetId = clsLogSetId;
            ClsTopicId = clsTopicId;
            Components = components;
            CoolDownBucket = coolDownBucket;
            CoreSummary = coreSummary;
            CosBucketName = cosBucketName;
            CosMoveFactor = cosMoveFactor;
            CreateTime = createTime;
            Eip = eip;
            EnableCoolDown = enableCoolDown;
            EnableMultiZones = enableMultiZones;
            EnableXmlConfig = enableXmlConfig;
            ExpireTime = expireTime;
            FlowMsg = flowMsg;
            GraceShutdownWaitSeconds = graceShutdownWaitSeconds;
            Ha = ha;
            HaType = haType;
            HasClsTopic = hasClsTopic;
            Id = id;
            InstanceId = instanceId;
            InstanceName = instanceName;
            IsWhiteSGs = isWhiteSGs;
            Kind = kind;
            MasterSummary = masterSummary;
            Monitor = monitor;
            PayMode = payMode;
            Region = region;
            RegionDesc = regionDesc;
            RegionId = regionId;
            RenewFlag = renewFlag;
            RestartTimeout = restartTimeout;
            Status = status;
            StatusDesc = statusDesc;
            SubnetId = subnetId;
            Tags = tags;
            UserNetworkInfos = userNetworkInfos;
            Version = version;
            VpcId = vpcId;
            Zone = zone;
            ZoneDesc = zoneDesc;
        }
    }
}
