// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Audit
{
    public static class GetEvents
    {
        public static Task<GetEventsResult> InvokeAsync(GetEventsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetEventsResult>("tencentcloud:Audit/getEvents:getEvents", args ?? new GetEventsArgs(), options.WithDefaults());

        public static Output<GetEventsResult> Invoke(GetEventsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetEventsResult>("tencentcloud:Audit/getEvents:getEvents", args ?? new GetEventsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetEventsArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTime", required: true)]
        public int EndTime { get; set; }

        [Input("isReturnLocation")]
        public int? IsReturnLocation { get; set; }

        [Input("lookupAttributes")]
        private List<Inputs.GetEventsLookupAttributeArgs>? _lookupAttributes;
        public List<Inputs.GetEventsLookupAttributeArgs> LookupAttributes
        {
            get => _lookupAttributes ?? (_lookupAttributes = new List<Inputs.GetEventsLookupAttributeArgs>());
            set => _lookupAttributes = value;
        }

        [Input("maxResults")]
        public int? MaxResults { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startTime", required: true)]
        public int StartTime { get; set; }

        public GetEventsArgs()
        {
        }
        public static new GetEventsArgs Empty => new GetEventsArgs();
    }

    public sealed class GetEventsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("endTime", required: true)]
        public Input<int> EndTime { get; set; } = null!;

        [Input("isReturnLocation")]
        public Input<int>? IsReturnLocation { get; set; }

        [Input("lookupAttributes")]
        private InputList<Inputs.GetEventsLookupAttributeInputArgs>? _lookupAttributes;
        public InputList<Inputs.GetEventsLookupAttributeInputArgs> LookupAttributes
        {
            get => _lookupAttributes ?? (_lookupAttributes = new InputList<Inputs.GetEventsLookupAttributeInputArgs>());
            set => _lookupAttributes = value;
        }

        [Input("maxResults")]
        public Input<int>? MaxResults { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startTime", required: true)]
        public Input<int> StartTime { get; set; } = null!;

        public GetEventsInvokeArgs()
        {
        }
        public static new GetEventsInvokeArgs Empty => new GetEventsInvokeArgs();
    }


    [OutputType]
    public sealed class GetEventsResult
    {
        public readonly int EndTime;
        public readonly ImmutableArray<Outputs.GetEventsEventResult> AuditEvents;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? IsReturnLocation;
        public readonly ImmutableArray<Outputs.GetEventsLookupAttributeResult> LookupAttributes;
        public readonly int? MaxResults;
        public readonly string? ResultOutputFile;
        public readonly int StartTime;

        [OutputConstructor]
        private GetEventsResult(
            int endTime,

            ImmutableArray<Outputs.GetEventsEventResult> events,

            string id,

            int? isReturnLocation,

            ImmutableArray<Outputs.GetEventsLookupAttributeResult> lookupAttributes,

            int? maxResults,

            string? resultOutputFile,

            int startTime)
        {
            EndTime = endTime;
            AuditEvents = events;
            Id = id;
            IsReturnLocation = isReturnLocation;
            LookupAttributes = lookupAttributes;
            MaxResults = maxResults;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
