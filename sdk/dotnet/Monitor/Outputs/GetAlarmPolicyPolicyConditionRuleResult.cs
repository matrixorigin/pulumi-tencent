// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetAlarmPolicyPolicyConditionRuleResult
    {
        public readonly int ContinuePeriod;
        public readonly string Description;
        public readonly ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleFilterResult> Filters;
        public readonly ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleHierarchicalValueResult> HierarchicalValues;
        public readonly int IsAdvanced;
        public readonly int IsOpen;
        public readonly int IsPowerNotice;
        public readonly string MetricName;
        public readonly int NoticeFrequency;
        public readonly string Operator;
        public readonly int Period;
        public readonly string ProductId;
        public readonly string RuleType;
        public readonly string Unit;
        public readonly string Value;
        public readonly double ValueMax;
        public readonly double ValueMin;

        [OutputConstructor]
        private GetAlarmPolicyPolicyConditionRuleResult(
            int continuePeriod,

            string description,

            ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleFilterResult> filters,

            ImmutableArray<Outputs.GetAlarmPolicyPolicyConditionRuleHierarchicalValueResult> hierarchicalValues,

            int isAdvanced,

            int isOpen,

            int isPowerNotice,

            string metricName,

            int noticeFrequency,

            string @operator,

            int period,

            string productId,

            string ruleType,

            string unit,

            string value,

            double valueMax,

            double valueMin)
        {
            ContinuePeriod = continuePeriod;
            Description = description;
            Filters = filters;
            HierarchicalValues = hierarchicalValues;
            IsAdvanced = isAdvanced;
            IsOpen = isOpen;
            IsPowerNotice = isPowerNotice;
            MetricName = metricName;
            NoticeFrequency = noticeFrequency;
            Operator = @operator;
            Period = period;
            ProductId = productId;
            RuleType = ruleType;
            Unit = unit;
            Value = value;
            ValueMax = valueMax;
            ValueMin = valueMin;
        }
    }
}
