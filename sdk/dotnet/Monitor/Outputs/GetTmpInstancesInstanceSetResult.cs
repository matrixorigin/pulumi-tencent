// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor.Outputs
{

    [OutputType]
    public sealed class GetTmpInstancesInstanceSetResult
    {
        public readonly int AlertRuleLimit;
        public readonly string ApiRootPath;
        public readonly string AuthToken;
        public readonly int AutoRenewFlag;
        public readonly int ChargeStatus;
        public readonly string CreatedAt;
        public readonly int DataRetentionTime;
        public readonly int EnableGrafana;
        public readonly string ExpireTime;
        public readonly string GrafanaInstanceId;
        public readonly string GrafanaIpWhiteList;
        public readonly int GrafanaStatus;
        public readonly string GrafanaUrl;
        public readonly ImmutableArray<Outputs.GetTmpInstancesInstanceSetGrantResult> Grants;
        public readonly int InstanceChargeType;
        public readonly string InstanceId;
        public readonly string InstanceName;
        public readonly int InstanceStatus;
        public readonly string Ipv4Address;
        public readonly int IsNearExpire;
        public readonly int MigrationType;
        public readonly string ProxyAddress;
        public readonly int RecordingRuleLimit;
        public readonly int RegionId;
        public readonly string RemoteWrite;
        public readonly string SpecName;
        public readonly string SubnetId;
        public readonly ImmutableArray<Outputs.GetTmpInstancesInstanceSetTagSpecificationResult> TagSpecifications;
        public readonly string VpcId;
        public readonly string Zone;

        [OutputConstructor]
        private GetTmpInstancesInstanceSetResult(
            int alertRuleLimit,

            string apiRootPath,

            string authToken,

            int autoRenewFlag,

            int chargeStatus,

            string createdAt,

            int dataRetentionTime,

            int enableGrafana,

            string expireTime,

            string grafanaInstanceId,

            string grafanaIpWhiteList,

            int grafanaStatus,

            string grafanaUrl,

            ImmutableArray<Outputs.GetTmpInstancesInstanceSetGrantResult> grants,

            int instanceChargeType,

            string instanceId,

            string instanceName,

            int instanceStatus,

            string ipv4Address,

            int isNearExpire,

            int migrationType,

            string proxyAddress,

            int recordingRuleLimit,

            int regionId,

            string remoteWrite,

            string specName,

            string subnetId,

            ImmutableArray<Outputs.GetTmpInstancesInstanceSetTagSpecificationResult> tagSpecifications,

            string vpcId,

            string zone)
        {
            AlertRuleLimit = alertRuleLimit;
            ApiRootPath = apiRootPath;
            AuthToken = authToken;
            AutoRenewFlag = autoRenewFlag;
            ChargeStatus = chargeStatus;
            CreatedAt = createdAt;
            DataRetentionTime = dataRetentionTime;
            EnableGrafana = enableGrafana;
            ExpireTime = expireTime;
            GrafanaInstanceId = grafanaInstanceId;
            GrafanaIpWhiteList = grafanaIpWhiteList;
            GrafanaStatus = grafanaStatus;
            GrafanaUrl = grafanaUrl;
            Grants = grants;
            InstanceChargeType = instanceChargeType;
            InstanceId = instanceId;
            InstanceName = instanceName;
            InstanceStatus = instanceStatus;
            Ipv4Address = ipv4Address;
            IsNearExpire = isNearExpire;
            MigrationType = migrationType;
            ProxyAddress = proxyAddress;
            RecordingRuleLimit = recordingRuleLimit;
            RegionId = regionId;
            RemoteWrite = remoteWrite;
            SpecName = specName;
            SubnetId = subnetId;
            TagSpecifications = tagSpecifications;
            VpcId = vpcId;
            Zone = zone;
        }
    }
}
