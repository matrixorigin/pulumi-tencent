// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    public static class GetAlarmHistory
    {
        public static Task<GetAlarmHistoryResult> InvokeAsync(GetAlarmHistoryArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmHistoryResult>("tencentcloud:Monitor/getAlarmHistory:getAlarmHistory", args ?? new GetAlarmHistoryArgs(), options.WithDefaults());

        public static Output<GetAlarmHistoryResult> Invoke(GetAlarmHistoryInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmHistoryResult>("tencentcloud:Monitor/getAlarmHistory:getAlarmHistory", args ?? new GetAlarmHistoryInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmHistoryArgs : global::Pulumi.InvokeArgs
    {
        [Input("alarmLevels")]
        private List<string>? _alarmLevels;
        public List<string> AlarmLevels
        {
            get => _alarmLevels ?? (_alarmLevels = new List<string>());
            set => _alarmLevels = value;
        }

        [Input("alarmObject")]
        public string? AlarmObject { get; set; }

        [Input("alarmStatuses")]
        private List<string>? _alarmStatuses;
        public List<string> AlarmStatuses
        {
            get => _alarmStatuses ?? (_alarmStatuses = new List<string>());
            set => _alarmStatuses = value;
        }

        [Input("content")]
        public string? Content { get; set; }

        [Input("endTime")]
        public int? EndTime { get; set; }

        [Input("instanceGroupIds")]
        private List<int>? _instanceGroupIds;
        public List<int> InstanceGroupIds
        {
            get => _instanceGroupIds ?? (_instanceGroupIds = new List<int>());
            set => _instanceGroupIds = value;
        }

        [Input("metricNames")]
        private List<string>? _metricNames;
        public List<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new List<string>());
            set => _metricNames = value;
        }

        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        [Input("monitorTypes")]
        private List<string>? _monitorTypes;
        public List<string> MonitorTypes
        {
            get => _monitorTypes ?? (_monitorTypes = new List<string>());
            set => _monitorTypes = value;
        }

        [Input("namespaces")]
        private List<Inputs.GetAlarmHistoryNamespaceArgs>? _namespaces;
        public List<Inputs.GetAlarmHistoryNamespaceArgs> Namespaces
        {
            get => _namespaces ?? (_namespaces = new List<Inputs.GetAlarmHistoryNamespaceArgs>());
            set => _namespaces = value;
        }

        [Input("order")]
        public string? Order { get; set; }

        [Input("policyIds")]
        private List<string>? _policyIds;
        public List<string> PolicyIds
        {
            get => _policyIds ?? (_policyIds = new List<string>());
            set => _policyIds = value;
        }

        [Input("policyName")]
        public string? PolicyName { get; set; }

        [Input("projectIds")]
        private List<int>? _projectIds;
        public List<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new List<int>());
            set => _projectIds = value;
        }

        [Input("receiverGroups")]
        private List<int>? _receiverGroups;
        public List<int> ReceiverGroups
        {
            get => _receiverGroups ?? (_receiverGroups = new List<int>());
            set => _receiverGroups = value;
        }

        [Input("receiverUids")]
        private List<int>? _receiverUids;
        public List<int> ReceiverUids
        {
            get => _receiverUids ?? (_receiverUids = new List<int>());
            set => _receiverUids = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startTime")]
        public int? StartTime { get; set; }

        public GetAlarmHistoryArgs()
        {
        }
        public static new GetAlarmHistoryArgs Empty => new GetAlarmHistoryArgs();
    }

    public sealed class GetAlarmHistoryInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("alarmLevels")]
        private InputList<string>? _alarmLevels;
        public InputList<string> AlarmLevels
        {
            get => _alarmLevels ?? (_alarmLevels = new InputList<string>());
            set => _alarmLevels = value;
        }

        [Input("alarmObject")]
        public Input<string>? AlarmObject { get; set; }

        [Input("alarmStatuses")]
        private InputList<string>? _alarmStatuses;
        public InputList<string> AlarmStatuses
        {
            get => _alarmStatuses ?? (_alarmStatuses = new InputList<string>());
            set => _alarmStatuses = value;
        }

        [Input("content")]
        public Input<string>? Content { get; set; }

        [Input("endTime")]
        public Input<int>? EndTime { get; set; }

        [Input("instanceGroupIds")]
        private InputList<int>? _instanceGroupIds;
        public InputList<int> InstanceGroupIds
        {
            get => _instanceGroupIds ?? (_instanceGroupIds = new InputList<int>());
            set => _instanceGroupIds = value;
        }

        [Input("metricNames")]
        private InputList<string>? _metricNames;
        public InputList<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new InputList<string>());
            set => _metricNames = value;
        }

        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        [Input("monitorTypes")]
        private InputList<string>? _monitorTypes;
        public InputList<string> MonitorTypes
        {
            get => _monitorTypes ?? (_monitorTypes = new InputList<string>());
            set => _monitorTypes = value;
        }

        [Input("namespaces")]
        private InputList<Inputs.GetAlarmHistoryNamespaceInputArgs>? _namespaces;
        public InputList<Inputs.GetAlarmHistoryNamespaceInputArgs> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<Inputs.GetAlarmHistoryNamespaceInputArgs>());
            set => _namespaces = value;
        }

        [Input("order")]
        public Input<string>? Order { get; set; }

        [Input("policyIds")]
        private InputList<string>? _policyIds;
        public InputList<string> PolicyIds
        {
            get => _policyIds ?? (_policyIds = new InputList<string>());
            set => _policyIds = value;
        }

        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        [Input("projectIds")]
        private InputList<int>? _projectIds;
        public InputList<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<int>());
            set => _projectIds = value;
        }

        [Input("receiverGroups")]
        private InputList<int>? _receiverGroups;
        public InputList<int> ReceiverGroups
        {
            get => _receiverGroups ?? (_receiverGroups = new InputList<int>());
            set => _receiverGroups = value;
        }

        [Input("receiverUids")]
        private InputList<int>? _receiverUids;
        public InputList<int> ReceiverUids
        {
            get => _receiverUids ?? (_receiverUids = new InputList<int>());
            set => _receiverUids = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startTime")]
        public Input<int>? StartTime { get; set; }

        public GetAlarmHistoryInvokeArgs()
        {
        }
        public static new GetAlarmHistoryInvokeArgs Empty => new GetAlarmHistoryInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmHistoryResult
    {
        public readonly ImmutableArray<string> AlarmLevels;
        public readonly string? AlarmObject;
        public readonly ImmutableArray<string> AlarmStatuses;
        public readonly string? Content;
        public readonly int? EndTime;
        public readonly ImmutableArray<Outputs.GetAlarmHistoryHistoryResult> Histories;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<int> InstanceGroupIds;
        public readonly ImmutableArray<string> MetricNames;
        public readonly string Module;
        public readonly ImmutableArray<string> MonitorTypes;
        public readonly ImmutableArray<Outputs.GetAlarmHistoryNamespaceResult> Namespaces;
        public readonly string? Order;
        public readonly ImmutableArray<string> PolicyIds;
        public readonly string? PolicyName;
        public readonly ImmutableArray<int> ProjectIds;
        public readonly ImmutableArray<int> ReceiverGroups;
        public readonly ImmutableArray<int> ReceiverUids;
        public readonly string? ResultOutputFile;
        public readonly int? StartTime;

        [OutputConstructor]
        private GetAlarmHistoryResult(
            ImmutableArray<string> alarmLevels,

            string? alarmObject,

            ImmutableArray<string> alarmStatuses,

            string? content,

            int? endTime,

            ImmutableArray<Outputs.GetAlarmHistoryHistoryResult> histories,

            string id,

            ImmutableArray<int> instanceGroupIds,

            ImmutableArray<string> metricNames,

            string module,

            ImmutableArray<string> monitorTypes,

            ImmutableArray<Outputs.GetAlarmHistoryNamespaceResult> namespaces,

            string? order,

            ImmutableArray<string> policyIds,

            string? policyName,

            ImmutableArray<int> projectIds,

            ImmutableArray<int> receiverGroups,

            ImmutableArray<int> receiverUids,

            string? resultOutputFile,

            int? startTime)
        {
            AlarmLevels = alarmLevels;
            AlarmObject = alarmObject;
            AlarmStatuses = alarmStatuses;
            Content = content;
            EndTime = endTime;
            Histories = histories;
            Id = id;
            InstanceGroupIds = instanceGroupIds;
            MetricNames = metricNames;
            Module = module;
            MonitorTypes = monitorTypes;
            Namespaces = namespaces;
            Order = order;
            PolicyIds = policyIds;
            PolicyName = policyName;
            ProjectIds = projectIds;
            ReceiverGroups = receiverGroups;
            ReceiverUids = receiverUids;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
