// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    public static class GetStatisticData
    {
        public static Task<GetStatisticDataResult> InvokeAsync(GetStatisticDataArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStatisticDataResult>("tencentcloud:Monitor/getStatisticData:getStatisticData", args ?? new GetStatisticDataArgs(), options.WithDefaults());

        public static Output<GetStatisticDataResult> Invoke(GetStatisticDataInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStatisticDataResult>("tencentcloud:Monitor/getStatisticData:getStatisticData", args ?? new GetStatisticDataInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStatisticDataArgs : global::Pulumi.InvokeArgs
    {
        [Input("conditions")]
        private List<Inputs.GetStatisticDataConditionArgs>? _conditions;
        public List<Inputs.GetStatisticDataConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new List<Inputs.GetStatisticDataConditionArgs>());
            set => _conditions = value;
        }

        [Input("groupBys")]
        private List<string>? _groupBys;
        public List<string> GroupBys
        {
            get => _groupBys ?? (_groupBys = new List<string>());
            set => _groupBys = value;
        }

        [Input("metricNames", required: true)]
        private List<string>? _metricNames;
        public List<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new List<string>());
            set => _metricNames = value;
        }

        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        [Input("namespace", required: true)]
        public string Namespace { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetStatisticDataArgs()
        {
        }
        public static new GetStatisticDataArgs Empty => new GetStatisticDataArgs();
    }

    public sealed class GetStatisticDataInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("conditions")]
        private InputList<Inputs.GetStatisticDataConditionInputArgs>? _conditions;
        public InputList<Inputs.GetStatisticDataConditionInputArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Inputs.GetStatisticDataConditionInputArgs>());
            set => _conditions = value;
        }

        [Input("groupBys")]
        private InputList<string>? _groupBys;
        public InputList<string> GroupBys
        {
            get => _groupBys ?? (_groupBys = new InputList<string>());
            set => _groupBys = value;
        }

        [Input("metricNames", required: true)]
        private InputList<string>? _metricNames;
        public InputList<string> MetricNames
        {
            get => _metricNames ?? (_metricNames = new InputList<string>());
            set => _metricNames = value;
        }

        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        [Input("namespace", required: true)]
        public Input<string> Namespace { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetStatisticDataInvokeArgs()
        {
        }
        public static new GetStatisticDataInvokeArgs Empty => new GetStatisticDataInvokeArgs();
    }


    [OutputType]
    public sealed class GetStatisticDataResult
    {
        public readonly ImmutableArray<Outputs.GetStatisticDataConditionResult> Conditions;
        public readonly ImmutableArray<Outputs.GetStatisticDataDataResult> Datas;
        public readonly string EndTime;
        public readonly ImmutableArray<string> GroupBys;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> MetricNames;
        public readonly string Module;
        public readonly string Namespace;
        public readonly int Period;
        public readonly string? ResultOutputFile;
        public readonly string StartTime;

        [OutputConstructor]
        private GetStatisticDataResult(
            ImmutableArray<Outputs.GetStatisticDataConditionResult> conditions,

            ImmutableArray<Outputs.GetStatisticDataDataResult> datas,

            string endTime,

            ImmutableArray<string> groupBys,

            string id,

            ImmutableArray<string> metricNames,

            string module,

            string @namespace,

            int period,

            string? resultOutputFile,

            string startTime)
        {
            Conditions = conditions;
            Datas = datas;
            EndTime = endTime;
            GroupBys = groupBys;
            Id = id;
            MetricNames = metricNames;
            Module = module;
            Namespace = @namespace;
            Period = period;
            ResultOutputFile = resultOutputFile;
            StartTime = startTime;
        }
    }
}
