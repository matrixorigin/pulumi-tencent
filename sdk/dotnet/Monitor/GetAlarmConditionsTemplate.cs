// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    public static class GetAlarmConditionsTemplate
    {
        public static Task<GetAlarmConditionsTemplateResult> InvokeAsync(GetAlarmConditionsTemplateArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmConditionsTemplateResult>("tencentcloud:Monitor/getAlarmConditionsTemplate:getAlarmConditionsTemplate", args ?? new GetAlarmConditionsTemplateArgs(), options.WithDefaults());

        public static Output<GetAlarmConditionsTemplateResult> Invoke(GetAlarmConditionsTemplateInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmConditionsTemplateResult>("tencentcloud:Monitor/getAlarmConditionsTemplate:getAlarmConditionsTemplate", args ?? new GetAlarmConditionsTemplateInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmConditionsTemplateArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupId")]
        public string? GroupId { get; set; }

        [Input("groupName")]
        public string? GroupName { get; set; }

        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        [Input("policyCountOrder")]
        public string? PolicyCountOrder { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("updateTimeOrder")]
        public string? UpdateTimeOrder { get; set; }

        [Input("viewName")]
        public string? ViewName { get; set; }

        public GetAlarmConditionsTemplateArgs()
        {
        }
        public static new GetAlarmConditionsTemplateArgs Empty => new GetAlarmConditionsTemplateArgs();
    }

    public sealed class GetAlarmConditionsTemplateInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupId")]
        public Input<string>? GroupId { get; set; }

        [Input("groupName")]
        public Input<string>? GroupName { get; set; }

        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        [Input("policyCountOrder")]
        public Input<string>? PolicyCountOrder { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("updateTimeOrder")]
        public Input<string>? UpdateTimeOrder { get; set; }

        [Input("viewName")]
        public Input<string>? ViewName { get; set; }

        public GetAlarmConditionsTemplateInvokeArgs()
        {
        }
        public static new GetAlarmConditionsTemplateInvokeArgs Empty => new GetAlarmConditionsTemplateInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmConditionsTemplateResult
    {
        public readonly string? GroupId;
        public readonly string? GroupName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string Module;
        public readonly string? PolicyCountOrder;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetAlarmConditionsTemplateTemplateGroupListResult> TemplateGroupLists;
        public readonly string? UpdateTimeOrder;
        public readonly string? ViewName;

        [OutputConstructor]
        private GetAlarmConditionsTemplateResult(
            string? groupId,

            string? groupName,

            string id,

            string module,

            string? policyCountOrder,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetAlarmConditionsTemplateTemplateGroupListResult> templateGroupLists,

            string? updateTimeOrder,

            string? viewName)
        {
            GroupId = groupId;
            GroupName = groupName;
            Id = id;
            Module = module;
            PolicyCountOrder = policyCountOrder;
            ResultOutputFile = resultOutputFile;
            TemplateGroupLists = templateGroupLists;
            UpdateTimeOrder = updateTimeOrder;
            ViewName = viewName;
        }
    }
}
