// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Monitor
{
    public static class GetAlarmPolicy
    {
        public static Task<GetAlarmPolicyResult> InvokeAsync(GetAlarmPolicyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetAlarmPolicyResult>("tencentcloud:Monitor/getAlarmPolicy:getAlarmPolicy", args ?? new GetAlarmPolicyArgs(), options.WithDefaults());

        public static Output<GetAlarmPolicyResult> Invoke(GetAlarmPolicyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetAlarmPolicyResult>("tencentcloud:Monitor/getAlarmPolicy:getAlarmPolicy", args ?? new GetAlarmPolicyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetAlarmPolicyArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        public string? Dimensions { get; set; }

        [Input("enables")]
        private List<int>? _enables;
        public List<int> Enables
        {
            get => _enables ?? (_enables = new List<int>());
            set => _enables = value;
        }

        [Input("field")]
        public string? Field { get; set; }

        [Input("instanceGroupId")]
        public int? InstanceGroupId { get; set; }

        [Input("module", required: true)]
        public string Module { get; set; } = null!;

        [Input("monitorTypes")]
        private List<string>? _monitorTypes;
        public List<string> MonitorTypes
        {
            get => _monitorTypes ?? (_monitorTypes = new List<string>());
            set => _monitorTypes = value;
        }

        [Input("namespaces")]
        private List<string>? _namespaces;
        public List<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new List<string>());
            set => _namespaces = value;
        }

        [Input("needCorrespondence")]
        public int? NeedCorrespondence { get; set; }

        [Input("notBindAll")]
        public int? NotBindAll { get; set; }

        [Input("notBindingNoticeRule")]
        public int? NotBindingNoticeRule { get; set; }

        [Input("notInstanceGroup")]
        public int? NotInstanceGroup { get; set; }

        [Input("noticeIds")]
        private List<string>? _noticeIds;
        public List<string> NoticeIds
        {
            get => _noticeIds ?? (_noticeIds = new List<string>());
            set => _noticeIds = value;
        }

        [Input("oneClickPolicyTypes")]
        private List<string>? _oneClickPolicyTypes;
        public List<string> OneClickPolicyTypes
        {
            get => _oneClickPolicyTypes ?? (_oneClickPolicyTypes = new List<string>());
            set => _oneClickPolicyTypes = value;
        }

        [Input("order")]
        public string? Order { get; set; }

        [Input("policyName")]
        public string? PolicyName { get; set; }

        [Input("policyTypes")]
        private List<string>? _policyTypes;
        public List<string> PolicyTypes
        {
            get => _policyTypes ?? (_policyTypes = new List<string>());
            set => _policyTypes = value;
        }

        [Input("projectIds")]
        private List<int>? _projectIds;
        public List<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new List<int>());
            set => _projectIds = value;
        }

        [Input("promInsId")]
        public string? PromInsId { get; set; }

        [Input("receiverGroups")]
        private List<int>? _receiverGroups;
        public List<int> ReceiverGroups
        {
            get => _receiverGroups ?? (_receiverGroups = new List<int>());
            set => _receiverGroups = value;
        }

        [Input("receiverOnCallFormIds")]
        private List<string>? _receiverOnCallFormIds;
        public List<string> ReceiverOnCallFormIds
        {
            get => _receiverOnCallFormIds ?? (_receiverOnCallFormIds = new List<string>());
            set => _receiverOnCallFormIds = value;
        }

        [Input("receiverUids")]
        private List<int>? _receiverUids;
        public List<int> ReceiverUids
        {
            get => _receiverUids ?? (_receiverUids = new List<int>());
            set => _receiverUids = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("ruleTypes")]
        private List<string>? _ruleTypes;
        public List<string> RuleTypes
        {
            get => _ruleTypes ?? (_ruleTypes = new List<string>());
            set => _ruleTypes = value;
        }

        [Input("triggerTasks")]
        private List<Inputs.GetAlarmPolicyTriggerTaskArgs>? _triggerTasks;
        public List<Inputs.GetAlarmPolicyTriggerTaskArgs> TriggerTasks
        {
            get => _triggerTasks ?? (_triggerTasks = new List<Inputs.GetAlarmPolicyTriggerTaskArgs>());
            set => _triggerTasks = value;
        }

        public GetAlarmPolicyArgs()
        {
        }
        public static new GetAlarmPolicyArgs Empty => new GetAlarmPolicyArgs();
    }

    public sealed class GetAlarmPolicyInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dimensions")]
        public Input<string>? Dimensions { get; set; }

        [Input("enables")]
        private InputList<int>? _enables;
        public InputList<int> Enables
        {
            get => _enables ?? (_enables = new InputList<int>());
            set => _enables = value;
        }

        [Input("field")]
        public Input<string>? Field { get; set; }

        [Input("instanceGroupId")]
        public Input<int>? InstanceGroupId { get; set; }

        [Input("module", required: true)]
        public Input<string> Module { get; set; } = null!;

        [Input("monitorTypes")]
        private InputList<string>? _monitorTypes;
        public InputList<string> MonitorTypes
        {
            get => _monitorTypes ?? (_monitorTypes = new InputList<string>());
            set => _monitorTypes = value;
        }

        [Input("namespaces")]
        private InputList<string>? _namespaces;
        public InputList<string> Namespaces
        {
            get => _namespaces ?? (_namespaces = new InputList<string>());
            set => _namespaces = value;
        }

        [Input("needCorrespondence")]
        public Input<int>? NeedCorrespondence { get; set; }

        [Input("notBindAll")]
        public Input<int>? NotBindAll { get; set; }

        [Input("notBindingNoticeRule")]
        public Input<int>? NotBindingNoticeRule { get; set; }

        [Input("notInstanceGroup")]
        public Input<int>? NotInstanceGroup { get; set; }

        [Input("noticeIds")]
        private InputList<string>? _noticeIds;
        public InputList<string> NoticeIds
        {
            get => _noticeIds ?? (_noticeIds = new InputList<string>());
            set => _noticeIds = value;
        }

        [Input("oneClickPolicyTypes")]
        private InputList<string>? _oneClickPolicyTypes;
        public InputList<string> OneClickPolicyTypes
        {
            get => _oneClickPolicyTypes ?? (_oneClickPolicyTypes = new InputList<string>());
            set => _oneClickPolicyTypes = value;
        }

        [Input("order")]
        public Input<string>? Order { get; set; }

        [Input("policyName")]
        public Input<string>? PolicyName { get; set; }

        [Input("policyTypes")]
        private InputList<string>? _policyTypes;
        public InputList<string> PolicyTypes
        {
            get => _policyTypes ?? (_policyTypes = new InputList<string>());
            set => _policyTypes = value;
        }

        [Input("projectIds")]
        private InputList<int>? _projectIds;
        public InputList<int> ProjectIds
        {
            get => _projectIds ?? (_projectIds = new InputList<int>());
            set => _projectIds = value;
        }

        [Input("promInsId")]
        public Input<string>? PromInsId { get; set; }

        [Input("receiverGroups")]
        private InputList<int>? _receiverGroups;
        public InputList<int> ReceiverGroups
        {
            get => _receiverGroups ?? (_receiverGroups = new InputList<int>());
            set => _receiverGroups = value;
        }

        [Input("receiverOnCallFormIds")]
        private InputList<string>? _receiverOnCallFormIds;
        public InputList<string> ReceiverOnCallFormIds
        {
            get => _receiverOnCallFormIds ?? (_receiverOnCallFormIds = new InputList<string>());
            set => _receiverOnCallFormIds = value;
        }

        [Input("receiverUids")]
        private InputList<int>? _receiverUids;
        public InputList<int> ReceiverUids
        {
            get => _receiverUids ?? (_receiverUids = new InputList<int>());
            set => _receiverUids = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("ruleTypes")]
        private InputList<string>? _ruleTypes;
        public InputList<string> RuleTypes
        {
            get => _ruleTypes ?? (_ruleTypes = new InputList<string>());
            set => _ruleTypes = value;
        }

        [Input("triggerTasks")]
        private InputList<Inputs.GetAlarmPolicyTriggerTaskInputArgs>? _triggerTasks;
        public InputList<Inputs.GetAlarmPolicyTriggerTaskInputArgs> TriggerTasks
        {
            get => _triggerTasks ?? (_triggerTasks = new InputList<Inputs.GetAlarmPolicyTriggerTaskInputArgs>());
            set => _triggerTasks = value;
        }

        public GetAlarmPolicyInvokeArgs()
        {
        }
        public static new GetAlarmPolicyInvokeArgs Empty => new GetAlarmPolicyInvokeArgs();
    }


    [OutputType]
    public sealed class GetAlarmPolicyResult
    {
        public readonly string? Dimensions;
        public readonly ImmutableArray<int> Enables;
        public readonly string? Field;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly int? InstanceGroupId;
        public readonly string Module;
        public readonly ImmutableArray<string> MonitorTypes;
        public readonly ImmutableArray<string> Namespaces;
        public readonly int? NeedCorrespondence;
        public readonly int? NotBindAll;
        public readonly int? NotBindingNoticeRule;
        public readonly int? NotInstanceGroup;
        public readonly ImmutableArray<string> NoticeIds;
        public readonly ImmutableArray<string> OneClickPolicyTypes;
        public readonly string? Order;
        public readonly ImmutableArray<Outputs.GetAlarmPolicyPolicyResult> Policies;
        public readonly string? PolicyName;
        public readonly ImmutableArray<string> PolicyTypes;
        public readonly ImmutableArray<int> ProjectIds;
        public readonly string? PromInsId;
        public readonly ImmutableArray<int> ReceiverGroups;
        public readonly ImmutableArray<string> ReceiverOnCallFormIds;
        public readonly ImmutableArray<int> ReceiverUids;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<string> RuleTypes;
        public readonly ImmutableArray<Outputs.GetAlarmPolicyTriggerTaskResult> TriggerTasks;

        [OutputConstructor]
        private GetAlarmPolicyResult(
            string? dimensions,

            ImmutableArray<int> enables,

            string? field,

            string id,

            int? instanceGroupId,

            string module,

            ImmutableArray<string> monitorTypes,

            ImmutableArray<string> namespaces,

            int? needCorrespondence,

            int? notBindAll,

            int? notBindingNoticeRule,

            int? notInstanceGroup,

            ImmutableArray<string> noticeIds,

            ImmutableArray<string> oneClickPolicyTypes,

            string? order,

            ImmutableArray<Outputs.GetAlarmPolicyPolicyResult> policies,

            string? policyName,

            ImmutableArray<string> policyTypes,

            ImmutableArray<int> projectIds,

            string? promInsId,

            ImmutableArray<int> receiverGroups,

            ImmutableArray<string> receiverOnCallFormIds,

            ImmutableArray<int> receiverUids,

            string? resultOutputFile,

            ImmutableArray<string> ruleTypes,

            ImmutableArray<Outputs.GetAlarmPolicyTriggerTaskResult> triggerTasks)
        {
            Dimensions = dimensions;
            Enables = enables;
            Field = field;
            Id = id;
            InstanceGroupId = instanceGroupId;
            Module = module;
            MonitorTypes = monitorTypes;
            Namespaces = namespaces;
            NeedCorrespondence = needCorrespondence;
            NotBindAll = notBindAll;
            NotBindingNoticeRule = notBindingNoticeRule;
            NotInstanceGroup = notInstanceGroup;
            NoticeIds = noticeIds;
            OneClickPolicyTypes = oneClickPolicyTypes;
            Order = order;
            Policies = policies;
            PolicyName = policyName;
            PolicyTypes = policyTypes;
            ProjectIds = projectIds;
            PromInsId = promInsId;
            ReceiverGroups = receiverGroups;
            ReceiverOnCallFormIds = receiverOnCallFormIds;
            ReceiverUids = receiverUids;
            ResultOutputFile = resultOutputFile;
            RuleTypes = ruleTypes;
            TriggerTasks = triggerTasks;
        }
    }
}
