// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dnspod
{
    public static class GetDomainList
    {
        public static Task<GetDomainListResult> InvokeAsync(GetDomainListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainListResult>("tencentcloud:Dnspod/getDomainList:getDomainList", args ?? new GetDomainListArgs(), options.WithDefaults());

        public static Output<GetDomainListResult> Invoke(GetDomainListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainListResult>("tencentcloud:Dnspod/getDomainList:getDomainList", args ?? new GetDomainListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainListArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupIds")]
        private List<int>? _groupIds;
        public List<int> GroupIds
        {
            get => _groupIds ?? (_groupIds = new List<int>());
            set => _groupIds = value;
        }

        [Input("keyword")]
        public string? Keyword { get; set; }

        [Input("packages")]
        private List<string>? _packages;
        public List<string> Packages
        {
            get => _packages ?? (_packages = new List<string>());
            set => _packages = value;
        }

        [Input("projectId")]
        public int? ProjectId { get; set; }

        [Input("recordCountBegin")]
        public int? RecordCountBegin { get; set; }

        [Input("recordCountEnd")]
        public int? RecordCountEnd { get; set; }

        [Input("remark")]
        public string? Remark { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("sortField")]
        public string? SortField { get; set; }

        [Input("sortType")]
        public string? SortType { get; set; }

        [Input("statuses")]
        private List<string>? _statuses;
        public List<string> Statuses
        {
            get => _statuses ?? (_statuses = new List<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private List<Inputs.GetDomainListTagArgs>? _tags;
        public List<Inputs.GetDomainListTagArgs> Tags
        {
            get => _tags ?? (_tags = new List<Inputs.GetDomainListTagArgs>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public string Type { get; set; } = null!;

        [Input("updatedAtBegin")]
        public string? UpdatedAtBegin { get; set; }

        [Input("updatedAtEnd")]
        public string? UpdatedAtEnd { get; set; }

        public GetDomainListArgs()
        {
        }
        public static new GetDomainListArgs Empty => new GetDomainListArgs();
    }

    public sealed class GetDomainListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("groupIds")]
        private InputList<int>? _groupIds;
        public InputList<int> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<int>());
            set => _groupIds = value;
        }

        [Input("keyword")]
        public Input<string>? Keyword { get; set; }

        [Input("packages")]
        private InputList<string>? _packages;
        public InputList<string> Packages
        {
            get => _packages ?? (_packages = new InputList<string>());
            set => _packages = value;
        }

        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("recordCountBegin")]
        public Input<int>? RecordCountBegin { get; set; }

        [Input("recordCountEnd")]
        public Input<int>? RecordCountEnd { get; set; }

        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("sortField")]
        public Input<string>? SortField { get; set; }

        [Input("sortType")]
        public Input<string>? SortType { get; set; }

        [Input("statuses")]
        private InputList<string>? _statuses;
        public InputList<string> Statuses
        {
            get => _statuses ?? (_statuses = new InputList<string>());
            set => _statuses = value;
        }

        [Input("tags")]
        private InputList<Inputs.GetDomainListTagInputArgs>? _tags;
        public InputList<Inputs.GetDomainListTagInputArgs> Tags
        {
            get => _tags ?? (_tags = new InputList<Inputs.GetDomainListTagInputArgs>());
            set => _tags = value;
        }

        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        [Input("updatedAtBegin")]
        public Input<string>? UpdatedAtBegin { get; set; }

        [Input("updatedAtEnd")]
        public Input<string>? UpdatedAtEnd { get; set; }

        public GetDomainListInvokeArgs()
        {
        }
        public static new GetDomainListInvokeArgs Empty => new GetDomainListInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainListResult
    {
        public readonly ImmutableArray<Outputs.GetDomainListDomainListResult> DnspodDomainList;
        public readonly ImmutableArray<int> GroupIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Keyword;
        public readonly ImmutableArray<string> Packages;
        public readonly int? ProjectId;
        public readonly int? RecordCountBegin;
        public readonly int? RecordCountEnd;
        public readonly string? Remark;
        public readonly string? ResultOutputFile;
        public readonly string? SortField;
        public readonly string? SortType;
        public readonly ImmutableArray<string> Statuses;
        public readonly ImmutableArray<Outputs.GetDomainListTagResult> Tags;
        public readonly string Type;
        public readonly string? UpdatedAtBegin;
        public readonly string? UpdatedAtEnd;

        [OutputConstructor]
        private GetDomainListResult(
            ImmutableArray<Outputs.GetDomainListDomainListResult> domainLists,

            ImmutableArray<int> groupIds,

            string id,

            string? keyword,

            ImmutableArray<string> packages,

            int? projectId,

            int? recordCountBegin,

            int? recordCountEnd,

            string? remark,

            string? resultOutputFile,

            string? sortField,

            string? sortType,

            ImmutableArray<string> statuses,

            ImmutableArray<Outputs.GetDomainListTagResult> tags,

            string type,

            string? updatedAtBegin,

            string? updatedAtEnd)
        {
            DnspodDomainList = domainLists;
            GroupIds = groupIds;
            Id = id;
            Keyword = keyword;
            Packages = packages;
            ProjectId = projectId;
            RecordCountBegin = recordCountBegin;
            RecordCountEnd = recordCountEnd;
            Remark = remark;
            ResultOutputFile = resultOutputFile;
            SortField = sortField;
            SortType = sortType;
            Statuses = statuses;
            Tags = tags;
            Type = type;
            UpdatedAtBegin = updatedAtBegin;
            UpdatedAtEnd = updatedAtEnd;
        }
    }
}
