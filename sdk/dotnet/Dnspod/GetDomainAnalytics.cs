// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dnspod
{
    public static class GetDomainAnalytics
    {
        public static Task<GetDomainAnalyticsResult> InvokeAsync(GetDomainAnalyticsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDomainAnalyticsResult>("tencentcloud:Dnspod/getDomainAnalytics:getDomainAnalytics", args ?? new GetDomainAnalyticsArgs(), options.WithDefaults());

        public static Output<GetDomainAnalyticsResult> Invoke(GetDomainAnalyticsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDomainAnalyticsResult>("tencentcloud:Dnspod/getDomainAnalytics:getDomainAnalytics", args ?? new GetDomainAnalyticsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDomainAnalyticsArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsFormat")]
        public string? DnsFormat { get; set; }

        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("domainId")]
        public int? DomainId { get; set; }

        [Input("endDate", required: true)]
        public string EndDate { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("startDate", required: true)]
        public string StartDate { get; set; } = null!;

        public GetDomainAnalyticsArgs()
        {
        }
        public static new GetDomainAnalyticsArgs Empty => new GetDomainAnalyticsArgs();
    }

    public sealed class GetDomainAnalyticsInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("dnsFormat")]
        public Input<string>? DnsFormat { get; set; }

        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("domainId")]
        public Input<int>? DomainId { get; set; }

        [Input("endDate", required: true)]
        public Input<string> EndDate { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("startDate", required: true)]
        public Input<string> StartDate { get; set; } = null!;

        public GetDomainAnalyticsInvokeArgs()
        {
        }
        public static new GetDomainAnalyticsInvokeArgs Empty => new GetDomainAnalyticsInvokeArgs();
    }


    [OutputType]
    public sealed class GetDomainAnalyticsResult
    {
        public readonly ImmutableArray<Outputs.GetDomainAnalyticsAliasDataResult> AliasDatas;
        public readonly ImmutableArray<Outputs.GetDomainAnalyticsDataResult> Datas;
        public readonly string? DnsFormat;
        public readonly string Domain;
        public readonly int? DomainId;
        public readonly string EndDate;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetDomainAnalyticsInfoResult> Infos;
        public readonly string? ResultOutputFile;
        public readonly string StartDate;

        [OutputConstructor]
        private GetDomainAnalyticsResult(
            ImmutableArray<Outputs.GetDomainAnalyticsAliasDataResult> aliasDatas,

            ImmutableArray<Outputs.GetDomainAnalyticsDataResult> datas,

            string? dnsFormat,

            string domain,

            int? domainId,

            string endDate,

            string id,

            ImmutableArray<Outputs.GetDomainAnalyticsInfoResult> infos,

            string? resultOutputFile,

            string startDate)
        {
            AliasDatas = aliasDatas;
            Datas = datas;
            DnsFormat = dnsFormat;
            Domain = domain;
            DomainId = domainId;
            EndDate = endDate;
            Id = id;
            Infos = infos;
            ResultOutputFile = resultOutputFile;
            StartDate = startDate;
        }
    }
}
