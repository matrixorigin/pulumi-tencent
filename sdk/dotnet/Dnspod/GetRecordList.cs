// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Dnspod
{
    public static class GetRecordList
    {
        public static Task<GetRecordListResult> InvokeAsync(GetRecordListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRecordListResult>("tencentcloud:Dnspod/getRecordList:getRecordList", args ?? new GetRecordListArgs(), options.WithDefaults());

        public static Output<GetRecordListResult> Invoke(GetRecordListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRecordListResult>("tencentcloud:Dnspod/getRecordList:getRecordList", args ?? new GetRecordListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRecordListArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public string Domain { get; set; } = null!;

        [Input("domainId")]
        public int? DomainId { get; set; }

        [Input("groupIds")]
        private List<int>? _groupIds;
        public List<int> GroupIds
        {
            get => _groupIds ?? (_groupIds = new List<int>());
            set => _groupIds = value;
        }

        [Input("isExactSubDomain")]
        public bool? IsExactSubDomain { get; set; }

        [Input("keyword")]
        public string? Keyword { get; set; }

        [Input("mxBegin")]
        public int? MxBegin { get; set; }

        [Input("mxEnd")]
        public int? MxEnd { get; set; }

        [Input("projectId")]
        public int? ProjectId { get; set; }

        [Input("recordLines")]
        private List<string>? _recordLines;
        public List<string> RecordLines
        {
            get => _recordLines ?? (_recordLines = new List<string>());
            set => _recordLines = value;
        }

        [Input("recordStatuses")]
        private List<string>? _recordStatuses;
        public List<string> RecordStatuses
        {
            get => _recordStatuses ?? (_recordStatuses = new List<string>());
            set => _recordStatuses = value;
        }

        [Input("recordTypes")]
        private List<string>? _recordTypes;
        public List<string> RecordTypes
        {
            get => _recordTypes ?? (_recordTypes = new List<string>());
            set => _recordTypes = value;
        }

        [Input("recordValue")]
        public string? RecordValue { get; set; }

        [Input("remark")]
        public string? Remark { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        [Input("sortField")]
        public string? SortField { get; set; }

        [Input("sortType")]
        public string? SortType { get; set; }

        [Input("subDomain")]
        public string? SubDomain { get; set; }

        [Input("ttlBegin")]
        public int? TtlBegin { get; set; }

        [Input("ttlEnd")]
        public int? TtlEnd { get; set; }

        [Input("updatedAtBegin")]
        public string? UpdatedAtBegin { get; set; }

        [Input("updatedAtEnd")]
        public string? UpdatedAtEnd { get; set; }

        [Input("weightBegin")]
        public int? WeightBegin { get; set; }

        [Input("weightEnd")]
        public int? WeightEnd { get; set; }

        public GetRecordListArgs()
        {
        }
        public static new GetRecordListArgs Empty => new GetRecordListArgs();
    }

    public sealed class GetRecordListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        [Input("domainId")]
        public Input<int>? DomainId { get; set; }

        [Input("groupIds")]
        private InputList<int>? _groupIds;
        public InputList<int> GroupIds
        {
            get => _groupIds ?? (_groupIds = new InputList<int>());
            set => _groupIds = value;
        }

        [Input("isExactSubDomain")]
        public Input<bool>? IsExactSubDomain { get; set; }

        [Input("keyword")]
        public Input<string>? Keyword { get; set; }

        [Input("mxBegin")]
        public Input<int>? MxBegin { get; set; }

        [Input("mxEnd")]
        public Input<int>? MxEnd { get; set; }

        [Input("projectId")]
        public Input<int>? ProjectId { get; set; }

        [Input("recordLines")]
        private InputList<string>? _recordLines;
        public InputList<string> RecordLines
        {
            get => _recordLines ?? (_recordLines = new InputList<string>());
            set => _recordLines = value;
        }

        [Input("recordStatuses")]
        private InputList<string>? _recordStatuses;
        public InputList<string> RecordStatuses
        {
            get => _recordStatuses ?? (_recordStatuses = new InputList<string>());
            set => _recordStatuses = value;
        }

        [Input("recordTypes")]
        private InputList<string>? _recordTypes;
        public InputList<string> RecordTypes
        {
            get => _recordTypes ?? (_recordTypes = new InputList<string>());
            set => _recordTypes = value;
        }

        [Input("recordValue")]
        public Input<string>? RecordValue { get; set; }

        [Input("remark")]
        public Input<string>? Remark { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        [Input("sortField")]
        public Input<string>? SortField { get; set; }

        [Input("sortType")]
        public Input<string>? SortType { get; set; }

        [Input("subDomain")]
        public Input<string>? SubDomain { get; set; }

        [Input("ttlBegin")]
        public Input<int>? TtlBegin { get; set; }

        [Input("ttlEnd")]
        public Input<int>? TtlEnd { get; set; }

        [Input("updatedAtBegin")]
        public Input<string>? UpdatedAtBegin { get; set; }

        [Input("updatedAtEnd")]
        public Input<string>? UpdatedAtEnd { get; set; }

        [Input("weightBegin")]
        public Input<int>? WeightBegin { get; set; }

        [Input("weightEnd")]
        public Input<int>? WeightEnd { get; set; }

        public GetRecordListInvokeArgs()
        {
        }
        public static new GetRecordListInvokeArgs Empty => new GetRecordListInvokeArgs();
    }


    [OutputType]
    public sealed class GetRecordListResult
    {
        public readonly string Domain;
        public readonly int? DomainId;
        public readonly ImmutableArray<int> GroupIds;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly bool? IsExactSubDomain;
        public readonly string? Keyword;
        public readonly int? MxBegin;
        public readonly int? MxEnd;
        public readonly int? ProjectId;
        public readonly ImmutableArray<Outputs.GetRecordListRecordCountInfoResult> RecordCountInfos;
        public readonly ImmutableArray<string> RecordLines;
        public readonly ImmutableArray<Outputs.GetRecordListRecordListResult> DnspodRecordList;
        public readonly ImmutableArray<string> RecordStatuses;
        public readonly ImmutableArray<string> RecordTypes;
        public readonly string? RecordValue;
        public readonly string? Remark;
        public readonly string? ResultOutputFile;
        public readonly string? SortField;
        public readonly string? SortType;
        public readonly string? SubDomain;
        public readonly int? TtlBegin;
        public readonly int? TtlEnd;
        public readonly string? UpdatedAtBegin;
        public readonly string? UpdatedAtEnd;
        public readonly int? WeightBegin;
        public readonly int? WeightEnd;

        [OutputConstructor]
        private GetRecordListResult(
            string domain,

            int? domainId,

            ImmutableArray<int> groupIds,

            string id,

            bool? isExactSubDomain,

            string? keyword,

            int? mxBegin,

            int? mxEnd,

            int? projectId,

            ImmutableArray<Outputs.GetRecordListRecordCountInfoResult> recordCountInfos,

            ImmutableArray<string> recordLines,

            ImmutableArray<Outputs.GetRecordListRecordListResult> recordLists,

            ImmutableArray<string> recordStatuses,

            ImmutableArray<string> recordTypes,

            string? recordValue,

            string? remark,

            string? resultOutputFile,

            string? sortField,

            string? sortType,

            string? subDomain,

            int? ttlBegin,

            int? ttlEnd,

            string? updatedAtBegin,

            string? updatedAtEnd,

            int? weightBegin,

            int? weightEnd)
        {
            Domain = domain;
            DomainId = domainId;
            GroupIds = groupIds;
            Id = id;
            IsExactSubDomain = isExactSubDomain;
            Keyword = keyword;
            MxBegin = mxBegin;
            MxEnd = mxEnd;
            ProjectId = projectId;
            RecordCountInfos = recordCountInfos;
            RecordLines = recordLines;
            DnspodRecordList = recordLists;
            RecordStatuses = recordStatuses;
            RecordTypes = recordTypes;
            RecordValue = recordValue;
            Remark = remark;
            ResultOutputFile = resultOutputFile;
            SortField = sortField;
            SortType = sortType;
            SubDomain = subDomain;
            TtlBegin = ttlBegin;
            TtlEnd = ttlEnd;
            UpdatedAtBegin = updatedAtBegin;
            UpdatedAtEnd = updatedAtEnd;
            WeightBegin = weightBegin;
            WeightEnd = weightEnd;
        }
    }
}
