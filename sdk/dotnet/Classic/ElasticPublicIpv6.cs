// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Classic
{
    [TencentcloudResourceType("tencentcloud:Classic/elasticPublicIpv6:ElasticPublicIpv6")]
    public partial class ElasticPublicIpv6 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Bandwidth package id, move the account up, and you need to pass in the ipv6 address to apply for bandwidth package
        /// charging mode.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string> BandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// Network billing model. IPV6 currently supports `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. The default network
        /// charging mode is `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Output("internetChargeType")]
        public Output<string> InternetChargeType { get; private set; } = null!;

        /// <summary>
        /// Bandwidth in Mbps. Default is 1Mbps.
        /// </summary>
        [Output("internetMaxBandwidthOut")]
        public Output<int> InternetMaxBandwidthOut { get; private set; } = null!;

        /// <summary>
        /// IPV6 addresses that require public network access.
        /// </summary>
        [Output("ip6Address")]
        public Output<string> Ip6Address { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a ElasticPublicIpv6 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ElasticPublicIpv6(string name, ElasticPublicIpv6Args args, CustomResourceOptions? options = null)
            : base("tencentcloud:Classic/elasticPublicIpv6:ElasticPublicIpv6", name, args ?? new ElasticPublicIpv6Args(), MakeResourceOptions(options, ""))
        {
        }

        private ElasticPublicIpv6(string name, Input<string> id, ElasticPublicIpv6State? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Classic/elasticPublicIpv6:ElasticPublicIpv6", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ElasticPublicIpv6 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ElasticPublicIpv6 Get(string name, Input<string> id, ElasticPublicIpv6State? state = null, CustomResourceOptions? options = null)
        {
            return new ElasticPublicIpv6(name, id, state, options);
        }
    }

    public sealed class ElasticPublicIpv6Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bandwidth package id, move the account up, and you need to pass in the ipv6 address to apply for bandwidth package
        /// charging mode.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Network billing model. IPV6 currently supports `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. The default network
        /// charging mode is `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Bandwidth in Mbps. Default is 1Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// IPV6 addresses that require public network access.
        /// </summary>
        [Input("ip6Address", required: true)]
        public Input<string> Ip6Address { get; set; } = null!;

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public ElasticPublicIpv6Args()
        {
        }
        public static new ElasticPublicIpv6Args Empty => new ElasticPublicIpv6Args();
    }

    public sealed class ElasticPublicIpv6State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Bandwidth package id, move the account up, and you need to pass in the ipv6 address to apply for bandwidth package
        /// charging mode.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Network billing model. IPV6 currently supports `TRAFFIC_POSTPAID_BY_HOUR` and `BANDWIDTH_PACKAGE`. The default network
        /// charging mode is `TRAFFIC_POSTPAID_BY_HOUR`.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Bandwidth in Mbps. Default is 1Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// IPV6 addresses that require public network access.
        /// </summary>
        [Input("ip6Address")]
        public Input<string>? Ip6Address { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public ElasticPublicIpv6State()
        {
        }
        public static new ElasticPublicIpv6State Empty => new ElasticPublicIpv6State();
    }
}
