// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Kubernetes
{
    public static class GetClusterInstances
    {
        public static Task<GetClusterInstancesResult> InvokeAsync(GetClusterInstancesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetClusterInstancesResult>("tencentcloud:Kubernetes/getClusterInstances:getClusterInstances", args ?? new GetClusterInstancesArgs(), options.WithDefaults());

        public static Output<GetClusterInstancesResult> Invoke(GetClusterInstancesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetClusterInstancesResult>("tencentcloud:Kubernetes/getClusterInstances:getClusterInstances", args ?? new GetClusterInstancesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetClusterInstancesArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public string ClusterId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetClusterInstancesFilterArgs>? _filters;
        public List<Inputs.GetClusterInstancesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetClusterInstancesFilterArgs>());
            set => _filters = value;
        }

        [Input("instanceIds")]
        private List<string>? _instanceIds;
        public List<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new List<string>());
            set => _instanceIds = value;
        }

        [Input("instanceRole")]
        public string? InstanceRole { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetClusterInstancesArgs()
        {
        }
        public static new GetClusterInstancesArgs Empty => new GetClusterInstancesArgs();
    }

    public sealed class GetClusterInstancesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("clusterId", required: true)]
        public Input<string> ClusterId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetClusterInstancesFilterInputArgs>? _filters;
        public InputList<Inputs.GetClusterInstancesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetClusterInstancesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("instanceIds")]
        private InputList<string>? _instanceIds;
        public InputList<string> InstanceIds
        {
            get => _instanceIds ?? (_instanceIds = new InputList<string>());
            set => _instanceIds = value;
        }

        [Input("instanceRole")]
        public Input<string>? InstanceRole { get; set; }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetClusterInstancesInvokeArgs()
        {
        }
        public static new GetClusterInstancesInvokeArgs Empty => new GetClusterInstancesInvokeArgs();
    }


    [OutputType]
    public sealed class GetClusterInstancesResult
    {
        public readonly string ClusterId;
        public readonly ImmutableArray<Outputs.GetClusterInstancesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<string> InstanceIds;
        public readonly string? InstanceRole;
        public readonly ImmutableArray<Outputs.GetClusterInstancesInstanceSetResult> InstanceSets;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetClusterInstancesResult(
            string clusterId,

            ImmutableArray<Outputs.GetClusterInstancesFilterResult> filters,

            string id,

            ImmutableArray<string> instanceIds,

            string? instanceRole,

            ImmutableArray<Outputs.GetClusterInstancesInstanceSetResult> instanceSets,

            string? resultOutputFile)
        {
            ClusterId = clusterId;
            Filters = filters;
            Id = id;
            InstanceIds = instanceIds;
            InstanceRole = instanceRole;
            InstanceSets = instanceSets;
            ResultOutputFile = resultOutputFile;
        }
    }
}
