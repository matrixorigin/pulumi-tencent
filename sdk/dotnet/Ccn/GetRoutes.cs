// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ccn
{
    public static class GetRoutes
    {
        public static Task<GetRoutesResult> InvokeAsync(GetRoutesArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetRoutesResult>("tencentcloud:Ccn/getRoutes:getRoutes", args ?? new GetRoutesArgs(), options.WithDefaults());

        public static Output<GetRoutesResult> Invoke(GetRoutesInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetRoutesResult>("tencentcloud:Ccn/getRoutes:getRoutes", args ?? new GetRoutesInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetRoutesArgs : global::Pulumi.InvokeArgs
    {
        [Input("ccnId", required: true)]
        public string CcnId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetRoutesFilterArgs>? _filters;
        public List<Inputs.GetRoutesFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetRoutesFilterArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetRoutesArgs()
        {
        }
        public static new GetRoutesArgs Empty => new GetRoutesArgs();
    }

    public sealed class GetRoutesInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("ccnId", required: true)]
        public Input<string> CcnId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetRoutesFilterInputArgs>? _filters;
        public InputList<Inputs.GetRoutesFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetRoutesFilterInputArgs>());
            set => _filters = value;
        }

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetRoutesInvokeArgs()
        {
        }
        public static new GetRoutesInvokeArgs Empty => new GetRoutesInvokeArgs();
    }


    [OutputType]
    public sealed class GetRoutesResult
    {
        public readonly string CcnId;
        public readonly ImmutableArray<Outputs.GetRoutesFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? ResultOutputFile;
        public readonly ImmutableArray<Outputs.GetRoutesRouteListResult> RouteLists;

        [OutputConstructor]
        private GetRoutesResult(
            string ccnId,

            ImmutableArray<Outputs.GetRoutesFilterResult> filters,

            string id,

            string? resultOutputFile,

            ImmutableArray<Outputs.GetRoutesRouteListResult> routeLists)
        {
            CcnId = ccnId;
            Filters = filters;
            Id = id;
            ResultOutputFile = resultOutputFile;
            RouteLists = routeLists;
        }
    }
}
