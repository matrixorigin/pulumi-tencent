// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.ApiGateway.Outputs
{

    [OutputType]
    public sealed class GetApiAppApiResultResult
    {
        public readonly string ApiBusinessType;
        public readonly string ApiDesc;
        public readonly string ApiId;
        public readonly string ApiName;
        public readonly string ApiType;
        public readonly string AuthRelationApiId;
        public readonly string AuthType;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultBase64EncodedTriggerRuleResult> Base64EncodedTriggerRules;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultConstantParameterResult> ConstantParameters;
        public readonly string CreatedTime;
        public readonly bool EnableCors;
        public readonly ImmutableArray<string> Environments;
        public readonly string InternalDomain;
        public readonly bool IsBase64Encoded;
        public readonly bool IsBase64Trigger;
        public readonly bool IsDebugAfterCharge;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultMicroServiceResult> MicroServices;
        public readonly ImmutableArray<int> MicroServicesInfos;
        public readonly string ModifiedTime;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultOauthConfigResult> OauthConfigs;
        public readonly string Protocol;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultRequestConfigResult> RequestConfigs;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultRequestParameterResult> RequestParameters;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultResponseErrorCodeResult> ResponseErrorCodes;
        public readonly string ResponseFailExample;
        public readonly string ResponseSuccessExample;
        public readonly string ResponseType;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultServiceConfigResult> ServiceConfigs;
        public readonly string ServiceDesc;
        public readonly string ServiceId;
        public readonly string ServiceMockReturnMessage;
        public readonly string ServiceName;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultServiceParameterResult> ServiceParameters;
        public readonly string ServiceScfFunctionName;
        public readonly string ServiceScfFunctionNamespace;
        public readonly string ServiceScfFunctionQualifier;
        public readonly bool ServiceScfIsIntegratedResponse;
        public readonly int ServiceTimeout;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultServiceTsfHealthCheckConfResult> ServiceTsfHealthCheckConfs;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultServiceTsfLoadBalanceConfResult> ServiceTsfLoadBalanceConfs;
        public readonly string ServiceType;
        public readonly string ServiceWebsocketCleanupFunctionName;
        public readonly string ServiceWebsocketCleanupFunctionNamespace;
        public readonly string ServiceWebsocketCleanupFunctionQualifier;
        public readonly string ServiceWebsocketRegisterFunctionName;
        public readonly string ServiceWebsocketRegisterFunctionNamespace;
        public readonly string ServiceWebsocketRegisterFunctionQualifier;
        public readonly string ServiceWebsocketTransportFunctionName;
        public readonly string ServiceWebsocketTransportFunctionNamespace;
        public readonly string ServiceWebsocketTransportFunctionQualifier;
        public readonly ImmutableArray<Outputs.GetApiAppApiResultTagResult> Tags;

        [OutputConstructor]
        private GetApiAppApiResultResult(
            string apiBusinessType,

            string apiDesc,

            string apiId,

            string apiName,

            string apiType,

            string authRelationApiId,

            string authType,

            ImmutableArray<Outputs.GetApiAppApiResultBase64EncodedTriggerRuleResult> base64EncodedTriggerRules,

            ImmutableArray<Outputs.GetApiAppApiResultConstantParameterResult> constantParameters,

            string createdTime,

            bool enableCors,

            ImmutableArray<string> environments,

            string internalDomain,

            bool isBase64Encoded,

            bool isBase64Trigger,

            bool isDebugAfterCharge,

            ImmutableArray<Outputs.GetApiAppApiResultMicroServiceResult> microServices,

            ImmutableArray<int> microServicesInfos,

            string modifiedTime,

            ImmutableArray<Outputs.GetApiAppApiResultOauthConfigResult> oauthConfigs,

            string protocol,

            ImmutableArray<Outputs.GetApiAppApiResultRequestConfigResult> requestConfigs,

            ImmutableArray<Outputs.GetApiAppApiResultRequestParameterResult> requestParameters,

            ImmutableArray<Outputs.GetApiAppApiResultResponseErrorCodeResult> responseErrorCodes,

            string responseFailExample,

            string responseSuccessExample,

            string responseType,

            ImmutableArray<Outputs.GetApiAppApiResultServiceConfigResult> serviceConfigs,

            string serviceDesc,

            string serviceId,

            string serviceMockReturnMessage,

            string serviceName,

            ImmutableArray<Outputs.GetApiAppApiResultServiceParameterResult> serviceParameters,

            string serviceScfFunctionName,

            string serviceScfFunctionNamespace,

            string serviceScfFunctionQualifier,

            bool serviceScfIsIntegratedResponse,

            int serviceTimeout,

            ImmutableArray<Outputs.GetApiAppApiResultServiceTsfHealthCheckConfResult> serviceTsfHealthCheckConfs,

            ImmutableArray<Outputs.GetApiAppApiResultServiceTsfLoadBalanceConfResult> serviceTsfLoadBalanceConfs,

            string serviceType,

            string serviceWebsocketCleanupFunctionName,

            string serviceWebsocketCleanupFunctionNamespace,

            string serviceWebsocketCleanupFunctionQualifier,

            string serviceWebsocketRegisterFunctionName,

            string serviceWebsocketRegisterFunctionNamespace,

            string serviceWebsocketRegisterFunctionQualifier,

            string serviceWebsocketTransportFunctionName,

            string serviceWebsocketTransportFunctionNamespace,

            string serviceWebsocketTransportFunctionQualifier,

            ImmutableArray<Outputs.GetApiAppApiResultTagResult> tags)
        {
            ApiBusinessType = apiBusinessType;
            ApiDesc = apiDesc;
            ApiId = apiId;
            ApiName = apiName;
            ApiType = apiType;
            AuthRelationApiId = authRelationApiId;
            AuthType = authType;
            Base64EncodedTriggerRules = base64EncodedTriggerRules;
            ConstantParameters = constantParameters;
            CreatedTime = createdTime;
            EnableCors = enableCors;
            Environments = environments;
            InternalDomain = internalDomain;
            IsBase64Encoded = isBase64Encoded;
            IsBase64Trigger = isBase64Trigger;
            IsDebugAfterCharge = isDebugAfterCharge;
            MicroServices = microServices;
            MicroServicesInfos = microServicesInfos;
            ModifiedTime = modifiedTime;
            OauthConfigs = oauthConfigs;
            Protocol = protocol;
            RequestConfigs = requestConfigs;
            RequestParameters = requestParameters;
            ResponseErrorCodes = responseErrorCodes;
            ResponseFailExample = responseFailExample;
            ResponseSuccessExample = responseSuccessExample;
            ResponseType = responseType;
            ServiceConfigs = serviceConfigs;
            ServiceDesc = serviceDesc;
            ServiceId = serviceId;
            ServiceMockReturnMessage = serviceMockReturnMessage;
            ServiceName = serviceName;
            ServiceParameters = serviceParameters;
            ServiceScfFunctionName = serviceScfFunctionName;
            ServiceScfFunctionNamespace = serviceScfFunctionNamespace;
            ServiceScfFunctionQualifier = serviceScfFunctionQualifier;
            ServiceScfIsIntegratedResponse = serviceScfIsIntegratedResponse;
            ServiceTimeout = serviceTimeout;
            ServiceTsfHealthCheckConfs = serviceTsfHealthCheckConfs;
            ServiceTsfLoadBalanceConfs = serviceTsfLoadBalanceConfs;
            ServiceType = serviceType;
            ServiceWebsocketCleanupFunctionName = serviceWebsocketCleanupFunctionName;
            ServiceWebsocketCleanupFunctionNamespace = serviceWebsocketCleanupFunctionNamespace;
            ServiceWebsocketCleanupFunctionQualifier = serviceWebsocketCleanupFunctionQualifier;
            ServiceWebsocketRegisterFunctionName = serviceWebsocketRegisterFunctionName;
            ServiceWebsocketRegisterFunctionNamespace = serviceWebsocketRegisterFunctionNamespace;
            ServiceWebsocketRegisterFunctionQualifier = serviceWebsocketRegisterFunctionQualifier;
            ServiceWebsocketTransportFunctionName = serviceWebsocketTransportFunctionName;
            ServiceWebsocketTransportFunctionNamespace = serviceWebsocketTransportFunctionNamespace;
            ServiceWebsocketTransportFunctionQualifier = serviceWebsocketTransportFunctionQualifier;
            Tags = tags;
        }
    }
}
