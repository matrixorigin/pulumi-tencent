// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ssl
{
    public static class GetDescribeHostLighthouseInstanceList
    {
        public static Task<GetDescribeHostLighthouseInstanceListResult> InvokeAsync(GetDescribeHostLighthouseInstanceListArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDescribeHostLighthouseInstanceListResult>("tencentcloud:Ssl/getDescribeHostLighthouseInstanceList:getDescribeHostLighthouseInstanceList", args ?? new GetDescribeHostLighthouseInstanceListArgs(), options.WithDefaults());

        public static Output<GetDescribeHostLighthouseInstanceListResult> Invoke(GetDescribeHostLighthouseInstanceListInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDescribeHostLighthouseInstanceListResult>("tencentcloud:Ssl/getDescribeHostLighthouseInstanceList:getDescribeHostLighthouseInstanceList", args ?? new GetDescribeHostLighthouseInstanceListInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDescribeHostLighthouseInstanceListArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public string CertificateId { get; set; } = null!;

        [Input("filters")]
        private List<Inputs.GetDescribeHostLighthouseInstanceListFilterArgs>? _filters;
        public List<Inputs.GetDescribeHostLighthouseInstanceListFilterArgs> Filters
        {
            get => _filters ?? (_filters = new List<Inputs.GetDescribeHostLighthouseInstanceListFilterArgs>());
            set => _filters = value;
        }

        [Input("isCache")]
        public int? IsCache { get; set; }

        [Input("resourceType", required: true)]
        public string ResourceType { get; set; } = null!;

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDescribeHostLighthouseInstanceListArgs()
        {
        }
        public static new GetDescribeHostLighthouseInstanceListArgs Empty => new GetDescribeHostLighthouseInstanceListArgs();
    }

    public sealed class GetDescribeHostLighthouseInstanceListInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("certificateId", required: true)]
        public Input<string> CertificateId { get; set; } = null!;

        [Input("filters")]
        private InputList<Inputs.GetDescribeHostLighthouseInstanceListFilterInputArgs>? _filters;
        public InputList<Inputs.GetDescribeHostLighthouseInstanceListFilterInputArgs> Filters
        {
            get => _filters ?? (_filters = new InputList<Inputs.GetDescribeHostLighthouseInstanceListFilterInputArgs>());
            set => _filters = value;
        }

        [Input("isCache")]
        public Input<int>? IsCache { get; set; }

        [Input("resourceType", required: true)]
        public Input<string> ResourceType { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDescribeHostLighthouseInstanceListInvokeArgs()
        {
        }
        public static new GetDescribeHostLighthouseInstanceListInvokeArgs Empty => new GetDescribeHostLighthouseInstanceListInvokeArgs();
    }


    [OutputType]
    public sealed class GetDescribeHostLighthouseInstanceListResult
    {
        public readonly string CertificateId;
        public readonly ImmutableArray<Outputs.GetDescribeHostLighthouseInstanceListFilterResult> Filters;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly ImmutableArray<Outputs.GetDescribeHostLighthouseInstanceListInstanceListResult> InstanceLists;
        public readonly int? IsCache;
        public readonly string ResourceType;
        public readonly string? ResultOutputFile;

        [OutputConstructor]
        private GetDescribeHostLighthouseInstanceListResult(
            string certificateId,

            ImmutableArray<Outputs.GetDescribeHostLighthouseInstanceListFilterResult> filters,

            string id,

            ImmutableArray<Outputs.GetDescribeHostLighthouseInstanceListInstanceListResult> instanceLists,

            int? isCache,

            string resourceType,

            string? resultOutputFile)
        {
            CertificateId = certificateId;
            Filters = filters;
            Id = id;
            InstanceLists = instanceLists;
            IsCache = isCache;
            ResourceType = resourceType;
            ResultOutputFile = resultOutputFile;
        }
    }
}
