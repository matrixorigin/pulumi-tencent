// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Ssl
{
    public static class GetDescribeManagerDetail
    {
        public static Task<GetDescribeManagerDetailResult> InvokeAsync(GetDescribeManagerDetailArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetDescribeManagerDetailResult>("tencentcloud:Ssl/getDescribeManagerDetail:getDescribeManagerDetail", args ?? new GetDescribeManagerDetailArgs(), options.WithDefaults());

        public static Output<GetDescribeManagerDetailResult> Invoke(GetDescribeManagerDetailInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetDescribeManagerDetailResult>("tencentcloud:Ssl/getDescribeManagerDetail:getDescribeManagerDetail", args ?? new GetDescribeManagerDetailInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetDescribeManagerDetailArgs : global::Pulumi.InvokeArgs
    {
        [Input("managerId", required: true)]
        public int ManagerId { get; set; }

        [Input("resultOutputFile")]
        public string? ResultOutputFile { get; set; }

        public GetDescribeManagerDetailArgs()
        {
        }
        public static new GetDescribeManagerDetailArgs Empty => new GetDescribeManagerDetailArgs();
    }

    public sealed class GetDescribeManagerDetailInvokeArgs : global::Pulumi.InvokeArgs
    {
        [Input("managerId", required: true)]
        public Input<int> ManagerId { get; set; } = null!;

        [Input("resultOutputFile")]
        public Input<string>? ResultOutputFile { get; set; }

        public GetDescribeManagerDetailInvokeArgs()
        {
        }
        public static new GetDescribeManagerDetailInvokeArgs Empty => new GetDescribeManagerDetailInvokeArgs();
    }


    [OutputType]
    public sealed class GetDescribeManagerDetailResult
    {
        public readonly int CompanyId;
        public readonly ImmutableArray<Outputs.GetDescribeManagerDetailCompanyInfoResult> CompanyInfos;
        public readonly string ContactFirstName;
        public readonly string ContactLastName;
        public readonly string ContactMail;
        public readonly string ContactPhone;
        public readonly string ContactPosition;
        public readonly string CreateTime;
        public readonly string ExpireTime;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string ManagerDepartment;
        public readonly string ManagerFirstName;
        public readonly int ManagerId;
        public readonly string ManagerLastName;
        public readonly string ManagerMail;
        public readonly string ManagerPhone;
        public readonly string ManagerPosition;
        public readonly string? ResultOutputFile;
        public readonly string Status;
        public readonly string VerifyTime;

        [OutputConstructor]
        private GetDescribeManagerDetailResult(
            int companyId,

            ImmutableArray<Outputs.GetDescribeManagerDetailCompanyInfoResult> companyInfos,

            string contactFirstName,

            string contactLastName,

            string contactMail,

            string contactPhone,

            string contactPosition,

            string createTime,

            string expireTime,

            string id,

            string managerDepartment,

            string managerFirstName,

            int managerId,

            string managerLastName,

            string managerMail,

            string managerPhone,

            string managerPosition,

            string? resultOutputFile,

            string status,

            string verifyTime)
        {
            CompanyId = companyId;
            CompanyInfos = companyInfos;
            ContactFirstName = contactFirstName;
            ContactLastName = contactLastName;
            ContactMail = contactMail;
            ContactPhone = contactPhone;
            ContactPosition = contactPosition;
            CreateTime = createTime;
            ExpireTime = expireTime;
            Id = id;
            ManagerDepartment = managerDepartment;
            ManagerFirstName = managerFirstName;
            ManagerId = managerId;
            ManagerLastName = managerLastName;
            ManagerMail = managerMail;
            ManagerPhone = managerPhone;
            ManagerPosition = managerPosition;
            ResultOutputFile = resultOutputFile;
            Status = status;
            VerifyTime = verifyTime;
        }
    }
}
