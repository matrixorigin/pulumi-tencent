// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Elastic
{
    [TencentcloudResourceType("tencentcloud:Elastic/publicIpv6:PublicIpv6")]
    public partial class PublicIpv6 : global::Pulumi.CustomResource
    {
        /// <summary>
        /// External network IP address.
        /// </summary>
        [Output("addressIp")]
        public Output<string> AddressIp { get; private set; } = null!;

        /// <summary>
        /// EIP name, used to customize the personalized name of the EIP when applying for EIP. Default value: unnamed.
        /// </summary>
        [Output("addressName")]
        public Output<string> AddressName { get; private set; } = null!;

        /// <summary>
        /// Elastic IPv6 type, optional values: - EIPv6: Ordinary IPv6 - HighQualityEIPv6: Premium IPv6 Note: You need to contact
        /// the product to open a premium IPv6 white list, and only some regions support premium IPv6 Default value: EIPv6.
        /// </summary>
        [Output("addressType")]
        public Output<string> AddressType { get; private set; } = null!;

        /// <summary>
        /// Bandwidth packet unique ID parameter. If this parameter is set and the InternetChargeType is BANDWIDTH_PACKAGE, it means
        /// that the EIP created is added to the BGP bandwidth packet and the bandwidth packet is charged.
        /// </summary>
        [Output("bandwidthPackageId")]
        public Output<string> BandwidthPackageId { get; private set; } = null!;

        /// <summary>
        /// Elastic IPv6 network exit, optional values: - CENTER_EGRESS_1: Center Exit 1 - CENTER_EGRESS_2: Center Exit 2 -
        /// CENTER_EGRESS_3: Center Exit 3 Note: Network exports corresponding to different operators or resource types need to
        /// contact the product for clarification Default value: CENTER_EGRESS_1.
        /// </summary>
        [Output("egress")]
        public Output<string> Egress { get; private set; } = null!;

        /// <summary>
        /// Elastic IPv6 charging method, optional values: - BANDWIDTH_PACKAGE: Payment for Shared Bandwidth Package -
        /// TRAFFIC_POSTPAID_BY_HOUR: Traffic is paid by the hour Default value: TRAFFIC_POSTPAID_BY_HOUR.
        /// </summary>
        [Output("internetChargeType")]
        public Output<string> InternetChargeType { get; private set; } = null!;

        /// <summary>
        /// Elastic IPv6 bandwidth limit in Mbps. The range of selectable values depends on the EIP billing method: -
        /// BANDWIDTH_PACKAGE: 1 Mbps to 2000 Mbps - TRAFFIC_POSTPAID_BY_HOUR: 1 Mbps to 100 Mbps Default value: 1 Mbps.
        /// </summary>
        [Output("internetMaxBandwidthOut")]
        public Output<int> InternetMaxBandwidthOut { get; private set; } = null!;

        /// <summary>
        /// Elastic IPv6 line type, default value: BGP. For users who have activated a static single-line IP whitelist, selectable
        /// values: - CMCC: China Mobile - CTCC: China Telecom - CUCC: China Unicom Note: Static single-wire IP is only supported in
        /// some regions.
        /// </summary>
        [Output("internetServiceProvider")]
        public Output<string> InternetServiceProvider { get; private set; } = null!;

        /// <summary>
        /// Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableDictionary<string, object>?> Tags { get; private set; } = null!;


        /// <summary>
        /// Create a PublicIpv6 resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PublicIpv6(string name, PublicIpv6Args? args = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Elastic/publicIpv6:PublicIpv6", name, args ?? new PublicIpv6Args(), MakeResourceOptions(options, ""))
        {
        }

        private PublicIpv6(string name, Input<string> id, PublicIpv6State? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Elastic/publicIpv6:PublicIpv6", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PublicIpv6 resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PublicIpv6 Get(string name, Input<string> id, PublicIpv6State? state = null, CustomResourceOptions? options = null)
        {
            return new PublicIpv6(name, id, state, options);
        }
    }

    public sealed class PublicIpv6Args : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// External network IP address.
        /// </summary>
        [Input("addressIp")]
        public Input<string>? AddressIp { get; set; }

        /// <summary>
        /// EIP name, used to customize the personalized name of the EIP when applying for EIP. Default value: unnamed.
        /// </summary>
        [Input("addressName")]
        public Input<string>? AddressName { get; set; }

        /// <summary>
        /// Elastic IPv6 type, optional values: - EIPv6: Ordinary IPv6 - HighQualityEIPv6: Premium IPv6 Note: You need to contact
        /// the product to open a premium IPv6 white list, and only some regions support premium IPv6 Default value: EIPv6.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// Bandwidth packet unique ID parameter. If this parameter is set and the InternetChargeType is BANDWIDTH_PACKAGE, it means
        /// that the EIP created is added to the BGP bandwidth packet and the bandwidth packet is charged.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Elastic IPv6 network exit, optional values: - CENTER_EGRESS_1: Center Exit 1 - CENTER_EGRESS_2: Center Exit 2 -
        /// CENTER_EGRESS_3: Center Exit 3 Note: Network exports corresponding to different operators or resource types need to
        /// contact the product for clarification Default value: CENTER_EGRESS_1.
        /// </summary>
        [Input("egress")]
        public Input<string>? Egress { get; set; }

        /// <summary>
        /// Elastic IPv6 charging method, optional values: - BANDWIDTH_PACKAGE: Payment for Shared Bandwidth Package -
        /// TRAFFIC_POSTPAID_BY_HOUR: Traffic is paid by the hour Default value: TRAFFIC_POSTPAID_BY_HOUR.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Elastic IPv6 bandwidth limit in Mbps. The range of selectable values depends on the EIP billing method: -
        /// BANDWIDTH_PACKAGE: 1 Mbps to 2000 Mbps - TRAFFIC_POSTPAID_BY_HOUR: 1 Mbps to 100 Mbps Default value: 1 Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// Elastic IPv6 line type, default value: BGP. For users who have activated a static single-line IP whitelist, selectable
        /// values: - CMCC: China Mobile - CTCC: China Telecom - CUCC: China Unicom Note: Static single-wire IP is only supported in
        /// some regions.
        /// </summary>
        [Input("internetServiceProvider")]
        public Input<string>? InternetServiceProvider { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public PublicIpv6Args()
        {
        }
        public static new PublicIpv6Args Empty => new PublicIpv6Args();
    }

    public sealed class PublicIpv6State : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// External network IP address.
        /// </summary>
        [Input("addressIp")]
        public Input<string>? AddressIp { get; set; }

        /// <summary>
        /// EIP name, used to customize the personalized name of the EIP when applying for EIP. Default value: unnamed.
        /// </summary>
        [Input("addressName")]
        public Input<string>? AddressName { get; set; }

        /// <summary>
        /// Elastic IPv6 type, optional values: - EIPv6: Ordinary IPv6 - HighQualityEIPv6: Premium IPv6 Note: You need to contact
        /// the product to open a premium IPv6 white list, and only some regions support premium IPv6 Default value: EIPv6.
        /// </summary>
        [Input("addressType")]
        public Input<string>? AddressType { get; set; }

        /// <summary>
        /// Bandwidth packet unique ID parameter. If this parameter is set and the InternetChargeType is BANDWIDTH_PACKAGE, it means
        /// that the EIP created is added to the BGP bandwidth packet and the bandwidth packet is charged.
        /// </summary>
        [Input("bandwidthPackageId")]
        public Input<string>? BandwidthPackageId { get; set; }

        /// <summary>
        /// Elastic IPv6 network exit, optional values: - CENTER_EGRESS_1: Center Exit 1 - CENTER_EGRESS_2: Center Exit 2 -
        /// CENTER_EGRESS_3: Center Exit 3 Note: Network exports corresponding to different operators or resource types need to
        /// contact the product for clarification Default value: CENTER_EGRESS_1.
        /// </summary>
        [Input("egress")]
        public Input<string>? Egress { get; set; }

        /// <summary>
        /// Elastic IPv6 charging method, optional values: - BANDWIDTH_PACKAGE: Payment for Shared Bandwidth Package -
        /// TRAFFIC_POSTPAID_BY_HOUR: Traffic is paid by the hour Default value: TRAFFIC_POSTPAID_BY_HOUR.
        /// </summary>
        [Input("internetChargeType")]
        public Input<string>? InternetChargeType { get; set; }

        /// <summary>
        /// Elastic IPv6 bandwidth limit in Mbps. The range of selectable values depends on the EIP billing method: -
        /// BANDWIDTH_PACKAGE: 1 Mbps to 2000 Mbps - TRAFFIC_POSTPAID_BY_HOUR: 1 Mbps to 100 Mbps Default value: 1 Mbps.
        /// </summary>
        [Input("internetMaxBandwidthOut")]
        public Input<int>? InternetMaxBandwidthOut { get; set; }

        /// <summary>
        /// Elastic IPv6 line type, default value: BGP. For users who have activated a static single-line IP whitelist, selectable
        /// values: - CMCC: China Mobile - CTCC: China Telecom - CUCC: China Unicom Note: Static single-wire IP is only supported in
        /// some regions.
        /// </summary>
        [Input("internetServiceProvider")]
        public Input<string>? InternetServiceProvider { get; set; }

        [Input("tags")]
        private InputMap<object>? _tags;

        /// <summary>
        /// Tags.
        /// </summary>
        public InputMap<object> Tags
        {
            get => _tags ?? (_tags = new InputMap<object>());
            set => _tags = value;
        }

        public PublicIpv6State()
        {
        }
        public static new PublicIpv6State Empty => new PublicIpv6State();
    }
}
