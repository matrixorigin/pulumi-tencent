// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Waf
{
    [TencentcloudResourceType("tencentcloud:Waf/ccSession:CcSession")]
    public partial class CcSession : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Session match pattern, Optional patterns are match, location.
        /// </summary>
        [Output("category")]
        public Output<string> Category { get; private set; } = null!;

        /// <summary>
        /// Domain.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
        /// </summary>
        [Output("edition")]
        public Output<string> Edition { get; private set; } = null!;

        /// <summary>
        /// Session end identifier, when Category is match.
        /// </summary>
        [Output("endMat")]
        public Output<string> EndMat { get; private set; } = null!;

        /// <summary>
        /// End offset position, when Category is location.
        /// </summary>
        [Output("endOffset")]
        public Output<string> EndOffset { get; private set; } = null!;

        /// <summary>
        /// Session identifier.
        /// </summary>
        [Output("keyOrStartMat")]
        public Output<string> KeyOrStartMat { get; private set; } = null!;

        /// <summary>
        /// Session ID.
        /// </summary>
        [Output("sessionId")]
        public Output<int> SessionId { get; private set; } = null!;

        /// <summary>
        /// Session Name.
        /// </summary>
        [Output("sessionName")]
        public Output<string> SessionName { get; private set; } = null!;

        /// <summary>
        /// Session matching position, Optional locations are get, post, header, cookie.
        /// </summary>
        [Output("source")]
        public Output<string> Source { get; private set; } = null!;

        /// <summary>
        /// Starting offset position, when Category is location.
        /// </summary>
        [Output("startOffset")]
        public Output<string> StartOffset { get; private set; } = null!;


        /// <summary>
        /// Create a CcSession resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CcSession(string name, CcSessionArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Waf/ccSession:CcSession", name, args ?? new CcSessionArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CcSession(string name, Input<string> id, CcSessionState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Waf/ccSession:CcSession", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CcSession resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CcSession Get(string name, Input<string> id, CcSessionState? state = null, CustomResourceOptions? options = null)
        {
            return new CcSession(name, id, state, options);
        }
    }

    public sealed class CcSessionArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Session match pattern, Optional patterns are match, location.
        /// </summary>
        [Input("category", required: true)]
        public Input<string> Category { get; set; } = null!;

        /// <summary>
        /// Domain.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
        /// </summary>
        [Input("edition", required: true)]
        public Input<string> Edition { get; set; } = null!;

        /// <summary>
        /// Session end identifier, when Category is match.
        /// </summary>
        [Input("endMat", required: true)]
        public Input<string> EndMat { get; set; } = null!;

        /// <summary>
        /// End offset position, when Category is location.
        /// </summary>
        [Input("endOffset", required: true)]
        public Input<string> EndOffset { get; set; } = null!;

        /// <summary>
        /// Session identifier.
        /// </summary>
        [Input("keyOrStartMat", required: true)]
        public Input<string> KeyOrStartMat { get; set; } = null!;

        /// <summary>
        /// Session Name.
        /// </summary>
        [Input("sessionName", required: true)]
        public Input<string> SessionName { get; set; } = null!;

        /// <summary>
        /// Session matching position, Optional locations are get, post, header, cookie.
        /// </summary>
        [Input("source", required: true)]
        public Input<string> Source { get; set; } = null!;

        /// <summary>
        /// Starting offset position, when Category is location.
        /// </summary>
        [Input("startOffset", required: true)]
        public Input<string> StartOffset { get; set; } = null!;

        public CcSessionArgs()
        {
        }
        public static new CcSessionArgs Empty => new CcSessionArgs();
    }

    public sealed class CcSessionState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Session match pattern, Optional patterns are match, location.
        /// </summary>
        [Input("category")]
        public Input<string>? Category { get; set; }

        /// <summary>
        /// Domain.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Waf edition. clb-waf means clb-waf, sparta-waf means saas-waf.
        /// </summary>
        [Input("edition")]
        public Input<string>? Edition { get; set; }

        /// <summary>
        /// Session end identifier, when Category is match.
        /// </summary>
        [Input("endMat")]
        public Input<string>? EndMat { get; set; }

        /// <summary>
        /// End offset position, when Category is location.
        /// </summary>
        [Input("endOffset")]
        public Input<string>? EndOffset { get; set; }

        /// <summary>
        /// Session identifier.
        /// </summary>
        [Input("keyOrStartMat")]
        public Input<string>? KeyOrStartMat { get; set; }

        /// <summary>
        /// Session ID.
        /// </summary>
        [Input("sessionId")]
        public Input<int>? SessionId { get; set; }

        /// <summary>
        /// Session Name.
        /// </summary>
        [Input("sessionName")]
        public Input<string>? SessionName { get; set; }

        /// <summary>
        /// Session matching position, Optional locations are get, post, header, cookie.
        /// </summary>
        [Input("source")]
        public Input<string>? Source { get; set; }

        /// <summary>
        /// Starting offset position, when Category is location.
        /// </summary>
        [Input("startOffset")]
        public Input<string>? StartOffset { get; set; }

        public CcSessionState()
        {
        }
        public static new CcSessionState Empty => new CcSessionState();
    }
}
