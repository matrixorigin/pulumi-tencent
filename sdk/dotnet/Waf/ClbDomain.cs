// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Tencentcloud.Waf
{
    [TencentcloudResourceType("tencentcloud:Waf/clbDomain:ClbDomain")]
    public partial class ClbDomain : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Load balancer type: clb, apisix or tsegw, default clb.
        /// </summary>
        [Output("albType")]
        public Output<string?> AlbType { get; private set; } = null!;

        /// <summary>
        /// Whether to enable api safe, 1 enable, 0 disable.
        /// </summary>
        [Output("apiSafeStatus")]
        public Output<int?> ApiSafeStatus { get; private set; } = null!;

        /// <summary>
        /// Whether to enable bot, 1 enable, 0 disable.
        /// </summary>
        [Output("botStatus")]
        public Output<int?> BotStatus { get; private set; } = null!;

        /// <summary>
        /// Whether to enable access logs, 1 enable, 0 disable.
        /// </summary>
        [Output("clsStatus")]
        public Output<int?> ClsStatus { get; private set; } = null!;

        /// <summary>
        /// Domain name.
        /// </summary>
        [Output("domain")]
        public Output<string> Domain { get; private set; } = null!;

        /// <summary>
        /// Domain id.
        /// </summary>
        [Output("domainId")]
        public Output<string> DomainId { get; private set; } = null!;

        /// <summary>
        /// Protection Status: 10: Rule Observation&amp;&amp;AI Off Mode, 11: Rule Observation&amp;&amp;AI Observation Mode, 12: Rule
        /// Observation&amp;&amp;AI Interception Mode, 20: Rule Interception&amp;&amp;AI Off Mode, 21: Rule Interception&amp;&amp;AI Observation Mode, 22:
        /// Rule Interception&amp;&amp;AI Interception Mode, Default 20.
        /// </summary>
        [Output("engine")]
        public Output<int?> Engine { get; private set; } = null!;

        /// <summary>
        /// WAF traffic mode, 1 cleaning mode, 0 mirroring mode.
        /// </summary>
        [Output("flowMode")]
        public Output<int?> FlowMode { get; private set; } = null!;

        /// <summary>
        /// Instance unique ID.
        /// </summary>
        [Output("instanceId")]
        public Output<string> InstanceId { get; private set; } = null!;

        /// <summary>
        /// When is_cdn=3, this parameter needs to be filled in to indicate a custom header.
        /// </summary>
        [Output("ipHeaders")]
        public Output<ImmutableArray<string>> IpHeaders { get; private set; } = null!;

        /// <summary>
        /// Whether a proxy has been enabled before WAF, 0 no deployment, 1 deployment and use first IP in X-Forwarded-For as client
        /// IP, 2 deployment and use remote_addr as client IP, 3 deployment and use values of custom headers as client IP.
        /// </summary>
        [Output("isCdn")]
        public Output<int?> IsCdn { get; private set; } = null!;

        /// <summary>
        /// List of bound LB.
        /// </summary>
        [Output("loadBalancerSets")]
        public Output<ImmutableArray<Outputs.ClbDomainLoadBalancerSet>> LoadBalancerSets { get; private set; } = null!;

        /// <summary>
        /// Regions of LB bound by domain.
        /// </summary>
        [Output("region")]
        public Output<string> Region { get; private set; } = null!;

        /// <summary>
        /// Binding status between waf and LB, 0:not bind, 1:binding.
        /// </summary>
        [Output("status")]
        public Output<int?> Status { get; private set; } = null!;


        /// <summary>
        /// Create a ClbDomain resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClbDomain(string name, ClbDomainArgs args, CustomResourceOptions? options = null)
            : base("tencentcloud:Waf/clbDomain:ClbDomain", name, args ?? new ClbDomainArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ClbDomain(string name, Input<string> id, ClbDomainState? state = null, CustomResourceOptions? options = null)
            : base("tencentcloud:Waf/clbDomain:ClbDomain", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                PluginDownloadURL = "github://api.github.com/matrixorigin",
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ClbDomain resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ClbDomain Get(string name, Input<string> id, ClbDomainState? state = null, CustomResourceOptions? options = null)
        {
            return new ClbDomain(name, id, state, options);
        }
    }

    public sealed class ClbDomainArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Load balancer type: clb, apisix or tsegw, default clb.
        /// </summary>
        [Input("albType")]
        public Input<string>? AlbType { get; set; }

        /// <summary>
        /// Whether to enable api safe, 1 enable, 0 disable.
        /// </summary>
        [Input("apiSafeStatus")]
        public Input<int>? ApiSafeStatus { get; set; }

        /// <summary>
        /// Whether to enable bot, 1 enable, 0 disable.
        /// </summary>
        [Input("botStatus")]
        public Input<int>? BotStatus { get; set; }

        /// <summary>
        /// Whether to enable access logs, 1 enable, 0 disable.
        /// </summary>
        [Input("clsStatus")]
        public Input<int>? ClsStatus { get; set; }

        /// <summary>
        /// Domain name.
        /// </summary>
        [Input("domain", required: true)]
        public Input<string> Domain { get; set; } = null!;

        /// <summary>
        /// Protection Status: 10: Rule Observation&amp;&amp;AI Off Mode, 11: Rule Observation&amp;&amp;AI Observation Mode, 12: Rule
        /// Observation&amp;&amp;AI Interception Mode, 20: Rule Interception&amp;&amp;AI Off Mode, 21: Rule Interception&amp;&amp;AI Observation Mode, 22:
        /// Rule Interception&amp;&amp;AI Interception Mode, Default 20.
        /// </summary>
        [Input("engine")]
        public Input<int>? Engine { get; set; }

        /// <summary>
        /// WAF traffic mode, 1 cleaning mode, 0 mirroring mode.
        /// </summary>
        [Input("flowMode")]
        public Input<int>? FlowMode { get; set; }

        /// <summary>
        /// Instance unique ID.
        /// </summary>
        [Input("instanceId", required: true)]
        public Input<string> InstanceId { get; set; } = null!;

        [Input("ipHeaders")]
        private InputList<string>? _ipHeaders;

        /// <summary>
        /// When is_cdn=3, this parameter needs to be filled in to indicate a custom header.
        /// </summary>
        public InputList<string> IpHeaders
        {
            get => _ipHeaders ?? (_ipHeaders = new InputList<string>());
            set => _ipHeaders = value;
        }

        /// <summary>
        /// Whether a proxy has been enabled before WAF, 0 no deployment, 1 deployment and use first IP in X-Forwarded-For as client
        /// IP, 2 deployment and use remote_addr as client IP, 3 deployment and use values of custom headers as client IP.
        /// </summary>
        [Input("isCdn")]
        public Input<int>? IsCdn { get; set; }

        [Input("loadBalancerSets")]
        private InputList<Inputs.ClbDomainLoadBalancerSetArgs>? _loadBalancerSets;

        /// <summary>
        /// List of bound LB.
        /// </summary>
        public InputList<Inputs.ClbDomainLoadBalancerSetArgs> LoadBalancerSets
        {
            get => _loadBalancerSets ?? (_loadBalancerSets = new InputList<Inputs.ClbDomainLoadBalancerSetArgs>());
            set => _loadBalancerSets = value;
        }

        /// <summary>
        /// Regions of LB bound by domain.
        /// </summary>
        [Input("region", required: true)]
        public Input<string> Region { get; set; } = null!;

        /// <summary>
        /// Binding status between waf and LB, 0:not bind, 1:binding.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public ClbDomainArgs()
        {
        }
        public static new ClbDomainArgs Empty => new ClbDomainArgs();
    }

    public sealed class ClbDomainState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Load balancer type: clb, apisix or tsegw, default clb.
        /// </summary>
        [Input("albType")]
        public Input<string>? AlbType { get; set; }

        /// <summary>
        /// Whether to enable api safe, 1 enable, 0 disable.
        /// </summary>
        [Input("apiSafeStatus")]
        public Input<int>? ApiSafeStatus { get; set; }

        /// <summary>
        /// Whether to enable bot, 1 enable, 0 disable.
        /// </summary>
        [Input("botStatus")]
        public Input<int>? BotStatus { get; set; }

        /// <summary>
        /// Whether to enable access logs, 1 enable, 0 disable.
        /// </summary>
        [Input("clsStatus")]
        public Input<int>? ClsStatus { get; set; }

        /// <summary>
        /// Domain name.
        /// </summary>
        [Input("domain")]
        public Input<string>? Domain { get; set; }

        /// <summary>
        /// Domain id.
        /// </summary>
        [Input("domainId")]
        public Input<string>? DomainId { get; set; }

        /// <summary>
        /// Protection Status: 10: Rule Observation&amp;&amp;AI Off Mode, 11: Rule Observation&amp;&amp;AI Observation Mode, 12: Rule
        /// Observation&amp;&amp;AI Interception Mode, 20: Rule Interception&amp;&amp;AI Off Mode, 21: Rule Interception&amp;&amp;AI Observation Mode, 22:
        /// Rule Interception&amp;&amp;AI Interception Mode, Default 20.
        /// </summary>
        [Input("engine")]
        public Input<int>? Engine { get; set; }

        /// <summary>
        /// WAF traffic mode, 1 cleaning mode, 0 mirroring mode.
        /// </summary>
        [Input("flowMode")]
        public Input<int>? FlowMode { get; set; }

        /// <summary>
        /// Instance unique ID.
        /// </summary>
        [Input("instanceId")]
        public Input<string>? InstanceId { get; set; }

        [Input("ipHeaders")]
        private InputList<string>? _ipHeaders;

        /// <summary>
        /// When is_cdn=3, this parameter needs to be filled in to indicate a custom header.
        /// </summary>
        public InputList<string> IpHeaders
        {
            get => _ipHeaders ?? (_ipHeaders = new InputList<string>());
            set => _ipHeaders = value;
        }

        /// <summary>
        /// Whether a proxy has been enabled before WAF, 0 no deployment, 1 deployment and use first IP in X-Forwarded-For as client
        /// IP, 2 deployment and use remote_addr as client IP, 3 deployment and use values of custom headers as client IP.
        /// </summary>
        [Input("isCdn")]
        public Input<int>? IsCdn { get; set; }

        [Input("loadBalancerSets")]
        private InputList<Inputs.ClbDomainLoadBalancerSetGetArgs>? _loadBalancerSets;

        /// <summary>
        /// List of bound LB.
        /// </summary>
        public InputList<Inputs.ClbDomainLoadBalancerSetGetArgs> LoadBalancerSets
        {
            get => _loadBalancerSets ?? (_loadBalancerSets = new InputList<Inputs.ClbDomainLoadBalancerSetGetArgs>());
            set => _loadBalancerSets = value;
        }

        /// <summary>
        /// Regions of LB bound by domain.
        /// </summary>
        [Input("region")]
        public Input<string>? Region { get; set; }

        /// <summary>
        /// Binding status between waf and LB, 0:not bind, 1:binding.
        /// </summary>
        [Input("status")]
        public Input<int>? Status { get; set; }

        public ClbDomainState()
        {
        }
        public static new ClbDomainState Empty => new ClbDomainState();
    }
}
