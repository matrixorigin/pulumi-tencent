// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class PeerConnectManager extends pulumi.CustomResource {
    /**
     * Get an existing PeerConnectManager resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: PeerConnectManagerState, opts?: pulumi.CustomResourceOptions): PeerConnectManager {
        return new PeerConnectManager(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vpc/peerConnectManager:PeerConnectManager';

    /**
     * Returns true if the given object is an instance of PeerConnectManager.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is PeerConnectManager {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === PeerConnectManager.__pulumiType;
    }

    /**
     * Bandwidth upper limit, unit Mbps.
     */
    public readonly bandwidth!: pulumi.Output<number | undefined>;
    /**
     * Billing mode, daily peak value POSTPAID_BY_DAY_MAX, monthly value 95 POSTPAID_BY_MONTH_95.
     */
    public readonly chargeType!: pulumi.Output<string>;
    /**
     * Peer region.
     */
    public readonly destinationRegion!: pulumi.Output<string>;
    /**
     * Peer user UIN.
     */
    public readonly destinationUin!: pulumi.Output<string>;
    /**
     * The unique ID of the peer VPC.
     */
    public readonly destinationVpcId!: pulumi.Output<string>;
    /**
     * Peer connection name.
     */
    public readonly peeringConnectionName!: pulumi.Output<string>;
    /**
     * Service classification PT, AU, AG.
     */
    public readonly qosLevel!: pulumi.Output<string>;
    /**
     * The unique ID of the local VPC.
     */
    public readonly sourceVpcId!: pulumi.Output<string>;
    /**
     * Interworking type, VPC_PEER interworking between VPCs; VPC_BM_PEER interworking between VPC and BM Network.
     */
    public readonly type!: pulumi.Output<string>;

    /**
     * Create a PeerConnectManager resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: PeerConnectManagerArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: PeerConnectManagerArgs | PeerConnectManagerState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as PeerConnectManagerState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["chargeType"] = state ? state.chargeType : undefined;
            resourceInputs["destinationRegion"] = state ? state.destinationRegion : undefined;
            resourceInputs["destinationUin"] = state ? state.destinationUin : undefined;
            resourceInputs["destinationVpcId"] = state ? state.destinationVpcId : undefined;
            resourceInputs["peeringConnectionName"] = state ? state.peeringConnectionName : undefined;
            resourceInputs["qosLevel"] = state ? state.qosLevel : undefined;
            resourceInputs["sourceVpcId"] = state ? state.sourceVpcId : undefined;
            resourceInputs["type"] = state ? state.type : undefined;
        } else {
            const args = argsOrState as PeerConnectManagerArgs | undefined;
            if ((!args || args.destinationRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationRegion'");
            }
            if ((!args || args.destinationUin === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationUin'");
            }
            if ((!args || args.destinationVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'destinationVpcId'");
            }
            if ((!args || args.peeringConnectionName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'peeringConnectionName'");
            }
            if ((!args || args.sourceVpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceVpcId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["chargeType"] = args ? args.chargeType : undefined;
            resourceInputs["destinationRegion"] = args ? args.destinationRegion : undefined;
            resourceInputs["destinationUin"] = args ? args.destinationUin : undefined;
            resourceInputs["destinationVpcId"] = args ? args.destinationVpcId : undefined;
            resourceInputs["peeringConnectionName"] = args ? args.peeringConnectionName : undefined;
            resourceInputs["qosLevel"] = args ? args.qosLevel : undefined;
            resourceInputs["sourceVpcId"] = args ? args.sourceVpcId : undefined;
            resourceInputs["type"] = args ? args.type : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(PeerConnectManager.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering PeerConnectManager resources.
 */
export interface PeerConnectManagerState {
    /**
     * Bandwidth upper limit, unit Mbps.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Billing mode, daily peak value POSTPAID_BY_DAY_MAX, monthly value 95 POSTPAID_BY_MONTH_95.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Peer region.
     */
    destinationRegion?: pulumi.Input<string>;
    /**
     * Peer user UIN.
     */
    destinationUin?: pulumi.Input<string>;
    /**
     * The unique ID of the peer VPC.
     */
    destinationVpcId?: pulumi.Input<string>;
    /**
     * Peer connection name.
     */
    peeringConnectionName?: pulumi.Input<string>;
    /**
     * Service classification PT, AU, AG.
     */
    qosLevel?: pulumi.Input<string>;
    /**
     * The unique ID of the local VPC.
     */
    sourceVpcId?: pulumi.Input<string>;
    /**
     * Interworking type, VPC_PEER interworking between VPCs; VPC_BM_PEER interworking between VPC and BM Network.
     */
    type?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a PeerConnectManager resource.
 */
export interface PeerConnectManagerArgs {
    /**
     * Bandwidth upper limit, unit Mbps.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Billing mode, daily peak value POSTPAID_BY_DAY_MAX, monthly value 95 POSTPAID_BY_MONTH_95.
     */
    chargeType?: pulumi.Input<string>;
    /**
     * Peer region.
     */
    destinationRegion: pulumi.Input<string>;
    /**
     * Peer user UIN.
     */
    destinationUin: pulumi.Input<string>;
    /**
     * The unique ID of the peer VPC.
     */
    destinationVpcId: pulumi.Input<string>;
    /**
     * Peer connection name.
     */
    peeringConnectionName: pulumi.Input<string>;
    /**
     * Service classification PT, AU, AG.
     */
    qosLevel?: pulumi.Input<string>;
    /**
     * The unique ID of the local VPC.
     */
    sourceVpcId: pulumi.Input<string>;
    /**
     * Interworking type, VPC_PEER interworking between VPCs; VPC_BM_PEER interworking between VPC and BM Network.
     */
    type?: pulumi.Input<string>;
}
