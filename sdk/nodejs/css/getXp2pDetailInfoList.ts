// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getXp2pDetailInfoList(args?: GetXp2pDetailInfoListArgs, opts?: pulumi.InvokeOptions): Promise<GetXp2pDetailInfoListResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Css/getXp2pDetailInfoList:getXp2pDetailInfoList", {
        "dimensions": args.dimensions,
        "queryTime": args.queryTime,
        "resultOutputFile": args.resultOutputFile,
        "streamNames": args.streamNames,
        "types": args.types,
    }, opts);
}

/**
 * A collection of arguments for invoking getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListArgs {
    dimensions?: string[];
    queryTime?: string;
    resultOutputFile?: string;
    streamNames?: string[];
    types?: string[];
}

/**
 * A collection of values returned by getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListResult {
    readonly dataInfoLists: outputs.Css.GetXp2pDetailInfoListDataInfoList[];
    readonly dimensions?: string[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly queryTime?: string;
    readonly resultOutputFile?: string;
    readonly streamNames?: string[];
    readonly types?: string[];
}
export function getXp2pDetailInfoListOutput(args?: GetXp2pDetailInfoListOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetXp2pDetailInfoListResult> {
    return pulumi.output(args).apply((a: any) => getXp2pDetailInfoList(a, opts))
}

/**
 * A collection of arguments for invoking getXp2pDetailInfoList.
 */
export interface GetXp2pDetailInfoListOutputArgs {
    dimensions?: pulumi.Input<pulumi.Input<string>[]>;
    queryTime?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    streamNames?: pulumi.Input<pulumi.Input<string>[]>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
}
