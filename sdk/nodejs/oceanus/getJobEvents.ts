// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getJobEvents(args: GetJobEventsArgs, opts?: pulumi.InvokeOptions): Promise<GetJobEventsResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Oceanus/getJobEvents:getJobEvents", {
        "endTimestamp": args.endTimestamp,
        "jobId": args.jobId,
        "resultOutputFile": args.resultOutputFile,
        "startTimestamp": args.startTimestamp,
        "types": args.types,
        "workSpaceId": args.workSpaceId,
    }, opts);
}

/**
 * A collection of arguments for invoking getJobEvents.
 */
export interface GetJobEventsArgs {
    endTimestamp: number;
    jobId: string;
    resultOutputFile?: string;
    startTimestamp: number;
    types?: string[];
    workSpaceId: string;
}

/**
 * A collection of values returned by getJobEvents.
 */
export interface GetJobEventsResult {
    readonly endTimestamp: number;
    readonly events: outputs.Oceanus.GetJobEventsEvent[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly jobId: string;
    readonly resultOutputFile?: string;
    readonly runningOrderIds: number[];
    readonly startTimestamp: number;
    readonly types?: string[];
    readonly workSpaceId: string;
}
export function getJobEventsOutput(args: GetJobEventsOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetJobEventsResult> {
    return pulumi.output(args).apply((a: any) => getJobEvents(a, opts))
}

/**
 * A collection of arguments for invoking getJobEvents.
 */
export interface GetJobEventsOutputArgs {
    endTimestamp: pulumi.Input<number>;
    jobId: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    startTimestamp: pulumi.Input<number>;
    types?: pulumi.Input<pulumi.Input<string>[]>;
    workSpaceId: pulumi.Input<string>;
}
