// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class WorkSpace extends pulumi.CustomResource {
    /**
     * Get an existing WorkSpace resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WorkSpaceState, opts?: pulumi.CustomResourceOptions): WorkSpace {
        return new WorkSpace(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Oceanus/workSpace:WorkSpace';

    /**
     * Returns true if the given object is an instance of WorkSpace.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WorkSpace {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WorkSpace.__pulumiType;
    }

    /**
     * User APPID.
     */
    public /*out*/ readonly appId!: pulumi.Output<number>;
    /**
     * Create time.
     */
    public /*out*/ readonly createTime!: pulumi.Output<string>;
    /**
     * Creator UIN.
     */
    public /*out*/ readonly creatorUin!: pulumi.Output<string>;
    /**
     * Workspace description.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Number of Jobs.
     */
    public /*out*/ readonly jobsCount!: pulumi.Output<number>;
    /**
     * Owner UIN.
     */
    public /*out*/ readonly ownerUin!: pulumi.Output<string>;
    /**
     * Number of workspace members.
     */
    public /*out*/ readonly roleAuthCount!: pulumi.Output<number>;
    /**
     * Serial ID.
     */
    public /*out*/ readonly serialId!: pulumi.Output<string>;
    /**
     * Workspace status.
     */
    public /*out*/ readonly status!: pulumi.Output<number>;
    /**
     * Update time.
     */
    public /*out*/ readonly updateTime!: pulumi.Output<string>;
    /**
     * Workspace ID.
     */
    public /*out*/ readonly workSpaceId!: pulumi.Output<string>;
    /**
     * Workspace name.
     */
    public readonly workSpaceName!: pulumi.Output<string>;

    /**
     * Create a WorkSpace resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WorkSpaceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WorkSpaceArgs | WorkSpaceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WorkSpaceState | undefined;
            resourceInputs["appId"] = state ? state.appId : undefined;
            resourceInputs["createTime"] = state ? state.createTime : undefined;
            resourceInputs["creatorUin"] = state ? state.creatorUin : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["jobsCount"] = state ? state.jobsCount : undefined;
            resourceInputs["ownerUin"] = state ? state.ownerUin : undefined;
            resourceInputs["roleAuthCount"] = state ? state.roleAuthCount : undefined;
            resourceInputs["serialId"] = state ? state.serialId : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["updateTime"] = state ? state.updateTime : undefined;
            resourceInputs["workSpaceId"] = state ? state.workSpaceId : undefined;
            resourceInputs["workSpaceName"] = state ? state.workSpaceName : undefined;
        } else {
            const args = argsOrState as WorkSpaceArgs | undefined;
            if ((!args || args.workSpaceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'workSpaceName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["workSpaceName"] = args ? args.workSpaceName : undefined;
            resourceInputs["appId"] = undefined /*out*/;
            resourceInputs["createTime"] = undefined /*out*/;
            resourceInputs["creatorUin"] = undefined /*out*/;
            resourceInputs["jobsCount"] = undefined /*out*/;
            resourceInputs["ownerUin"] = undefined /*out*/;
            resourceInputs["roleAuthCount"] = undefined /*out*/;
            resourceInputs["serialId"] = undefined /*out*/;
            resourceInputs["status"] = undefined /*out*/;
            resourceInputs["updateTime"] = undefined /*out*/;
            resourceInputs["workSpaceId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WorkSpace.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WorkSpace resources.
 */
export interface WorkSpaceState {
    /**
     * User APPID.
     */
    appId?: pulumi.Input<number>;
    /**
     * Create time.
     */
    createTime?: pulumi.Input<string>;
    /**
     * Creator UIN.
     */
    creatorUin?: pulumi.Input<string>;
    /**
     * Workspace description.
     */
    description?: pulumi.Input<string>;
    /**
     * Number of Jobs.
     */
    jobsCount?: pulumi.Input<number>;
    /**
     * Owner UIN.
     */
    ownerUin?: pulumi.Input<string>;
    /**
     * Number of workspace members.
     */
    roleAuthCount?: pulumi.Input<number>;
    /**
     * Serial ID.
     */
    serialId?: pulumi.Input<string>;
    /**
     * Workspace status.
     */
    status?: pulumi.Input<number>;
    /**
     * Update time.
     */
    updateTime?: pulumi.Input<string>;
    /**
     * Workspace ID.
     */
    workSpaceId?: pulumi.Input<string>;
    /**
     * Workspace name.
     */
    workSpaceName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a WorkSpace resource.
 */
export interface WorkSpaceArgs {
    /**
     * Workspace description.
     */
    description?: pulumi.Input<string>;
    /**
     * Workspace name.
     */
    workSpaceName: pulumi.Input<string>;
}
