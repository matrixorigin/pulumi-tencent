// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export function getMetricData(args: GetMetricDataArgs, opts?: pulumi.InvokeOptions): Promise<GetMetricDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Cat/getMetricData:getMetricData", {
        "analyzeTaskType": args.analyzeTaskType,
        "field": args.field,
        "filter": args.filter,
        "filters": args.filters,
        "groupBy": args.groupBy,
        "metricType": args.metricType,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getMetricData.
 */
export interface GetMetricDataArgs {
    analyzeTaskType: string;
    field: string;
    filter?: string;
    filters: string[];
    groupBy?: string;
    metricType: string;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMetricData.
 */
export interface GetMetricDataResult {
    readonly analyzeTaskType: string;
    readonly field: string;
    readonly filter?: string;
    readonly filters: string[];
    readonly groupBy?: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly metricSet: string;
    readonly metricType: string;
    readonly resultOutputFile?: string;
}
export function getMetricDataOutput(args: GetMetricDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMetricDataResult> {
    return pulumi.output(args).apply((a: any) => getMetricData(a, opts))
}

/**
 * A collection of arguments for invoking getMetricData.
 */
export interface GetMetricDataOutputArgs {
    analyzeTaskType: pulumi.Input<string>;
    field: pulumi.Input<string>;
    filter?: pulumi.Input<string>;
    filters: pulumi.Input<pulumi.Input<string>[]>;
    groupBy?: pulumi.Input<string>;
    metricType: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
}
