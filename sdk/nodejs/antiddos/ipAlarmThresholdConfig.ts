// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class IpAlarmThresholdConfig extends pulumi.CustomResource {
    /**
     * Get an existing IpAlarmThresholdConfig resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: IpAlarmThresholdConfigState, opts?: pulumi.CustomResourceOptions): IpAlarmThresholdConfig {
        return new IpAlarmThresholdConfig(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Antiddos/ipAlarmThresholdConfig:IpAlarmThresholdConfig';

    /**
     * Returns true if the given object is an instance of IpAlarmThresholdConfig.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is IpAlarmThresholdConfig {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === IpAlarmThresholdConfig.__pulumiType;
    }

    /**
     * Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm
     * threshold configuration;.
     */
    public readonly alarmThreshold!: pulumi.Output<number>;
    /**
     * Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
     */
    public readonly alarmType!: pulumi.Output<number>;
    /**
     * Instance id.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Instance ip.
     */
    public readonly instanceIp!: pulumi.Output<string>;

    /**
     * Create a IpAlarmThresholdConfig resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: IpAlarmThresholdConfigArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: IpAlarmThresholdConfigArgs | IpAlarmThresholdConfigState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as IpAlarmThresholdConfigState | undefined;
            resourceInputs["alarmThreshold"] = state ? state.alarmThreshold : undefined;
            resourceInputs["alarmType"] = state ? state.alarmType : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["instanceIp"] = state ? state.instanceIp : undefined;
        } else {
            const args = argsOrState as IpAlarmThresholdConfigArgs | undefined;
            if ((!args || args.alarmThreshold === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alarmThreshold'");
            }
            if ((!args || args.alarmType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'alarmType'");
            }
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.instanceIp === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceIp'");
            }
            resourceInputs["alarmThreshold"] = args ? args.alarmThreshold : undefined;
            resourceInputs["alarmType"] = args ? args.alarmType : undefined;
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["instanceIp"] = args ? args.instanceIp : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(IpAlarmThresholdConfig.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering IpAlarmThresholdConfig resources.
 */
export interface IpAlarmThresholdConfigState {
    /**
     * Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm
     * threshold configuration;.
     */
    alarmThreshold?: pulumi.Input<number>;
    /**
     * Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
     */
    alarmType?: pulumi.Input<number>;
    /**
     * Instance id.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Instance ip.
     */
    instanceIp?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a IpAlarmThresholdConfig resource.
 */
export interface IpAlarmThresholdConfigArgs {
    /**
     * Alarm threshold, in Mbps, with a value of&gt;=0; When used as an input parameter, setting 0 will delete the alarm
     * threshold configuration;.
     */
    alarmThreshold: pulumi.Input<number>;
    /**
     * Alarm threshold type, value [1 (incoming traffic alarm threshold) 2 (attack cleaning traffic alarm threshold)].
     */
    alarmType: pulumi.Input<number>;
    /**
     * Instance id.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Instance ip.
     */
    instanceIp: pulumi.Input<string>;
}
