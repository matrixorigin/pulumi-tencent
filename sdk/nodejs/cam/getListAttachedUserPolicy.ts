// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getListAttachedUserPolicy(args: GetListAttachedUserPolicyArgs, opts?: pulumi.InvokeOptions): Promise<GetListAttachedUserPolicyResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Cam/getListAttachedUserPolicy:getListAttachedUserPolicy", {
        "attachType": args.attachType,
        "keyword": args.keyword,
        "resultOutputFile": args.resultOutputFile,
        "strategyType": args.strategyType,
        "targetUin": args.targetUin,
    }, opts);
}

/**
 * A collection of arguments for invoking getListAttachedUserPolicy.
 */
export interface GetListAttachedUserPolicyArgs {
    attachType: number;
    keyword?: string;
    resultOutputFile?: string;
    strategyType?: number;
    targetUin: number;
}

/**
 * A collection of values returned by getListAttachedUserPolicy.
 */
export interface GetListAttachedUserPolicyResult {
    readonly attachType: number;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly keyword?: string;
    readonly policyLists: outputs.Cam.GetListAttachedUserPolicyPolicyList[];
    readonly resultOutputFile?: string;
    readonly strategyType?: number;
    readonly targetUin: number;
}
export function getListAttachedUserPolicyOutput(args: GetListAttachedUserPolicyOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetListAttachedUserPolicyResult> {
    return pulumi.output(args).apply((a: any) => getListAttachedUserPolicy(a, opts))
}

/**
 * A collection of arguments for invoking getListAttachedUserPolicy.
 */
export interface GetListAttachedUserPolicyOutputArgs {
    attachType: pulumi.Input<number>;
    keyword?: pulumi.Input<string>;
    resultOutputFile?: pulumi.Input<string>;
    strategyType?: pulumi.Input<number>;
    targetUin: pulumi.Input<number>;
}
