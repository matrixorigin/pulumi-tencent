// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getTmpInstances(args?: GetTmpInstancesArgs, opts?: pulumi.InvokeOptions): Promise<GetTmpInstancesResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Monitor/getTmpInstances:getTmpInstances", {
        "instanceChargeType": args.instanceChargeType,
        "instanceIds": args.instanceIds,
        "instanceName": args.instanceName,
        "instanceStatuses": args.instanceStatuses,
        "ipv4Addresses": args.ipv4Addresses,
        "resultOutputFile": args.resultOutputFile,
        "tagFilters": args.tagFilters,
        "zones": args.zones,
    }, opts);
}

/**
 * A collection of arguments for invoking getTmpInstances.
 */
export interface GetTmpInstancesArgs {
    instanceChargeType?: number;
    instanceIds?: string[];
    instanceName?: string;
    instanceStatuses?: number[];
    ipv4Addresses?: string[];
    resultOutputFile?: string;
    tagFilters?: inputs.Monitor.GetTmpInstancesTagFilter[];
    zones?: string[];
}

/**
 * A collection of values returned by getTmpInstances.
 */
export interface GetTmpInstancesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly instanceChargeType?: number;
    readonly instanceIds?: string[];
    readonly instanceName?: string;
    readonly instanceSets: outputs.Monitor.GetTmpInstancesInstanceSet[];
    readonly instanceStatuses?: number[];
    readonly ipv4Addresses?: string[];
    readonly resultOutputFile?: string;
    readonly tagFilters?: outputs.Monitor.GetTmpInstancesTagFilter[];
    readonly zones?: string[];
}
export function getTmpInstancesOutput(args?: GetTmpInstancesOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetTmpInstancesResult> {
    return pulumi.output(args).apply((a: any) => getTmpInstances(a, opts))
}

/**
 * A collection of arguments for invoking getTmpInstances.
 */
export interface GetTmpInstancesOutputArgs {
    instanceChargeType?: pulumi.Input<number>;
    instanceIds?: pulumi.Input<pulumi.Input<string>[]>;
    instanceName?: pulumi.Input<string>;
    instanceStatuses?: pulumi.Input<pulumi.Input<number>[]>;
    ipv4Addresses?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
    tagFilters?: pulumi.Input<pulumi.Input<inputs.Monitor.GetTmpInstancesTagFilterArgs>[]>;
    zones?: pulumi.Input<pulumi.Input<string>[]>;
}
