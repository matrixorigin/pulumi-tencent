// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class WordSample extends pulumi.CustomResource {
    /**
     * Get an existing WordSample resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: WordSampleState, opts?: pulumi.CustomResourceOptions): WordSample {
        return new WordSample(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Mps/wordSample:WordSample';

    /**
     * Returns true if the given object is an instance of WordSample.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is WordSample {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === WordSample.__pulumiType;
    }

    /**
     * Keyword. Length limit: 20 characters.
     */
    public readonly keyword!: pulumi.Output<string>;
    /**
     * Keyword tag. Array length limit: 20 tags. Each tag length limit: 128 characters.
     */
    public readonly tags!: pulumi.Output<string[] | undefined>;
    /**
     * Keyword usage. Valid values: 1.`Recognition.Ocr`: OCR-based content recognition. 2.`Recognition.Asr`: ASR-based content
     * recognition. 3.`Review.Ocr`: OCR-based inappropriate information recognition. 4.`Review.Asr`: ASR-based inappropriate
     * information recognition.
     */
    public readonly usages!: pulumi.Output<string[]>;

    /**
     * Create a WordSample resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: WordSampleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: WordSampleArgs | WordSampleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as WordSampleState | undefined;
            resourceInputs["keyword"] = state ? state.keyword : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["usages"] = state ? state.usages : undefined;
        } else {
            const args = argsOrState as WordSampleArgs | undefined;
            if ((!args || args.keyword === undefined) && !opts.urn) {
                throw new Error("Missing required property 'keyword'");
            }
            if ((!args || args.usages === undefined) && !opts.urn) {
                throw new Error("Missing required property 'usages'");
            }
            resourceInputs["keyword"] = args ? args.keyword : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["usages"] = args ? args.usages : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(WordSample.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering WordSample resources.
 */
export interface WordSampleState {
    /**
     * Keyword. Length limit: 20 characters.
     */
    keyword?: pulumi.Input<string>;
    /**
     * Keyword tag. Array length limit: 20 tags. Each tag length limit: 128 characters.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Keyword usage. Valid values: 1.`Recognition.Ocr`: OCR-based content recognition. 2.`Recognition.Asr`: ASR-based content
     * recognition. 3.`Review.Ocr`: OCR-based inappropriate information recognition. 4.`Review.Asr`: ASR-based inappropriate
     * information recognition.
     */
    usages?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a WordSample resource.
 */
export interface WordSampleArgs {
    /**
     * Keyword. Length limit: 20 characters.
     */
    keyword: pulumi.Input<string>;
    /**
     * Keyword tag. Array length limit: 20 tags. Each tag length limit: 128 characters.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Keyword usage. Valid values: 1.`Recognition.Ocr`: OCR-based content recognition. 2.`Recognition.Asr`: ASR-based content
     * recognition. 3.`Review.Ocr`: OCR-based inappropriate information recognition. 4.`Review.Asr`: ASR-based inappropriate
     * information recognition.
     */
    usages: pulumi.Input<pulumi.Input<string>[]>;
}
