// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getMediaMetaData(args: GetMediaMetaDataArgs, opts?: pulumi.InvokeOptions): Promise<GetMediaMetaDataResult> {

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Mps/getMediaMetaData:getMediaMetaData", {
        "inputInfo": args.inputInfo,
        "resultOutputFile": args.resultOutputFile,
    }, opts);
}

/**
 * A collection of arguments for invoking getMediaMetaData.
 */
export interface GetMediaMetaDataArgs {
    inputInfo: inputs.Mps.GetMediaMetaDataInputInfo;
    resultOutputFile?: string;
}

/**
 * A collection of values returned by getMediaMetaData.
 */
export interface GetMediaMetaDataResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly inputInfo: outputs.Mps.GetMediaMetaDataInputInfo;
    readonly metaDatas: outputs.Mps.GetMediaMetaDataMetaData[];
    readonly resultOutputFile?: string;
}
export function getMediaMetaDataOutput(args: GetMediaMetaDataOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetMediaMetaDataResult> {
    return pulumi.output(args).apply((a: any) => getMediaMetaData(a, opts))
}

/**
 * A collection of arguments for invoking getMediaMetaData.
 */
export interface GetMediaMetaDataOutputArgs {
    inputInfo: pulumi.Input<inputs.Mps.GetMediaMetaDataInputInfoArgs>;
    resultOutputFile?: pulumi.Input<string>;
}
