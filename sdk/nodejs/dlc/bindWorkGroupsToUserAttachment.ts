// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class BindWorkGroupsToUserAttachment extends pulumi.CustomResource {
    /**
     * Get an existing BindWorkGroupsToUserAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BindWorkGroupsToUserAttachmentState, opts?: pulumi.CustomResourceOptions): BindWorkGroupsToUserAttachment {
        return new BindWorkGroupsToUserAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dlc/bindWorkGroupsToUserAttachment:BindWorkGroupsToUserAttachment';

    /**
     * Returns true if the given object is an instance of BindWorkGroupsToUserAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BindWorkGroupsToUserAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BindWorkGroupsToUserAttachment.__pulumiType;
    }

    /**
     * Bind user and workgroup information.
     */
    public readonly addInfo!: pulumi.Output<outputs.Dlc.BindWorkGroupsToUserAttachmentAddInfo>;

    /**
     * Create a BindWorkGroupsToUserAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: BindWorkGroupsToUserAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: BindWorkGroupsToUserAttachmentArgs | BindWorkGroupsToUserAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BindWorkGroupsToUserAttachmentState | undefined;
            resourceInputs["addInfo"] = state ? state.addInfo : undefined;
        } else {
            const args = argsOrState as BindWorkGroupsToUserAttachmentArgs | undefined;
            if ((!args || args.addInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'addInfo'");
            }
            resourceInputs["addInfo"] = args ? args.addInfo : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BindWorkGroupsToUserAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BindWorkGroupsToUserAttachment resources.
 */
export interface BindWorkGroupsToUserAttachmentState {
    /**
     * Bind user and workgroup information.
     */
    addInfo?: pulumi.Input<inputs.Dlc.BindWorkGroupsToUserAttachmentAddInfo>;
}

/**
 * The set of arguments for constructing a BindWorkGroupsToUserAttachment resource.
 */
export interface BindWorkGroupsToUserAttachmentArgs {
    /**
     * Bind user and workgroup information.
     */
    addInfo: pulumi.Input<inputs.Dlc.BindWorkGroupsToUserAttachmentAddInfo>;
}
