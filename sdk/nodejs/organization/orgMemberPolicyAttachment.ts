// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class OrgMemberPolicyAttachment extends pulumi.CustomResource {
    /**
     * Get an existing OrgMemberPolicyAttachment resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: OrgMemberPolicyAttachmentState, opts?: pulumi.CustomResourceOptions): OrgMemberPolicyAttachment {
        return new OrgMemberPolicyAttachment(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Organization/orgMemberPolicyAttachment:OrgMemberPolicyAttachment';

    /**
     * Returns true if the given object is an instance of OrgMemberPolicyAttachment.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is OrgMemberPolicyAttachment {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === OrgMemberPolicyAttachment.__pulumiType;
    }

    /**
     * Notes.The maximum length is 128 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * Organization identity ID.
     */
    public readonly identityId!: pulumi.Output<number>;
    /**
     * Member Uin list. Up to 10.
     */
    public readonly memberUins!: pulumi.Output<number[]>;
    /**
     * Policy name.The maximum length is 128 characters, supporting English letters, numbers, and symbols +=,.@_-.
     */
    public readonly policyName!: pulumi.Output<string>;

    /**
     * Create a OrgMemberPolicyAttachment resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: OrgMemberPolicyAttachmentArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: OrgMemberPolicyAttachmentArgs | OrgMemberPolicyAttachmentState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as OrgMemberPolicyAttachmentState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["identityId"] = state ? state.identityId : undefined;
            resourceInputs["memberUins"] = state ? state.memberUins : undefined;
            resourceInputs["policyName"] = state ? state.policyName : undefined;
        } else {
            const args = argsOrState as OrgMemberPolicyAttachmentArgs | undefined;
            if ((!args || args.identityId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'identityId'");
            }
            if ((!args || args.memberUins === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberUins'");
            }
            if ((!args || args.policyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'policyName'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["identityId"] = args ? args.identityId : undefined;
            resourceInputs["memberUins"] = args ? args.memberUins : undefined;
            resourceInputs["policyName"] = args ? args.policyName : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(OrgMemberPolicyAttachment.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering OrgMemberPolicyAttachment resources.
 */
export interface OrgMemberPolicyAttachmentState {
    /**
     * Notes.The maximum length is 128 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Organization identity ID.
     */
    identityId?: pulumi.Input<number>;
    /**
     * Member Uin list. Up to 10.
     */
    memberUins?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Policy name.The maximum length is 128 characters, supporting English letters, numbers, and symbols +=,.@_-.
     */
    policyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a OrgMemberPolicyAttachment resource.
 */
export interface OrgMemberPolicyAttachmentArgs {
    /**
     * Notes.The maximum length is 128 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * Organization identity ID.
     */
    identityId: pulumi.Input<number>;
    /**
     * Member Uin list. Up to 10.
     */
    memberUins: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Policy name.The maximum length is 128 characters, supporting English letters, numbers, and symbols +=,.@_-.
     */
    policyName: pulumi.Input<string>;
}
