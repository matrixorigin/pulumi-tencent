// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class CngwNetwork extends pulumi.CustomResource {
    /**
     * Get an existing CngwNetwork resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CngwNetworkState, opts?: pulumi.CustomResourceOptions): CngwNetwork {
        return new CngwNetwork(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tse/cngwNetwork:CngwNetwork';

    /**
     * Returns true if the given object is an instance of CngwNetwork.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CngwNetwork {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CngwNetwork.__pulumiType;
    }

    /**
     * description of clb.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * gateway ID.
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * gateway group ID.
     */
    public readonly groupId!: pulumi.Output<string>;
    /**
     * internet type. Reference value:`IPV4` (default value), `IPV6`.
     */
    public readonly internetAddressVersion!: pulumi.Output<string | undefined>;
    /**
     * public network bandwidth.
     */
    public readonly internetMaxBandwidthOut!: pulumi.Output<number | undefined>;
    /**
     * trade type of internet. Reference value:`BANDWIDTH` (default value), `TRAFFIC`.
     */
    public readonly internetPayMode!: pulumi.Output<string | undefined>;
    /**
     * primary availability zone.
     */
    public readonly masterZoneId!: pulumi.Output<string | undefined>;
    /**
     * Whether load balancing has multiple availability zones.
     */
    public readonly multiZoneFlag!: pulumi.Output<boolean | undefined>;
    /**
     * network id.
     */
    public /*out*/ readonly networkId!: pulumi.Output<string>;
    /**
     * specification type of clb. Default `shared` type when this parameter is empty, Note: input `shared` is not supported
     * when creating. Reference value:`clb.c2.medium`, `clb.c3.small`, `clb.c3.medium`, `clb.c4.small`, `clb.c4.medium`,
     * `clb.c4.large`, `clb.c4.xlarge`.
     */
    public readonly slaType!: pulumi.Output<string | undefined>;
    /**
     * alternate availability zone.
     */
    public readonly slaveZoneId!: pulumi.Output<string | undefined>;
    /**
     * clb vip.
     */
    public /*out*/ readonly vip!: pulumi.Output<string>;

    /**
     * Create a CngwNetwork resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CngwNetworkArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CngwNetworkArgs | CngwNetworkState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CngwNetworkState | undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["groupId"] = state ? state.groupId : undefined;
            resourceInputs["internetAddressVersion"] = state ? state.internetAddressVersion : undefined;
            resourceInputs["internetMaxBandwidthOut"] = state ? state.internetMaxBandwidthOut : undefined;
            resourceInputs["internetPayMode"] = state ? state.internetPayMode : undefined;
            resourceInputs["masterZoneId"] = state ? state.masterZoneId : undefined;
            resourceInputs["multiZoneFlag"] = state ? state.multiZoneFlag : undefined;
            resourceInputs["networkId"] = state ? state.networkId : undefined;
            resourceInputs["slaType"] = state ? state.slaType : undefined;
            resourceInputs["slaveZoneId"] = state ? state.slaveZoneId : undefined;
            resourceInputs["vip"] = state ? state.vip : undefined;
        } else {
            const args = argsOrState as CngwNetworkArgs | undefined;
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.groupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'groupId'");
            }
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["groupId"] = args ? args.groupId : undefined;
            resourceInputs["internetAddressVersion"] = args ? args.internetAddressVersion : undefined;
            resourceInputs["internetMaxBandwidthOut"] = args ? args.internetMaxBandwidthOut : undefined;
            resourceInputs["internetPayMode"] = args ? args.internetPayMode : undefined;
            resourceInputs["masterZoneId"] = args ? args.masterZoneId : undefined;
            resourceInputs["multiZoneFlag"] = args ? args.multiZoneFlag : undefined;
            resourceInputs["slaType"] = args ? args.slaType : undefined;
            resourceInputs["slaveZoneId"] = args ? args.slaveZoneId : undefined;
            resourceInputs["networkId"] = undefined /*out*/;
            resourceInputs["vip"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CngwNetwork.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CngwNetwork resources.
 */
export interface CngwNetworkState {
    /**
     * description of clb.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway ID.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * gateway group ID.
     */
    groupId?: pulumi.Input<string>;
    /**
     * internet type. Reference value:`IPV4` (default value), `IPV6`.
     */
    internetAddressVersion?: pulumi.Input<string>;
    /**
     * public network bandwidth.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * trade type of internet. Reference value:`BANDWIDTH` (default value), `TRAFFIC`.
     */
    internetPayMode?: pulumi.Input<string>;
    /**
     * primary availability zone.
     */
    masterZoneId?: pulumi.Input<string>;
    /**
     * Whether load balancing has multiple availability zones.
     */
    multiZoneFlag?: pulumi.Input<boolean>;
    /**
     * network id.
     */
    networkId?: pulumi.Input<string>;
    /**
     * specification type of clb. Default `shared` type when this parameter is empty, Note: input `shared` is not supported
     * when creating. Reference value:`clb.c2.medium`, `clb.c3.small`, `clb.c3.medium`, `clb.c4.small`, `clb.c4.medium`,
     * `clb.c4.large`, `clb.c4.xlarge`.
     */
    slaType?: pulumi.Input<string>;
    /**
     * alternate availability zone.
     */
    slaveZoneId?: pulumi.Input<string>;
    /**
     * clb vip.
     */
    vip?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CngwNetwork resource.
 */
export interface CngwNetworkArgs {
    /**
     * description of clb.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * gateway group ID.
     */
    groupId: pulumi.Input<string>;
    /**
     * internet type. Reference value:`IPV4` (default value), `IPV6`.
     */
    internetAddressVersion?: pulumi.Input<string>;
    /**
     * public network bandwidth.
     */
    internetMaxBandwidthOut?: pulumi.Input<number>;
    /**
     * trade type of internet. Reference value:`BANDWIDTH` (default value), `TRAFFIC`.
     */
    internetPayMode?: pulumi.Input<string>;
    /**
     * primary availability zone.
     */
    masterZoneId?: pulumi.Input<string>;
    /**
     * Whether load balancing has multiple availability zones.
     */
    multiZoneFlag?: pulumi.Input<boolean>;
    /**
     * specification type of clb. Default `shared` type when this parameter is empty, Note: input `shared` is not supported
     * when creating. Reference value:`clb.c2.medium`, `clb.c3.small`, `clb.c3.medium`, `clb.c4.small`, `clb.c4.medium`,
     * `clb.c4.large`, `clb.c4.xlarge`.
     */
    slaType?: pulumi.Input<string>;
    /**
     * alternate availability zone.
     */
    slaveZoneId?: pulumi.Input<string>;
}
