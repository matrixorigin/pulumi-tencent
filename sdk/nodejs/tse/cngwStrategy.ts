// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class CngwStrategy extends pulumi.CustomResource {
    /**
     * Get an existing CngwStrategy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CngwStrategyState, opts?: pulumi.CustomResourceOptions): CngwStrategy {
        return new CngwStrategy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Tse/cngwStrategy:CngwStrategy';

    /**
     * Returns true if the given object is an instance of CngwStrategy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CngwStrategy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CngwStrategy.__pulumiType;
    }

    /**
     * configuration of metric scaling.
     */
    public readonly config!: pulumi.Output<outputs.Tse.CngwStrategyConfig | undefined>;
    /**
     * configuration of timed scaling.
     */
    public readonly cronConfig!: pulumi.Output<outputs.Tse.CngwStrategyCronConfig | undefined>;
    /**
     * description information, up to 120 characters.
     */
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * gateway ID.
     */
    public readonly gatewayId!: pulumi.Output<string>;
    /**
     * strategy ID Note: This field may return null, indicating that a valid value is not available.
     */
    public /*out*/ readonly strategyId!: pulumi.Output<string>;
    /**
     * strategy name, up to 20 characters.
     */
    public readonly strategyName!: pulumi.Output<string>;

    /**
     * Create a CngwStrategy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CngwStrategyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CngwStrategyArgs | CngwStrategyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CngwStrategyState | undefined;
            resourceInputs["config"] = state ? state.config : undefined;
            resourceInputs["cronConfig"] = state ? state.cronConfig : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gatewayId"] = state ? state.gatewayId : undefined;
            resourceInputs["strategyId"] = state ? state.strategyId : undefined;
            resourceInputs["strategyName"] = state ? state.strategyName : undefined;
        } else {
            const args = argsOrState as CngwStrategyArgs | undefined;
            if ((!args || args.gatewayId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gatewayId'");
            }
            if ((!args || args.strategyName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'strategyName'");
            }
            resourceInputs["config"] = args ? args.config : undefined;
            resourceInputs["cronConfig"] = args ? args.cronConfig : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gatewayId"] = args ? args.gatewayId : undefined;
            resourceInputs["strategyName"] = args ? args.strategyName : undefined;
            resourceInputs["strategyId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CngwStrategy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CngwStrategy resources.
 */
export interface CngwStrategyState {
    /**
     * configuration of metric scaling.
     */
    config?: pulumi.Input<inputs.Tse.CngwStrategyConfig>;
    /**
     * configuration of timed scaling.
     */
    cronConfig?: pulumi.Input<inputs.Tse.CngwStrategyCronConfig>;
    /**
     * description information, up to 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway ID.
     */
    gatewayId?: pulumi.Input<string>;
    /**
     * strategy ID Note: This field may return null, indicating that a valid value is not available.
     */
    strategyId?: pulumi.Input<string>;
    /**
     * strategy name, up to 20 characters.
     */
    strategyName?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CngwStrategy resource.
 */
export interface CngwStrategyArgs {
    /**
     * configuration of metric scaling.
     */
    config?: pulumi.Input<inputs.Tse.CngwStrategyConfig>;
    /**
     * configuration of timed scaling.
     */
    cronConfig?: pulumi.Input<inputs.Tse.CngwStrategyCronConfig>;
    /**
     * description information, up to 120 characters.
     */
    description?: pulumi.Input<string>;
    /**
     * gateway ID.
     */
    gatewayId: pulumi.Input<string>;
    /**
     * strategy name, up to 20 characters.
     */
    strategyName: pulumi.Input<string>;
}
