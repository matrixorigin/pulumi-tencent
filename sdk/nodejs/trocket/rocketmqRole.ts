// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class RocketmqRole extends pulumi.CustomResource {
    /**
     * Get an existing RocketmqRole resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RocketmqRoleState, opts?: pulumi.CustomResourceOptions): RocketmqRole {
        return new RocketmqRole(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Trocket/rocketmqRole:RocketmqRole';

    /**
     * Returns true if the given object is an instance of RocketmqRole.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RocketmqRole {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RocketmqRole.__pulumiType;
    }

    /**
     * Access key.
     */
    public /*out*/ readonly accessKey!: pulumi.Output<string>;
    /**
     * Created time.
     */
    public /*out*/ readonly createdTime!: pulumi.Output<number>;
    /**
     * ID of instance.
     */
    public readonly instanceId!: pulumi.Output<string>;
    /**
     * Modified time.
     */
    public /*out*/ readonly modifiedTime!: pulumi.Output<number>;
    /**
     * Whether to enable consumption permission.
     */
    public readonly permRead!: pulumi.Output<boolean>;
    /**
     * Whether to enable production permission.
     */
    public readonly permWrite!: pulumi.Output<boolean>;
    /**
     * remark.
     */
    public readonly remark!: pulumi.Output<string>;
    /**
     * Name of role.
     */
    public readonly role!: pulumi.Output<string>;
    /**
     * Secret key.
     */
    public /*out*/ readonly secretKey!: pulumi.Output<string>;

    /**
     * Create a RocketmqRole resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RocketmqRoleArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RocketmqRoleArgs | RocketmqRoleState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RocketmqRoleState | undefined;
            resourceInputs["accessKey"] = state ? state.accessKey : undefined;
            resourceInputs["createdTime"] = state ? state.createdTime : undefined;
            resourceInputs["instanceId"] = state ? state.instanceId : undefined;
            resourceInputs["modifiedTime"] = state ? state.modifiedTime : undefined;
            resourceInputs["permRead"] = state ? state.permRead : undefined;
            resourceInputs["permWrite"] = state ? state.permWrite : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["role"] = state ? state.role : undefined;
            resourceInputs["secretKey"] = state ? state.secretKey : undefined;
        } else {
            const args = argsOrState as RocketmqRoleArgs | undefined;
            if ((!args || args.instanceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceId'");
            }
            if ((!args || args.permRead === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permRead'");
            }
            if ((!args || args.permWrite === undefined) && !opts.urn) {
                throw new Error("Missing required property 'permWrite'");
            }
            if ((!args || args.remark === undefined) && !opts.urn) {
                throw new Error("Missing required property 'remark'");
            }
            if ((!args || args.role === undefined) && !opts.urn) {
                throw new Error("Missing required property 'role'");
            }
            resourceInputs["instanceId"] = args ? args.instanceId : undefined;
            resourceInputs["permRead"] = args ? args.permRead : undefined;
            resourceInputs["permWrite"] = args ? args.permWrite : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["role"] = args ? args.role : undefined;
            resourceInputs["accessKey"] = undefined /*out*/;
            resourceInputs["createdTime"] = undefined /*out*/;
            resourceInputs["modifiedTime"] = undefined /*out*/;
            resourceInputs["secretKey"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RocketmqRole.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RocketmqRole resources.
 */
export interface RocketmqRoleState {
    /**
     * Access key.
     */
    accessKey?: pulumi.Input<string>;
    /**
     * Created time.
     */
    createdTime?: pulumi.Input<number>;
    /**
     * ID of instance.
     */
    instanceId?: pulumi.Input<string>;
    /**
     * Modified time.
     */
    modifiedTime?: pulumi.Input<number>;
    /**
     * Whether to enable consumption permission.
     */
    permRead?: pulumi.Input<boolean>;
    /**
     * Whether to enable production permission.
     */
    permWrite?: pulumi.Input<boolean>;
    /**
     * remark.
     */
    remark?: pulumi.Input<string>;
    /**
     * Name of role.
     */
    role?: pulumi.Input<string>;
    /**
     * Secret key.
     */
    secretKey?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RocketmqRole resource.
 */
export interface RocketmqRoleArgs {
    /**
     * ID of instance.
     */
    instanceId: pulumi.Input<string>;
    /**
     * Whether to enable consumption permission.
     */
    permRead: pulumi.Input<boolean>;
    /**
     * Whether to enable production permission.
     */
    permWrite: pulumi.Input<boolean>;
    /**
     * remark.
     */
    remark: pulumi.Input<string>;
    /**
     * Name of role.
     */
    role: pulumi.Input<string>;
}
