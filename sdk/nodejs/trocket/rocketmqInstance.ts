// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class RocketmqInstance extends pulumi.CustomResource {
    /**
     * Get an existing RocketmqInstance resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RocketmqInstanceState, opts?: pulumi.CustomResourceOptions): RocketmqInstance {
        return new RocketmqInstance(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Trocket/rocketmqInstance:RocketmqInstance';

    /**
     * Returns true if the given object is an instance of RocketmqInstance.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RocketmqInstance {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RocketmqInstance.__pulumiType;
    }

    /**
     * Public network bandwidth. `bandwidth` must be greater than zero when `enable_public` equal true.
     */
    public readonly bandwidth!: pulumi.Output<number>;
    /**
     * Whether to enable the public network. Must set `bandwidth` when `enable_public` equal true.
     */
    public readonly enablePublic!: pulumi.Output<boolean>;
    /**
     * Instance type. Valid values: `EXPERIMENT`, `BASIC`, `PRO`, `PLATINUM`.
     */
    public readonly instanceType!: pulumi.Output<string>;
    /**
     * Public network access whitelist.
     */
    public readonly ipRules!: pulumi.Output<outputs.Trocket.RocketmqInstanceIpRule[]>;
    /**
     * Message retention time in hours.
     */
    public readonly messageRetention!: pulumi.Output<number>;
    /**
     * Instance name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Public network access address.
     */
    public /*out*/ readonly publicEndPoint!: pulumi.Output<string>;
    /**
     * Remark.
     */
    public readonly remark!: pulumi.Output<string | undefined>;
    /**
     * SKU code. Available specifications are as follows: experiment_500, basic_1k, basic_2k, basic_4k, basic_6k.
     */
    public readonly skuCode!: pulumi.Output<string>;
    /**
     * Subnet id.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Tag description list.
     */
    public readonly tags!: pulumi.Output<{[key: string]: any}>;
    /**
     * VPC access address.
     */
    public /*out*/ readonly vpcEndPoint!: pulumi.Output<string>;
    /**
     * VPC id.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a RocketmqInstance resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RocketmqInstanceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RocketmqInstanceArgs | RocketmqInstanceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RocketmqInstanceState | undefined;
            resourceInputs["bandwidth"] = state ? state.bandwidth : undefined;
            resourceInputs["enablePublic"] = state ? state.enablePublic : undefined;
            resourceInputs["instanceType"] = state ? state.instanceType : undefined;
            resourceInputs["ipRules"] = state ? state.ipRules : undefined;
            resourceInputs["messageRetention"] = state ? state.messageRetention : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["publicEndPoint"] = state ? state.publicEndPoint : undefined;
            resourceInputs["remark"] = state ? state.remark : undefined;
            resourceInputs["skuCode"] = state ? state.skuCode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["tags"] = state ? state.tags : undefined;
            resourceInputs["vpcEndPoint"] = state ? state.vpcEndPoint : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as RocketmqInstanceArgs | undefined;
            if ((!args || args.instanceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'instanceType'");
            }
            if ((!args || args.skuCode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'skuCode'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["bandwidth"] = args ? args.bandwidth : undefined;
            resourceInputs["enablePublic"] = args ? args.enablePublic : undefined;
            resourceInputs["instanceType"] = args ? args.instanceType : undefined;
            resourceInputs["ipRules"] = args ? args.ipRules : undefined;
            resourceInputs["messageRetention"] = args ? args.messageRetention : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["remark"] = args ? args.remark : undefined;
            resourceInputs["skuCode"] = args ? args.skuCode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["tags"] = args ? args.tags : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["publicEndPoint"] = undefined /*out*/;
            resourceInputs["vpcEndPoint"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RocketmqInstance.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RocketmqInstance resources.
 */
export interface RocketmqInstanceState {
    /**
     * Public network bandwidth. `bandwidth` must be greater than zero when `enable_public` equal true.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Whether to enable the public network. Must set `bandwidth` when `enable_public` equal true.
     */
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Instance type. Valid values: `EXPERIMENT`, `BASIC`, `PRO`, `PLATINUM`.
     */
    instanceType?: pulumi.Input<string>;
    /**
     * Public network access whitelist.
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.Trocket.RocketmqInstanceIpRule>[]>;
    /**
     * Message retention time in hours.
     */
    messageRetention?: pulumi.Input<number>;
    /**
     * Instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * Public network access address.
     */
    publicEndPoint?: pulumi.Input<string>;
    /**
     * Remark.
     */
    remark?: pulumi.Input<string>;
    /**
     * SKU code. Available specifications are as follows: experiment_500, basic_1k, basic_2k, basic_4k, basic_6k.
     */
    skuCode?: pulumi.Input<string>;
    /**
     * Subnet id.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * VPC access address.
     */
    vpcEndPoint?: pulumi.Input<string>;
    /**
     * VPC id.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RocketmqInstance resource.
 */
export interface RocketmqInstanceArgs {
    /**
     * Public network bandwidth. `bandwidth` must be greater than zero when `enable_public` equal true.
     */
    bandwidth?: pulumi.Input<number>;
    /**
     * Whether to enable the public network. Must set `bandwidth` when `enable_public` equal true.
     */
    enablePublic?: pulumi.Input<boolean>;
    /**
     * Instance type. Valid values: `EXPERIMENT`, `BASIC`, `PRO`, `PLATINUM`.
     */
    instanceType: pulumi.Input<string>;
    /**
     * Public network access whitelist.
     */
    ipRules?: pulumi.Input<pulumi.Input<inputs.Trocket.RocketmqInstanceIpRule>[]>;
    /**
     * Message retention time in hours.
     */
    messageRetention?: pulumi.Input<number>;
    /**
     * Instance name.
     */
    name?: pulumi.Input<string>;
    /**
     * Remark.
     */
    remark?: pulumi.Input<string>;
    /**
     * SKU code. Available specifications are as follows: experiment_500, basic_1k, basic_2k, basic_4k, basic_6k.
     */
    skuCode: pulumi.Input<string>;
    /**
     * Subnet id.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Tag description list.
     */
    tags?: pulumi.Input<{[key: string]: any}>;
    /**
     * VPC id.
     */
    vpcId: pulumi.Input<string>;
}
