// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class SampleSnapshotTemplate extends pulumi.CustomResource {
    /**
     * Get an existing SampleSnapshotTemplate resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: SampleSnapshotTemplateState, opts?: pulumi.CustomResourceOptions): SampleSnapshotTemplate {
        return new SampleSnapshotTemplate(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Vod/sampleSnapshotTemplate:SampleSnapshotTemplate';

    /**
     * Returns true if the given object is an instance of SampleSnapshotTemplate.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is SampleSnapshotTemplate {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === SampleSnapshotTemplate.__pulumiType;
    }

    /**
     * Template description. Length limit: 256 characters.
     */
    public readonly comment!: pulumi.Output<string | undefined>;
    /**
     * Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source
     * video. The following fill types are supported: stretch: stretch. The screenshot will be stretched frame by frame to
     * match the aspect ratio of the source video, which may make the screenshot shorter or longer; black: fill with black.
     * This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black
     * color blocks. white: fill with white. This option retains the aspect ratio of the source video for the screenshot and
     * fills the unmatched area with white color blocks. gauss: fill with Gaussian blur. This option retains the aspect ratio
     * of the source video for the screenshot and fills the unmatched area with Gaussian blur.Default value: black.
     */
    public readonly fillType!: pulumi.Output<string | undefined>;
    /**
     * Image format. Valid values: jpg, png. Default value: jpg.
     */
    public readonly format!: pulumi.Output<string | undefined>;
    /**
     * Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    public readonly height!: pulumi.Output<number | undefined>;
    /**
     * Name of a sampled screencapturing template. Length limit: 64 characters.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Resolution adaption. Valid values: open: enabled. In this case, `Width` represents the long side of a video, while
     * `Height` the short side; close: disabled. In this case, `Width` represents the width of a video, while `Height` the
     * height.Default value: open.
     */
    public readonly resolutionAdaptive!: pulumi.Output<string | undefined>;
    /**
     * Sampling interval. If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.
     * If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
     */
    public readonly sampleInterval!: pulumi.Output<number>;
    /**
     * Sampled screencapturing type. Valid values: Percent: by percent. Time: by time interval.
     */
    public readonly sampleType!: pulumi.Output<string>;
    /**
     * The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
     * service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
     * application or a newly created one), they must fill in this field with the application ID.
     */
    public readonly subAppId!: pulumi.Output<number>;
    /**
     * Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    public readonly width!: pulumi.Output<number | undefined>;

    /**
     * Create a SampleSnapshotTemplate resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: SampleSnapshotTemplateArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: SampleSnapshotTemplateArgs | SampleSnapshotTemplateState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as SampleSnapshotTemplateState | undefined;
            resourceInputs["comment"] = state ? state.comment : undefined;
            resourceInputs["fillType"] = state ? state.fillType : undefined;
            resourceInputs["format"] = state ? state.format : undefined;
            resourceInputs["height"] = state ? state.height : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["resolutionAdaptive"] = state ? state.resolutionAdaptive : undefined;
            resourceInputs["sampleInterval"] = state ? state.sampleInterval : undefined;
            resourceInputs["sampleType"] = state ? state.sampleType : undefined;
            resourceInputs["subAppId"] = state ? state.subAppId : undefined;
            resourceInputs["width"] = state ? state.width : undefined;
        } else {
            const args = argsOrState as SampleSnapshotTemplateArgs | undefined;
            if ((!args || args.sampleInterval === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sampleInterval'");
            }
            if ((!args || args.sampleType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sampleType'");
            }
            if ((!args || args.subAppId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subAppId'");
            }
            resourceInputs["comment"] = args ? args.comment : undefined;
            resourceInputs["fillType"] = args ? args.fillType : undefined;
            resourceInputs["format"] = args ? args.format : undefined;
            resourceInputs["height"] = args ? args.height : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["resolutionAdaptive"] = args ? args.resolutionAdaptive : undefined;
            resourceInputs["sampleInterval"] = args ? args.sampleInterval : undefined;
            resourceInputs["sampleType"] = args ? args.sampleType : undefined;
            resourceInputs["subAppId"] = args ? args.subAppId : undefined;
            resourceInputs["width"] = args ? args.width : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(SampleSnapshotTemplate.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering SampleSnapshotTemplate resources.
 */
export interface SampleSnapshotTemplateState {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source
     * video. The following fill types are supported: stretch: stretch. The screenshot will be stretched frame by frame to
     * match the aspect ratio of the source video, which may make the screenshot shorter or longer; black: fill with black.
     * This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black
     * color blocks. white: fill with white. This option retains the aspect ratio of the source video for the screenshot and
     * fills the unmatched area with white color blocks. gauss: fill with Gaussian blur. This option retains the aspect ratio
     * of the source video for the screenshot and fills the unmatched area with Gaussian blur.Default value: black.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format. Valid values: jpg, png. Default value: jpg.
     */
    format?: pulumi.Input<string>;
    /**
     * Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Name of a sampled screencapturing template. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Resolution adaption. Valid values: open: enabled. In this case, `Width` represents the long side of a video, while
     * `Height` the short side; close: disabled. In this case, `Width` represents the width of a video, while `Height` the
     * height.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * Sampling interval. If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.
     * If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
     */
    sampleInterval?: pulumi.Input<number>;
    /**
     * Sampled screencapturing type. Valid values: Percent: by percent. Time: by time interval.
     */
    sampleType?: pulumi.Input<string>;
    /**
     * The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
     * service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
     * application or a newly created one), they must fill in this field with the application ID.
     */
    subAppId?: pulumi.Input<number>;
    /**
     * Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    width?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a SampleSnapshotTemplate resource.
 */
export interface SampleSnapshotTemplateArgs {
    /**
     * Template description. Length limit: 256 characters.
     */
    comment?: pulumi.Input<string>;
    /**
     * Fill type. Fill refers to the way of processing a screenshot when its aspect ratio is different from that of the source
     * video. The following fill types are supported: stretch: stretch. The screenshot will be stretched frame by frame to
     * match the aspect ratio of the source video, which may make the screenshot shorter or longer; black: fill with black.
     * This option retains the aspect ratio of the source video for the screenshot and fills the unmatched area with black
     * color blocks. white: fill with white. This option retains the aspect ratio of the source video for the screenshot and
     * fills the unmatched area with white color blocks. gauss: fill with Gaussian blur. This option retains the aspect ratio
     * of the source video for the screenshot and fills the unmatched area with Gaussian blur.Default value: black.
     */
    fillType?: pulumi.Input<string>;
    /**
     * Image format. Valid values: jpg, png. Default value: jpg.
     */
    format?: pulumi.Input<string>;
    /**
     * Maximum value of the height (or short side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    height?: pulumi.Input<number>;
    /**
     * Name of a sampled screencapturing template. Length limit: 64 characters.
     */
    name?: pulumi.Input<string>;
    /**
     * Resolution adaption. Valid values: open: enabled. In this case, `Width` represents the long side of a video, while
     * `Height` the short side; close: disabled. In this case, `Width` represents the width of a video, while `Height` the
     * height.Default value: open.
     */
    resolutionAdaptive?: pulumi.Input<string>;
    /**
     * Sampling interval. If `SampleType` is `Percent`, sampling will be performed at an interval of the specified percentage.
     * If `SampleType` is `Time`, sampling will be performed at the specified time interval in seconds.
     */
    sampleInterval: pulumi.Input<number>;
    /**
     * Sampled screencapturing type. Valid values: Percent: by percent. Time: by time interval.
     */
    sampleType: pulumi.Input<string>;
    /**
     * The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
     * service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
     * application or a newly created one), they must fill in this field with the application ID.
     */
    subAppId: pulumi.Input<number>;
    /**
     * Maximum value of the width (or long side) of a screenshot in px. Value range: 0 and [128, 4,096]. If both `Width` and
     * `Height` are 0, the resolution will be the same as that of the source video; If `Width` is 0, but `Height` is not 0,
     * `Width` will be proportionally scaled; If `Width` is not 0, but `Height` is 0, `Height` will be proportionally scaled;
     * If both `Width` and `Height` are not 0, the custom resolution will be used.Default value: 0.
     */
    width?: pulumi.Input<number>;
}
