// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class Ipv6Address extends pulumi.CustomResource {
    /**
     * Get an existing Ipv6Address resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: Ipv6AddressState, opts?: pulumi.CustomResourceOptions): Ipv6Address {
        return new Ipv6Address(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Eni/ipv6Address:Ipv6Address';

    /**
     * Returns true if the given object is an instance of Ipv6Address.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Ipv6Address {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Ipv6Address.__pulumiType;
    }

    /**
     * The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
     * quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
     * either this or 'Ipv6Addresses', must be provided.
     */
    public readonly ipv6AddressCount!: pulumi.Output<number>;
    /**
     * The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
     * `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
     */
    public readonly ipv6Addresses!: pulumi.Output<outputs.Eni.Ipv6AddressIpv6Address[]>;
    /**
     * ENI instance `ID`, in the form of `eni-m6dyj72l`.
     */
    public readonly networkInterfaceId!: pulumi.Output<string>;

    /**
     * Create a Ipv6Address resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: Ipv6AddressArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: Ipv6AddressArgs | Ipv6AddressState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as Ipv6AddressState | undefined;
            resourceInputs["ipv6AddressCount"] = state ? state.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = state ? state.ipv6Addresses : undefined;
            resourceInputs["networkInterfaceId"] = state ? state.networkInterfaceId : undefined;
        } else {
            const args = argsOrState as Ipv6AddressArgs | undefined;
            if ((!args || args.networkInterfaceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'networkInterfaceId'");
            }
            resourceInputs["ipv6AddressCount"] = args ? args.ipv6AddressCount : undefined;
            resourceInputs["ipv6Addresses"] = args ? args.ipv6Addresses : undefined;
            resourceInputs["networkInterfaceId"] = args ? args.networkInterfaceId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Ipv6Address.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Ipv6Address resources.
 */
export interface Ipv6AddressState {
    /**
     * The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
     * quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
     * either this or 'Ipv6Addresses', must be provided.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
     * `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.Eni.Ipv6AddressIpv6Address>[]>;
    /**
     * ENI instance `ID`, in the form of `eni-m6dyj72l`.
     */
    networkInterfaceId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Ipv6Address resource.
 */
export interface Ipv6AddressArgs {
    /**
     * The number of automatically assigned IPv6 addresses and the total number of private IP addresses cannot exceed the
     * quota. This should be combined with the input parameter `ipv6_addresses` for quota calculation. At least one of them,
     * either this or 'Ipv6Addresses', must be provided.
     */
    ipv6AddressCount?: pulumi.Input<number>;
    /**
     * The specified `IPv6` address list, up to 10 can be specified at a time. Combined with the input parameter
     * `Ipv6AddressCount` to calculate the quota. Mandatory one with Ipv6AddressCount.
     */
    ipv6Addresses?: pulumi.Input<pulumi.Input<inputs.Eni.Ipv6AddressIpv6Address>[]>;
    /**
     * ENI instance `ID`, in the form of `eni-m6dyj72l`.
     */
    networkInterfaceId: pulumi.Input<string>;
}
