// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Acl extends pulumi.CustomResource {
    /**
     * Get an existing Acl resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AclState, opts?: pulumi.CustomResourceOptions): Acl {
        return new Acl(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dasb/acl:Acl';

    /**
     * Returns true if the given object is an instance of Acl.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Acl {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Acl.__pulumiType;
    }

    /**
     * Associate high-risk DB template IDs.
     */
    public readonly acTemplateIdSets!: pulumi.Output<string[] | undefined>;
    /**
     * Associated accounts.
     */
    public readonly accountSets!: pulumi.Output<string[] | undefined>;
    /**
     * Allow access credential,default allow.
     */
    public readonly allowAccessCredential!: pulumi.Output<boolean | undefined>;
    /**
     * Allow any account.
     */
    public readonly allowAnyAccount!: pulumi.Output<boolean>;
    /**
     * Allow clip file down.
     */
    public readonly allowClipFileDown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow clip file up.
     */
    public readonly allowClipFileUp!: pulumi.Output<boolean | undefined>;
    /**
     * Allow clip text down.
     */
    public readonly allowClipTextDown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow clip text up.
     */
    public readonly allowClipTextUp!: pulumi.Output<boolean | undefined>;
    /**
     * Allow disk file download.
     */
    public readonly allowDiskFileDown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow disk file upload.
     */
    public readonly allowDiskFileUp!: pulumi.Output<boolean | undefined>;
    /**
     * Allow disk redirect.
     */
    public readonly allowDiskRedirect!: pulumi.Output<boolean>;
    /**
     * Allow sftp file delete.
     */
    public readonly allowFileDel!: pulumi.Output<boolean | undefined>;
    /**
     * Allow sftp file download.
     */
    public readonly allowFileDown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow sftp up file.
     */
    public readonly allowFileUp!: pulumi.Output<boolean | undefined>;
    /**
     * Allow shell file download.
     */
    public readonly allowShellFileDown!: pulumi.Output<boolean | undefined>;
    /**
     * Allow shell file upload.
     */
    public readonly allowShellFileUp!: pulumi.Output<boolean | undefined>;
    /**
     * Associated high-risk command template ID.
     */
    public readonly cmdTemplateIdSets!: pulumi.Output<number[] | undefined>;
    /**
     * Department id.
     */
    public readonly departmentId!: pulumi.Output<string | undefined>;
    /**
     * Associated device group ID.
     */
    public readonly deviceGroupIdSets!: pulumi.Output<number[] | undefined>;
    /**
     * Associated collection of device IDs.
     */
    public readonly deviceIdSets!: pulumi.Output<number[] | undefined>;
    /**
     * File transfer download size limit (reserved parameter, currently unused).
     */
    public readonly maxFileDownSize!: pulumi.Output<number | undefined>;
    /**
     * File upload transfer size limit (artifact parameter, currently unused).
     */
    public readonly maxFileUpSize!: pulumi.Output<number | undefined>;
    /**
     * Acl name.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * Associated user group ID.
     */
    public readonly userGroupIdSets!: pulumi.Output<number[] | undefined>;
    /**
     * Associated set of user IDs.
     */
    public readonly userIdSets!: pulumi.Output<number[] | undefined>;
    /**
     * Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    public readonly validateFrom!: pulumi.Output<string>;
    /**
     * Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    public readonly validateTo!: pulumi.Output<string>;

    /**
     * Create a Acl resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AclArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AclArgs | AclState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AclState | undefined;
            resourceInputs["acTemplateIdSets"] = state ? state.acTemplateIdSets : undefined;
            resourceInputs["accountSets"] = state ? state.accountSets : undefined;
            resourceInputs["allowAccessCredential"] = state ? state.allowAccessCredential : undefined;
            resourceInputs["allowAnyAccount"] = state ? state.allowAnyAccount : undefined;
            resourceInputs["allowClipFileDown"] = state ? state.allowClipFileDown : undefined;
            resourceInputs["allowClipFileUp"] = state ? state.allowClipFileUp : undefined;
            resourceInputs["allowClipTextDown"] = state ? state.allowClipTextDown : undefined;
            resourceInputs["allowClipTextUp"] = state ? state.allowClipTextUp : undefined;
            resourceInputs["allowDiskFileDown"] = state ? state.allowDiskFileDown : undefined;
            resourceInputs["allowDiskFileUp"] = state ? state.allowDiskFileUp : undefined;
            resourceInputs["allowDiskRedirect"] = state ? state.allowDiskRedirect : undefined;
            resourceInputs["allowFileDel"] = state ? state.allowFileDel : undefined;
            resourceInputs["allowFileDown"] = state ? state.allowFileDown : undefined;
            resourceInputs["allowFileUp"] = state ? state.allowFileUp : undefined;
            resourceInputs["allowShellFileDown"] = state ? state.allowShellFileDown : undefined;
            resourceInputs["allowShellFileUp"] = state ? state.allowShellFileUp : undefined;
            resourceInputs["cmdTemplateIdSets"] = state ? state.cmdTemplateIdSets : undefined;
            resourceInputs["departmentId"] = state ? state.departmentId : undefined;
            resourceInputs["deviceGroupIdSets"] = state ? state.deviceGroupIdSets : undefined;
            resourceInputs["deviceIdSets"] = state ? state.deviceIdSets : undefined;
            resourceInputs["maxFileDownSize"] = state ? state.maxFileDownSize : undefined;
            resourceInputs["maxFileUpSize"] = state ? state.maxFileUpSize : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["userGroupIdSets"] = state ? state.userGroupIdSets : undefined;
            resourceInputs["userIdSets"] = state ? state.userIdSets : undefined;
            resourceInputs["validateFrom"] = state ? state.validateFrom : undefined;
            resourceInputs["validateTo"] = state ? state.validateTo : undefined;
        } else {
            const args = argsOrState as AclArgs | undefined;
            if ((!args || args.allowAnyAccount === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowAnyAccount'");
            }
            if ((!args || args.allowDiskRedirect === undefined) && !opts.urn) {
                throw new Error("Missing required property 'allowDiskRedirect'");
            }
            resourceInputs["acTemplateIdSets"] = args ? args.acTemplateIdSets : undefined;
            resourceInputs["accountSets"] = args ? args.accountSets : undefined;
            resourceInputs["allowAccessCredential"] = args ? args.allowAccessCredential : undefined;
            resourceInputs["allowAnyAccount"] = args ? args.allowAnyAccount : undefined;
            resourceInputs["allowClipFileDown"] = args ? args.allowClipFileDown : undefined;
            resourceInputs["allowClipFileUp"] = args ? args.allowClipFileUp : undefined;
            resourceInputs["allowClipTextDown"] = args ? args.allowClipTextDown : undefined;
            resourceInputs["allowClipTextUp"] = args ? args.allowClipTextUp : undefined;
            resourceInputs["allowDiskFileDown"] = args ? args.allowDiskFileDown : undefined;
            resourceInputs["allowDiskFileUp"] = args ? args.allowDiskFileUp : undefined;
            resourceInputs["allowDiskRedirect"] = args ? args.allowDiskRedirect : undefined;
            resourceInputs["allowFileDel"] = args ? args.allowFileDel : undefined;
            resourceInputs["allowFileDown"] = args ? args.allowFileDown : undefined;
            resourceInputs["allowFileUp"] = args ? args.allowFileUp : undefined;
            resourceInputs["allowShellFileDown"] = args ? args.allowShellFileDown : undefined;
            resourceInputs["allowShellFileUp"] = args ? args.allowShellFileUp : undefined;
            resourceInputs["cmdTemplateIdSets"] = args ? args.cmdTemplateIdSets : undefined;
            resourceInputs["departmentId"] = args ? args.departmentId : undefined;
            resourceInputs["deviceGroupIdSets"] = args ? args.deviceGroupIdSets : undefined;
            resourceInputs["deviceIdSets"] = args ? args.deviceIdSets : undefined;
            resourceInputs["maxFileDownSize"] = args ? args.maxFileDownSize : undefined;
            resourceInputs["maxFileUpSize"] = args ? args.maxFileUpSize : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["userGroupIdSets"] = args ? args.userGroupIdSets : undefined;
            resourceInputs["userIdSets"] = args ? args.userIdSets : undefined;
            resourceInputs["validateFrom"] = args ? args.validateFrom : undefined;
            resourceInputs["validateTo"] = args ? args.validateTo : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Acl.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Acl resources.
 */
export interface AclState {
    /**
     * Associate high-risk DB template IDs.
     */
    acTemplateIdSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Associated accounts.
     */
    accountSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow access credential,default allow.
     */
    allowAccessCredential?: pulumi.Input<boolean>;
    /**
     * Allow any account.
     */
    allowAnyAccount?: pulumi.Input<boolean>;
    /**
     * Allow clip file down.
     */
    allowClipFileDown?: pulumi.Input<boolean>;
    /**
     * Allow clip file up.
     */
    allowClipFileUp?: pulumi.Input<boolean>;
    /**
     * Allow clip text down.
     */
    allowClipTextDown?: pulumi.Input<boolean>;
    /**
     * Allow clip text up.
     */
    allowClipTextUp?: pulumi.Input<boolean>;
    /**
     * Allow disk file download.
     */
    allowDiskFileDown?: pulumi.Input<boolean>;
    /**
     * Allow disk file upload.
     */
    allowDiskFileUp?: pulumi.Input<boolean>;
    /**
     * Allow disk redirect.
     */
    allowDiskRedirect?: pulumi.Input<boolean>;
    /**
     * Allow sftp file delete.
     */
    allowFileDel?: pulumi.Input<boolean>;
    /**
     * Allow sftp file download.
     */
    allowFileDown?: pulumi.Input<boolean>;
    /**
     * Allow sftp up file.
     */
    allowFileUp?: pulumi.Input<boolean>;
    /**
     * Allow shell file download.
     */
    allowShellFileDown?: pulumi.Input<boolean>;
    /**
     * Allow shell file upload.
     */
    allowShellFileUp?: pulumi.Input<boolean>;
    /**
     * Associated high-risk command template ID.
     */
    cmdTemplateIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Department id.
     */
    departmentId?: pulumi.Input<string>;
    /**
     * Associated device group ID.
     */
    deviceGroupIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Associated collection of device IDs.
     */
    deviceIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * File transfer download size limit (reserved parameter, currently unused).
     */
    maxFileDownSize?: pulumi.Input<number>;
    /**
     * File upload transfer size limit (artifact parameter, currently unused).
     */
    maxFileUpSize?: pulumi.Input<number>;
    /**
     * Acl name.
     */
    name?: pulumi.Input<string>;
    /**
     * Associated user group ID.
     */
    userGroupIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Associated set of user IDs.
     */
    userIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    validateFrom?: pulumi.Input<string>;
    /**
     * Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    validateTo?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Acl resource.
 */
export interface AclArgs {
    /**
     * Associate high-risk DB template IDs.
     */
    acTemplateIdSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Associated accounts.
     */
    accountSets?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * Allow access credential,default allow.
     */
    allowAccessCredential?: pulumi.Input<boolean>;
    /**
     * Allow any account.
     */
    allowAnyAccount: pulumi.Input<boolean>;
    /**
     * Allow clip file down.
     */
    allowClipFileDown?: pulumi.Input<boolean>;
    /**
     * Allow clip file up.
     */
    allowClipFileUp?: pulumi.Input<boolean>;
    /**
     * Allow clip text down.
     */
    allowClipTextDown?: pulumi.Input<boolean>;
    /**
     * Allow clip text up.
     */
    allowClipTextUp?: pulumi.Input<boolean>;
    /**
     * Allow disk file download.
     */
    allowDiskFileDown?: pulumi.Input<boolean>;
    /**
     * Allow disk file upload.
     */
    allowDiskFileUp?: pulumi.Input<boolean>;
    /**
     * Allow disk redirect.
     */
    allowDiskRedirect: pulumi.Input<boolean>;
    /**
     * Allow sftp file delete.
     */
    allowFileDel?: pulumi.Input<boolean>;
    /**
     * Allow sftp file download.
     */
    allowFileDown?: pulumi.Input<boolean>;
    /**
     * Allow sftp up file.
     */
    allowFileUp?: pulumi.Input<boolean>;
    /**
     * Allow shell file download.
     */
    allowShellFileDown?: pulumi.Input<boolean>;
    /**
     * Allow shell file upload.
     */
    allowShellFileUp?: pulumi.Input<boolean>;
    /**
     * Associated high-risk command template ID.
     */
    cmdTemplateIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Department id.
     */
    departmentId?: pulumi.Input<string>;
    /**
     * Associated device group ID.
     */
    deviceGroupIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Associated collection of device IDs.
     */
    deviceIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * File transfer download size limit (reserved parameter, currently unused).
     */
    maxFileDownSize?: pulumi.Input<number>;
    /**
     * File upload transfer size limit (artifact parameter, currently unused).
     */
    maxFileUpSize?: pulumi.Input<number>;
    /**
     * Acl name.
     */
    name?: pulumi.Input<string>;
    /**
     * Associated user group ID.
     */
    userGroupIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Associated set of user IDs.
     */
    userIdSets?: pulumi.Input<pulumi.Input<number>[]>;
    /**
     * Access permission effective time, such as: 2021-09-22T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    validateFrom?: pulumi.Input<string>;
    /**
     * Access permission expiration time, such as: 2021-09-23T00:00:00+08:00If the effective and expiry time are not filled in,
     * the access rights will be valid for a long time.
     */
    validateTo?: pulumi.Input<string>;
}
