// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class DeviceGroupMembers extends pulumi.CustomResource {
    /**
     * Get an existing DeviceGroupMembers resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DeviceGroupMembersState, opts?: pulumi.CustomResourceOptions): DeviceGroupMembers {
        return new DeviceGroupMembers(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dasb/deviceGroupMembers:DeviceGroupMembers';

    /**
     * Returns true if the given object is an instance of DeviceGroupMembers.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DeviceGroupMembers {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DeviceGroupMembers.__pulumiType;
    }

    /**
     * Device Group ID.
     */
    public readonly deviceGroupId!: pulumi.Output<number>;
    /**
     * A collection of device IDs that need to be added to the device group.
     */
    public readonly memberIdSets!: pulumi.Output<number[]>;

    /**
     * Create a DeviceGroupMembers resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DeviceGroupMembersArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DeviceGroupMembersArgs | DeviceGroupMembersState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DeviceGroupMembersState | undefined;
            resourceInputs["deviceGroupId"] = state ? state.deviceGroupId : undefined;
            resourceInputs["memberIdSets"] = state ? state.memberIdSets : undefined;
        } else {
            const args = argsOrState as DeviceGroupMembersArgs | undefined;
            if ((!args || args.deviceGroupId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deviceGroupId'");
            }
            if ((!args || args.memberIdSets === undefined) && !opts.urn) {
                throw new Error("Missing required property 'memberIdSets'");
            }
            resourceInputs["deviceGroupId"] = args ? args.deviceGroupId : undefined;
            resourceInputs["memberIdSets"] = args ? args.memberIdSets : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(DeviceGroupMembers.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DeviceGroupMembers resources.
 */
export interface DeviceGroupMembersState {
    /**
     * Device Group ID.
     */
    deviceGroupId?: pulumi.Input<number>;
    /**
     * A collection of device IDs that need to be added to the device group.
     */
    memberIdSets?: pulumi.Input<pulumi.Input<number>[]>;
}

/**
 * The set of arguments for constructing a DeviceGroupMembers resource.
 */
export interface DeviceGroupMembersArgs {
    /**
     * Device Group ID.
     */
    deviceGroupId: pulumi.Input<number>;
    /**
     * A collection of device IDs that need to be added to the device group.
     */
    memberIdSets: pulumi.Input<pulumi.Input<number>[]>;
}
