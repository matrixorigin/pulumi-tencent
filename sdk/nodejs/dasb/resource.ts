// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class Resource extends pulumi.CustomResource {
    /**
     * Get an existing Resource resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ResourceState, opts?: pulumi.CustomResourceOptions): Resource {
        return new Resource(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Dasb/resource:Resource';

    /**
     * Returns true if the given object is an instance of Resource.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Resource {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Resource.__pulumiType;
    }

    /**
     * Automatic renewal. 1 is auto renew flag, 0 is not.
     */
    public readonly autoRenewFlag!: pulumi.Output<number>;
    /**
     * Subnet segments that require service activation.
     */
    public readonly cidrBlock!: pulumi.Output<string>;
    /**
     * Deploy region.
     */
    public readonly deployRegion!: pulumi.Output<string>;
    /**
     * Deploy zone.
     */
    public readonly deployZone!: pulumi.Output<string>;
    /**
     * Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
     */
    public readonly packageBandwidth!: pulumi.Output<number>;
    /**
     * Resource type.Value:standard/pro.
     */
    public readonly resourceEdition!: pulumi.Output<string>;
    /**
     * Number of resource nodes.
     */
    public readonly resourceNode!: pulumi.Output<number>;
    /**
     * Deploy resource subnetId.
     */
    public readonly subnetId!: pulumi.Output<string>;
    /**
     * Billing time. This field is mandatory, with a minimum value of 1.
     */
    public readonly timeSpan!: pulumi.Output<number | undefined>;
    /**
     * Billing cycle, only support m: month. This field is mandatory, fill in m.
     */
    public readonly timeUnit!: pulumi.Output<string | undefined>;
    /**
     * The network segment corresponding to the VPC that requires service activation.
     */
    public readonly vpcCidrBlock!: pulumi.Output<string>;
    /**
     * Deploy resource vpcId.
     */
    public readonly vpcId!: pulumi.Output<string>;

    /**
     * Create a Resource resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ResourceArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ResourceArgs | ResourceState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ResourceState | undefined;
            resourceInputs["autoRenewFlag"] = state ? state.autoRenewFlag : undefined;
            resourceInputs["cidrBlock"] = state ? state.cidrBlock : undefined;
            resourceInputs["deployRegion"] = state ? state.deployRegion : undefined;
            resourceInputs["deployZone"] = state ? state.deployZone : undefined;
            resourceInputs["packageBandwidth"] = state ? state.packageBandwidth : undefined;
            resourceInputs["resourceEdition"] = state ? state.resourceEdition : undefined;
            resourceInputs["resourceNode"] = state ? state.resourceNode : undefined;
            resourceInputs["subnetId"] = state ? state.subnetId : undefined;
            resourceInputs["timeSpan"] = state ? state.timeSpan : undefined;
            resourceInputs["timeUnit"] = state ? state.timeUnit : undefined;
            resourceInputs["vpcCidrBlock"] = state ? state.vpcCidrBlock : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
        } else {
            const args = argsOrState as ResourceArgs | undefined;
            if ((!args || args.autoRenewFlag === undefined) && !opts.urn) {
                throw new Error("Missing required property 'autoRenewFlag'");
            }
            if ((!args || args.cidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'cidrBlock'");
            }
            if ((!args || args.deployRegion === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployRegion'");
            }
            if ((!args || args.deployZone === undefined) && !opts.urn) {
                throw new Error("Missing required property 'deployZone'");
            }
            if ((!args || args.resourceEdition === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceEdition'");
            }
            if ((!args || args.resourceNode === undefined) && !opts.urn) {
                throw new Error("Missing required property 'resourceNode'");
            }
            if ((!args || args.subnetId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'subnetId'");
            }
            if ((!args || args.vpcCidrBlock === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcCidrBlock'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["autoRenewFlag"] = args ? args.autoRenewFlag : undefined;
            resourceInputs["cidrBlock"] = args ? args.cidrBlock : undefined;
            resourceInputs["deployRegion"] = args ? args.deployRegion : undefined;
            resourceInputs["deployZone"] = args ? args.deployZone : undefined;
            resourceInputs["packageBandwidth"] = args ? args.packageBandwidth : undefined;
            resourceInputs["resourceEdition"] = args ? args.resourceEdition : undefined;
            resourceInputs["resourceNode"] = args ? args.resourceNode : undefined;
            resourceInputs["subnetId"] = args ? args.subnetId : undefined;
            resourceInputs["timeSpan"] = args ? args.timeSpan : undefined;
            resourceInputs["timeUnit"] = args ? args.timeUnit : undefined;
            resourceInputs["vpcCidrBlock"] = args ? args.vpcCidrBlock : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Resource.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Resource resources.
 */
export interface ResourceState {
    /**
     * Automatic renewal. 1 is auto renew flag, 0 is not.
     */
    autoRenewFlag?: pulumi.Input<number>;
    /**
     * Subnet segments that require service activation.
     */
    cidrBlock?: pulumi.Input<string>;
    /**
     * Deploy region.
     */
    deployRegion?: pulumi.Input<string>;
    /**
     * Deploy zone.
     */
    deployZone?: pulumi.Input<string>;
    /**
     * Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
     */
    packageBandwidth?: pulumi.Input<number>;
    /**
     * Resource type.Value:standard/pro.
     */
    resourceEdition?: pulumi.Input<string>;
    /**
     * Number of resource nodes.
     */
    resourceNode?: pulumi.Input<number>;
    /**
     * Deploy resource subnetId.
     */
    subnetId?: pulumi.Input<string>;
    /**
     * Billing time. This field is mandatory, with a minimum value of 1.
     */
    timeSpan?: pulumi.Input<number>;
    /**
     * Billing cycle, only support m: month. This field is mandatory, fill in m.
     */
    timeUnit?: pulumi.Input<string>;
    /**
     * The network segment corresponding to the VPC that requires service activation.
     */
    vpcCidrBlock?: pulumi.Input<string>;
    /**
     * Deploy resource vpcId.
     */
    vpcId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Resource resource.
 */
export interface ResourceArgs {
    /**
     * Automatic renewal. 1 is auto renew flag, 0 is not.
     */
    autoRenewFlag: pulumi.Input<number>;
    /**
     * Subnet segments that require service activation.
     */
    cidrBlock: pulumi.Input<string>;
    /**
     * Deploy region.
     */
    deployRegion: pulumi.Input<string>;
    /**
     * Deploy zone.
     */
    deployZone: pulumi.Input<string>;
    /**
     * Number of bandwidth expansion packets (4M), The set value is an integer multiple of 4.
     */
    packageBandwidth?: pulumi.Input<number>;
    /**
     * Resource type.Value:standard/pro.
     */
    resourceEdition: pulumi.Input<string>;
    /**
     * Number of resource nodes.
     */
    resourceNode: pulumi.Input<number>;
    /**
     * Deploy resource subnetId.
     */
    subnetId: pulumi.Input<string>;
    /**
     * Billing time. This field is mandatory, with a minimum value of 1.
     */
    timeSpan?: pulumi.Input<number>;
    /**
     * Billing cycle, only support m: month. This field is mandatory, fill in m.
     */
    timeUnit?: pulumi.Input<string>;
    /**
     * The network segment corresponding to the VPC that requires service activation.
     */
    vpcCidrBlock: pulumi.Input<string>;
    /**
     * Deploy resource vpcId.
     */
    vpcId: pulumi.Input<string>;
}
