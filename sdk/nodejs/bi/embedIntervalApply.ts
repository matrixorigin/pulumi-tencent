// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

export class EmbedIntervalApply extends pulumi.CustomResource {
    /**
     * Get an existing EmbedIntervalApply resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EmbedIntervalApplyState, opts?: pulumi.CustomResourceOptions): EmbedIntervalApply {
        return new EmbedIntervalApply(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Bi/embedIntervalApply:EmbedIntervalApply';

    /**
     * Returns true if the given object is an instance of EmbedIntervalApply.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EmbedIntervalApply {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EmbedIntervalApply.__pulumiType;
    }

    /**
     * Token that needs to be applied for extension.
     */
    public readonly biToken!: pulumi.Output<string | undefined>;
    /**
     * Sharing page id, this is empty value 0 when embedding the board.
     */
    public readonly pageId!: pulumi.Output<number | undefined>;
    /**
     * Sharing project id, required.
     */
    public readonly projectId!: pulumi.Output<number | undefined>;
    /**
     * Choose panel or page.
     */
    public readonly scope!: pulumi.Output<string | undefined>;

    /**
     * Create a EmbedIntervalApply resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: EmbedIntervalApplyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EmbedIntervalApplyArgs | EmbedIntervalApplyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EmbedIntervalApplyState | undefined;
            resourceInputs["biToken"] = state ? state.biToken : undefined;
            resourceInputs["pageId"] = state ? state.pageId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
        } else {
            const args = argsOrState as EmbedIntervalApplyArgs | undefined;
            resourceInputs["biToken"] = args ? args.biToken : undefined;
            resourceInputs["pageId"] = args ? args.pageId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EmbedIntervalApply.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EmbedIntervalApply resources.
 */
export interface EmbedIntervalApplyState {
    /**
     * Token that needs to be applied for extension.
     */
    biToken?: pulumi.Input<string>;
    /**
     * Sharing page id, this is empty value 0 when embedding the board.
     */
    pageId?: pulumi.Input<number>;
    /**
     * Sharing project id, required.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Choose panel or page.
     */
    scope?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a EmbedIntervalApply resource.
 */
export interface EmbedIntervalApplyArgs {
    /**
     * Token that needs to be applied for extension.
     */
    biToken?: pulumi.Input<string>;
    /**
     * Sharing page id, this is empty value 0 when embedding the board.
     */
    pageId?: pulumi.Input<number>;
    /**
     * Sharing project id, required.
     */
    projectId?: pulumi.Input<number>;
    /**
     * Choose panel or page.
     */
    scope?: pulumi.Input<string>;
}
