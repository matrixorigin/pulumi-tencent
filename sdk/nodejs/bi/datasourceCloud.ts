// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class DatasourceCloud extends pulumi.CustomResource {
    /**
     * Get an existing DatasourceCloud resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: DatasourceCloudState, opts?: pulumi.CustomResourceOptions): DatasourceCloud {
        return new DatasourceCloud(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Bi/datasourceCloud:DatasourceCloud';

    /**
     * Returns true if the given object is an instance of DatasourceCloud.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is DatasourceCloud {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === DatasourceCloud.__pulumiType;
    }

    /**
     * Charset.
     */
    public readonly charset!: pulumi.Output<string>;
    /**
     * Cluster id.
     */
    public readonly clusterId!: pulumi.Output<string | undefined>;
    /**
     * Third-party datasource identification, this parameter can be ignored.
     */
    public readonly dataOrigin!: pulumi.Output<string | undefined>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    public readonly dataOriginDatasourceId!: pulumi.Output<string | undefined>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    public readonly dataOriginProjectId!: pulumi.Output<string | undefined>;
    /**
     * Database name.
     */
    public readonly dbName!: pulumi.Output<string>;
    /**
     * Password.
     */
    public readonly dbPwd!: pulumi.Output<string>;
    /**
     * `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
     */
    public readonly dbType!: pulumi.Output<string>;
    /**
     * User name.
     */
    public readonly dbUser!: pulumi.Output<string>;
    /**
     * Extended parameters.
     */
    public readonly extraParam!: pulumi.Output<string>;
    /**
     * Project id.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Region identifier.
     */
    public readonly regionId!: pulumi.Output<string | undefined>;
    /**
     * Service type, Own or Cloud.
     */
    public readonly serviceType!: pulumi.Output<outputs.Bi.DatasourceCloudServiceType>;
    /**
     * Datasource name in BI.
     */
    public readonly sourceName!: pulumi.Output<string>;
    /**
     * Unified vpc identification.
     */
    public readonly uniqVpcId!: pulumi.Output<string | undefined>;
    /**
     * Public cloud intranet ip.
     */
    public readonly vip!: pulumi.Output<string | undefined>;
    /**
     * Vpc identification.
     */
    public readonly vpcId!: pulumi.Output<string>;
    /**
     * Public cloud intranet port.
     */
    public readonly vport!: pulumi.Output<string | undefined>;

    /**
     * Create a DatasourceCloud resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: DatasourceCloudArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: DatasourceCloudArgs | DatasourceCloudState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as DatasourceCloudState | undefined;
            resourceInputs["charset"] = state ? state.charset : undefined;
            resourceInputs["clusterId"] = state ? state.clusterId : undefined;
            resourceInputs["dataOrigin"] = state ? state.dataOrigin : undefined;
            resourceInputs["dataOriginDatasourceId"] = state ? state.dataOriginDatasourceId : undefined;
            resourceInputs["dataOriginProjectId"] = state ? state.dataOriginProjectId : undefined;
            resourceInputs["dbName"] = state ? state.dbName : undefined;
            resourceInputs["dbPwd"] = state ? state.dbPwd : undefined;
            resourceInputs["dbType"] = state ? state.dbType : undefined;
            resourceInputs["dbUser"] = state ? state.dbUser : undefined;
            resourceInputs["extraParam"] = state ? state.extraParam : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["regionId"] = state ? state.regionId : undefined;
            resourceInputs["serviceType"] = state ? state.serviceType : undefined;
            resourceInputs["sourceName"] = state ? state.sourceName : undefined;
            resourceInputs["uniqVpcId"] = state ? state.uniqVpcId : undefined;
            resourceInputs["vip"] = state ? state.vip : undefined;
            resourceInputs["vpcId"] = state ? state.vpcId : undefined;
            resourceInputs["vport"] = state ? state.vport : undefined;
        } else {
            const args = argsOrState as DatasourceCloudArgs | undefined;
            if ((!args || args.charset === undefined) && !opts.urn) {
                throw new Error("Missing required property 'charset'");
            }
            if ((!args || args.dbName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbName'");
            }
            if ((!args || args.dbPwd === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbPwd'");
            }
            if ((!args || args.dbType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbType'");
            }
            if ((!args || args.dbUser === undefined) && !opts.urn) {
                throw new Error("Missing required property 'dbUser'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.serviceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceType'");
            }
            if ((!args || args.sourceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sourceName'");
            }
            if ((!args || args.vpcId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'vpcId'");
            }
            resourceInputs["charset"] = args ? args.charset : undefined;
            resourceInputs["clusterId"] = args ? args.clusterId : undefined;
            resourceInputs["dataOrigin"] = args ? args.dataOrigin : undefined;
            resourceInputs["dataOriginDatasourceId"] = args ? args.dataOriginDatasourceId : undefined;
            resourceInputs["dataOriginProjectId"] = args ? args.dataOriginProjectId : undefined;
            resourceInputs["dbName"] = args ? args.dbName : undefined;
            resourceInputs["dbPwd"] = args?.dbPwd ? pulumi.secret(args.dbPwd) : undefined;
            resourceInputs["dbType"] = args ? args.dbType : undefined;
            resourceInputs["dbUser"] = args ? args.dbUser : undefined;
            resourceInputs["extraParam"] = args ? args.extraParam : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["regionId"] = args ? args.regionId : undefined;
            resourceInputs["serviceType"] = args ? args.serviceType : undefined;
            resourceInputs["sourceName"] = args ? args.sourceName : undefined;
            resourceInputs["uniqVpcId"] = args ? args.uniqVpcId : undefined;
            resourceInputs["vip"] = args ? args.vip : undefined;
            resourceInputs["vpcId"] = args ? args.vpcId : undefined;
            resourceInputs["vport"] = args ? args.vport : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["dbPwd"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(DatasourceCloud.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering DatasourceCloud resources.
 */
export interface DatasourceCloudState {
    /**
     * Charset.
     */
    charset?: pulumi.Input<string>;
    /**
     * Cluster id.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Third-party datasource identification, this parameter can be ignored.
     */
    dataOrigin?: pulumi.Input<string>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    dataOriginDatasourceId?: pulumi.Input<string>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    dataOriginProjectId?: pulumi.Input<string>;
    /**
     * Database name.
     */
    dbName?: pulumi.Input<string>;
    /**
     * Password.
     */
    dbPwd?: pulumi.Input<string>;
    /**
     * `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
     */
    dbType?: pulumi.Input<string>;
    /**
     * User name.
     */
    dbUser?: pulumi.Input<string>;
    /**
     * Extended parameters.
     */
    extraParam?: pulumi.Input<string>;
    /**
     * Project id.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Region identifier.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Service type, Own or Cloud.
     */
    serviceType?: pulumi.Input<inputs.Bi.DatasourceCloudServiceType>;
    /**
     * Datasource name in BI.
     */
    sourceName?: pulumi.Input<string>;
    /**
     * Unified vpc identification.
     */
    uniqVpcId?: pulumi.Input<string>;
    /**
     * Public cloud intranet ip.
     */
    vip?: pulumi.Input<string>;
    /**
     * Vpc identification.
     */
    vpcId?: pulumi.Input<string>;
    /**
     * Public cloud intranet port.
     */
    vport?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a DatasourceCloud resource.
 */
export interface DatasourceCloudArgs {
    /**
     * Charset.
     */
    charset: pulumi.Input<string>;
    /**
     * Cluster id.
     */
    clusterId?: pulumi.Input<string>;
    /**
     * Third-party datasource identification, this parameter can be ignored.
     */
    dataOrigin?: pulumi.Input<string>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    dataOriginDatasourceId?: pulumi.Input<string>;
    /**
     * Third-party datasource project id, this parameter can be ignored.
     */
    dataOriginProjectId?: pulumi.Input<string>;
    /**
     * Database name.
     */
    dbName: pulumi.Input<string>;
    /**
     * Password.
     */
    dbPwd: pulumi.Input<string>;
    /**
     * `MYSQL`, `TDSQL-C_MYSQL`, `TDSQL_MYSQL`, `MSSQL`, `POSTGRESQL`, `MARIADB`.
     */
    dbType: pulumi.Input<string>;
    /**
     * User name.
     */
    dbUser: pulumi.Input<string>;
    /**
     * Extended parameters.
     */
    extraParam?: pulumi.Input<string>;
    /**
     * Project id.
     */
    projectId: pulumi.Input<string>;
    /**
     * Region identifier.
     */
    regionId?: pulumi.Input<string>;
    /**
     * Service type, Own or Cloud.
     */
    serviceType: pulumi.Input<inputs.Bi.DatasourceCloudServiceType>;
    /**
     * Datasource name in BI.
     */
    sourceName: pulumi.Input<string>;
    /**
     * Unified vpc identification.
     */
    uniqVpcId?: pulumi.Input<string>;
    /**
     * Public cloud intranet ip.
     */
    vip?: pulumi.Input<string>;
    /**
     * Vpc identification.
     */
    vpcId: pulumi.Input<string>;
    /**
     * Public cloud intranet port.
     */
    vport?: pulumi.Input<string>;
}
