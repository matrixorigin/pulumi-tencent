// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class AccelerationDomain extends pulumi.CustomResource {
    /**
     * Get an existing AccelerationDomain resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: AccelerationDomainState, opts?: pulumi.CustomResourceOptions): AccelerationDomain {
        return new AccelerationDomain(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/accelerationDomain:AccelerationDomain';

    /**
     * Returns true if the given object is an instance of AccelerationDomain.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is AccelerationDomain {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === AccelerationDomain.__pulumiType;
    }

    /**
     * CNAME address.
     */
    public /*out*/ readonly cname!: pulumi.Output<string>;
    /**
     * Accelerated domain name.
     */
    public readonly domainName!: pulumi.Output<string>;
    /**
     * Details of the origin.
     */
    public readonly originInfo!: pulumi.Output<outputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    public readonly status!: pulumi.Output<string | undefined>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a AccelerationDomain resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: AccelerationDomainArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: AccelerationDomainArgs | AccelerationDomainState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as AccelerationDomainState | undefined;
            resourceInputs["cname"] = state ? state.cname : undefined;
            resourceInputs["domainName"] = state ? state.domainName : undefined;
            resourceInputs["originInfo"] = state ? state.originInfo : undefined;
            resourceInputs["status"] = state ? state.status : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as AccelerationDomainArgs | undefined;
            if ((!args || args.domainName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'domainName'");
            }
            if ((!args || args.originInfo === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originInfo'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["domainName"] = args ? args.domainName : undefined;
            resourceInputs["originInfo"] = args ? args.originInfo : undefined;
            resourceInputs["status"] = args ? args.status : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["cname"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(AccelerationDomain.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering AccelerationDomain resources.
 */
export interface AccelerationDomainState {
    /**
     * CNAME address.
     */
    cname?: pulumi.Input<string>;
    /**
     * Accelerated domain name.
     */
    domainName?: pulumi.Input<string>;
    /**
     * Details of the origin.
     */
    originInfo?: pulumi.Input<inputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a AccelerationDomain resource.
 */
export interface AccelerationDomainArgs {
    /**
     * Accelerated domain name.
     */
    domainName: pulumi.Input<string>;
    /**
     * Details of the origin.
     */
    originInfo: pulumi.Input<inputs.Teo.AccelerationDomainOriginInfo>;
    /**
     * Accelerated domain name status, the values are: `online`: enabled; `offline`: disabled.
     */
    status?: pulumi.Input<string>;
    /**
     * ID of the site related with the accelerated domain name.
     */
    zoneId: pulumi.Input<string>;
}
