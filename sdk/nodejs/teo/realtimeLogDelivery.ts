// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export class RealtimeLogDelivery extends pulumi.CustomResource {
    /**
     * Get an existing RealtimeLogDelivery resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: RealtimeLogDeliveryState, opts?: pulumi.CustomResourceOptions): RealtimeLogDelivery {
        return new RealtimeLogDelivery(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'tencentcloud:Teo/realtimeLogDelivery:RealtimeLogDelivery';

    /**
     * Returns true if the given object is an instance of RealtimeLogDelivery.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is RealtimeLogDelivery {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === RealtimeLogDelivery.__pulumiType;
    }

    /**
     * Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
     * China).
     */
    public readonly area!: pulumi.Output<string>;
    /**
     * CLS configuration information. This parameter is required when TaskType is cls.
     */
    public readonly cls!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryCls>;
    /**
     * Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
     * custom_endpoint.
     */
    public readonly customEndpoint!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryCustomEndpoint>;
    /**
     * The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
     * headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
     */
    public readonly customFields!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryCustomField[]>;
    /**
     * The filter condition for log delivery. If it is not filled, all logs will be delivered.
     */
    public readonly deliveryConditions!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryDeliveryCondition[]>;
    /**
     * The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
     * to keep the original configuration. Not required when creating.
     */
    public readonly deliveryStatus!: pulumi.Output<string>;
    /**
     * List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
     * Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
     * sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
     * `https://cloud.tencent.com/document/api/1552/86336`.
     */
    public readonly entityLists!: pulumi.Output<string[]>;
    /**
     * A list of preset fields for delivery.
     */
    public readonly fields!: pulumi.Output<string[]>;
    /**
     * The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
     * follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
     * is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
     * LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
     * LogFormat.
     */
    public readonly logFormat!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryLogFormat>;
    /**
     * Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
     * `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
     * `web-bot`: Bot management log.
     */
    public readonly logType!: pulumi.Output<string>;
    /**
     * Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
     */
    public readonly s3!: pulumi.Output<outputs.Teo.RealtimeLogDeliveryS3>;
    /**
     * The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
     * is 60.5%. Leaving it blank means the sampling ratio is 100%.
     */
    public readonly sample!: pulumi.Output<number>;
    /**
     * Real-time log delivery task ID.
     */
    public /*out*/ readonly taskId!: pulumi.Output<string>;
    /**
     * The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
     * length is 200 characters.
     */
    public readonly taskName!: pulumi.Output<string>;
    /**
     * The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
     * to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
     */
    public readonly taskType!: pulumi.Output<string>;
    /**
     * ID of the site.
     */
    public readonly zoneId!: pulumi.Output<string>;

    /**
     * Create a RealtimeLogDelivery resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: RealtimeLogDeliveryArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: RealtimeLogDeliveryArgs | RealtimeLogDeliveryState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as RealtimeLogDeliveryState | undefined;
            resourceInputs["area"] = state ? state.area : undefined;
            resourceInputs["cls"] = state ? state.cls : undefined;
            resourceInputs["customEndpoint"] = state ? state.customEndpoint : undefined;
            resourceInputs["customFields"] = state ? state.customFields : undefined;
            resourceInputs["deliveryConditions"] = state ? state.deliveryConditions : undefined;
            resourceInputs["deliveryStatus"] = state ? state.deliveryStatus : undefined;
            resourceInputs["entityLists"] = state ? state.entityLists : undefined;
            resourceInputs["fields"] = state ? state.fields : undefined;
            resourceInputs["logFormat"] = state ? state.logFormat : undefined;
            resourceInputs["logType"] = state ? state.logType : undefined;
            resourceInputs["s3"] = state ? state.s3 : undefined;
            resourceInputs["sample"] = state ? state.sample : undefined;
            resourceInputs["taskId"] = state ? state.taskId : undefined;
            resourceInputs["taskName"] = state ? state.taskName : undefined;
            resourceInputs["taskType"] = state ? state.taskType : undefined;
            resourceInputs["zoneId"] = state ? state.zoneId : undefined;
        } else {
            const args = argsOrState as RealtimeLogDeliveryArgs | undefined;
            if ((!args || args.area === undefined) && !opts.urn) {
                throw new Error("Missing required property 'area'");
            }
            if ((!args || args.entityLists === undefined) && !opts.urn) {
                throw new Error("Missing required property 'entityLists'");
            }
            if ((!args || args.fields === undefined) && !opts.urn) {
                throw new Error("Missing required property 'fields'");
            }
            if ((!args || args.logType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'logType'");
            }
            if ((!args || args.sample === undefined) && !opts.urn) {
                throw new Error("Missing required property 'sample'");
            }
            if ((!args || args.taskName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'taskName'");
            }
            if ((!args || args.taskType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'taskType'");
            }
            if ((!args || args.zoneId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'zoneId'");
            }
            resourceInputs["area"] = args ? args.area : undefined;
            resourceInputs["cls"] = args ? args.cls : undefined;
            resourceInputs["customEndpoint"] = args ? args.customEndpoint : undefined;
            resourceInputs["customFields"] = args ? args.customFields : undefined;
            resourceInputs["deliveryConditions"] = args ? args.deliveryConditions : undefined;
            resourceInputs["deliveryStatus"] = args ? args.deliveryStatus : undefined;
            resourceInputs["entityLists"] = args ? args.entityLists : undefined;
            resourceInputs["fields"] = args ? args.fields : undefined;
            resourceInputs["logFormat"] = args ? args.logFormat : undefined;
            resourceInputs["logType"] = args ? args.logType : undefined;
            resourceInputs["s3"] = args ? args.s3 : undefined;
            resourceInputs["sample"] = args ? args.sample : undefined;
            resourceInputs["taskName"] = args ? args.taskName : undefined;
            resourceInputs["taskType"] = args ? args.taskType : undefined;
            resourceInputs["zoneId"] = args ? args.zoneId : undefined;
            resourceInputs["taskId"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(RealtimeLogDelivery.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering RealtimeLogDelivery resources.
 */
export interface RealtimeLogDeliveryState {
    /**
     * Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
     * China).
     */
    area?: pulumi.Input<string>;
    /**
     * CLS configuration information. This parameter is required when TaskType is cls.
     */
    cls?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryCls>;
    /**
     * Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
     * custom_endpoint.
     */
    customEndpoint?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryCustomEndpoint>;
    /**
     * The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
     * headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
     */
    customFields?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryCustomField>[]>;
    /**
     * The filter condition for log delivery. If it is not filled, all logs will be delivered.
     */
    deliveryConditions?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryDeliveryCondition>[]>;
    /**
     * The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
     * to keep the original configuration. Not required when creating.
     */
    deliveryStatus?: pulumi.Input<string>;
    /**
     * List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
     * Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
     * sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
     * `https://cloud.tencent.com/document/api/1552/86336`.
     */
    entityLists?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of preset fields for delivery.
     */
    fields?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
     * follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
     * is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
     * LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
     * LogFormat.
     */
    logFormat?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryLogFormat>;
    /**
     * Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
     * `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
     * `web-bot`: Bot management log.
     */
    logType?: pulumi.Input<string>;
    /**
     * Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
     */
    s3?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryS3>;
    /**
     * The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
     * is 60.5%. Leaving it blank means the sampling ratio is 100%.
     */
    sample?: pulumi.Input<number>;
    /**
     * Real-time log delivery task ID.
     */
    taskId?: pulumi.Input<string>;
    /**
     * The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
     * length is 200 characters.
     */
    taskName?: pulumi.Input<string>;
    /**
     * The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
     * to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
     */
    taskType?: pulumi.Input<string>;
    /**
     * ID of the site.
     */
    zoneId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a RealtimeLogDelivery resource.
 */
export interface RealtimeLogDeliveryArgs {
    /**
     * Data delivery area, possible values are: `mainland`: within mainland China; `overseas`: worldwide (excluding mainland
     * China).
     */
    area: pulumi.Input<string>;
    /**
     * CLS configuration information. This parameter is required when TaskType is cls.
     */
    cls?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryCls>;
    /**
     * Customize the configuration information of the HTTP service. This parameter is required when TaskType is set to
     * custom_endpoint.
     */
    customEndpoint?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryCustomEndpoint>;
    /**
     * The list of custom fields delivered supports extracting specified field values from HTTP request headers, response
     * headers, and cookies. Custom field names cannot be repeated and cannot exceed 200 fields.
     */
    customFields?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryCustomField>[]>;
    /**
     * The filter condition for log delivery. If it is not filled, all logs will be delivered.
     */
    deliveryConditions?: pulumi.Input<pulumi.Input<inputs.Teo.RealtimeLogDeliveryDeliveryCondition>[]>;
    /**
     * The status of the real-time log delivery task. The values are: `enabled`: enabled; `disabled`: disabled. Leave it blank
     * to keep the original configuration. Not required when creating.
     */
    deliveryStatus?: pulumi.Input<string>;
    /**
     * List of entities (seven-layer domain names or four-layer proxy instances) corresponding to real-time log delivery tasks.
     * Example values are as follows: Seven-layer domain name: `domain.example.com`; four-layer proxy instance:
     * sid-2s69eb5wcms7. For values, refer to: `https://cloud.tencent.com/document/api/1552/80690`,
     * `https://cloud.tencent.com/document/api/1552/86336`.
     */
    entityLists: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * A list of preset fields for delivery.
     */
    fields: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * The output format of log delivery. If it is not filled, it means the default format. The default format logic is as
     * follows: when TaskType is `custom_endpoint`, the default format is an array of multiple JSON objects, each JSON object
     * is a log; when TaskType is `s3`, the default format is JSON Lines; in particular, when TaskType is `cls`, the value of
     * LogFormat.FormatType can only be json, and other parameters in LogFormat will be ignored. It is recommended not to pass
     * LogFormat.
     */
    logFormat?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryLogFormat>;
    /**
     * Data delivery type, the values are: `domain`: site acceleration log; `application`: four-layer proxy log;
     * `web-rateLiming`: rate limit and CC attack protection log; `web-attack`: managed rule log; `web-rule`: custom rule log;
     * `web-bot`: Bot management log.
     */
    logType: pulumi.Input<string>;
    /**
     * Configuration information of AWS S3 compatible storage bucket. This parameter is required when TaskType is s3.
     */
    s3?: pulumi.Input<inputs.Teo.RealtimeLogDeliveryS3>;
    /**
     * The sampling ratio is in thousandths, with a value range of 1-1000. For example, filling in 605 means the sampling ratio
     * is 60.5%. Leaving it blank means the sampling ratio is 100%.
     */
    sample: pulumi.Input<number>;
    /**
     * The name of the real-time log delivery task. The format is a combination of numbers, English, -, and _. The maximum
     * length is 200 characters.
     */
    taskName: pulumi.Input<string>;
    /**
     * The real-time log delivery task type. The possible values are: `cls`: push to Tencent Cloud CLS; `custom_endpoint`: push
     * to a custom HTTP(S) address; `s3`: push to an AWS S3 compatible storage bucket address.
     */
    taskType: pulumi.Input<string>;
    /**
     * ID of the site.
     */
    zoneId: pulumi.Input<string>;
}
