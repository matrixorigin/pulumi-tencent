// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

export function getPublicIpv6s(args?: GetPublicIpv6sArgs, opts?: pulumi.InvokeOptions): Promise<GetPublicIpv6sResult> {
    args = args || {};

    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("tencentcloud:Elastic/getPublicIpv6s:getPublicIpv6s", {
        "filters": args.filters,
        "ipv6AddressIds": args.ipv6AddressIds,
        "resultOutputFile": args.resultOutputFile,
        "traditional": args.traditional,
    }, opts);
}

/**
 * A collection of arguments for invoking getPublicIpv6s.
 */
export interface GetPublicIpv6sArgs {
    filters?: inputs.Elastic.GetPublicIpv6sFilter[];
    ipv6AddressIds?: string[];
    resultOutputFile?: string;
    traditional?: boolean;
}

/**
 * A collection of values returned by getPublicIpv6s.
 */
export interface GetPublicIpv6sResult {
    readonly addressSets: outputs.Elastic.GetPublicIpv6sAddressSet[];
    readonly filters?: outputs.Elastic.GetPublicIpv6sFilter[];
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly ipv6AddressIds?: string[];
    readonly resultOutputFile?: string;
    readonly traditional?: boolean;
}
export function getPublicIpv6sOutput(args?: GetPublicIpv6sOutputArgs, opts?: pulumi.InvokeOptions): pulumi.Output<GetPublicIpv6sResult> {
    return pulumi.output(args).apply((a: any) => getPublicIpv6s(a, opts))
}

/**
 * A collection of arguments for invoking getPublicIpv6s.
 */
export interface GetPublicIpv6sOutputArgs {
    filters?: pulumi.Input<pulumi.Input<inputs.Elastic.GetPublicIpv6sFilterArgs>[]>;
    ipv6AddressIds?: pulumi.Input<pulumi.Input<string>[]>;
    resultOutputFile?: pulumi.Input<string>;
    traditional?: pulumi.Input<boolean>;
}
