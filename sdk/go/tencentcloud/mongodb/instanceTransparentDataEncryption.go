// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mongodb

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type InstanceTransparentDataEncryption struct {
	pulumi.CustomResourceState

	// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
	// version is not currently supported.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
	// the key and this key will be beyond the control of Terraform.
	KeyId pulumi.StringPtrOutput `pulumi:"keyId"`
	// List of bound keys.
	KeyInfoLists InstanceTransparentDataEncryptionKeyInfoListArrayOutput `pulumi:"keyInfoLists"`
	// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
	KmsRegion pulumi.StringOutput `pulumi:"kmsRegion"`
	// Represents whether transparent encryption is turned on. Valid values: - close: Not opened; - open: It has been opened.
	TransparentDataEncryptionStatus pulumi.StringOutput `pulumi:"transparentDataEncryptionStatus"`
}

// NewInstanceTransparentDataEncryption registers a new resource with the given unique name, arguments, and options.
func NewInstanceTransparentDataEncryption(ctx *pulumi.Context,
	name string, args *InstanceTransparentDataEncryptionArgs, opts ...pulumi.ResourceOption) (*InstanceTransparentDataEncryption, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	if args.KmsRegion == nil {
		return nil, errors.New("invalid value for required argument 'KmsRegion'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource InstanceTransparentDataEncryption
	err := ctx.RegisterResource("tencentcloud:Mongodb/instanceTransparentDataEncryption:InstanceTransparentDataEncryption", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetInstanceTransparentDataEncryption gets an existing InstanceTransparentDataEncryption resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetInstanceTransparentDataEncryption(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *InstanceTransparentDataEncryptionState, opts ...pulumi.ResourceOption) (*InstanceTransparentDataEncryption, error) {
	var resource InstanceTransparentDataEncryption
	err := ctx.ReadResource("tencentcloud:Mongodb/instanceTransparentDataEncryption:InstanceTransparentDataEncryption", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering InstanceTransparentDataEncryption resources.
type instanceTransparentDataEncryptionState struct {
	// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
	// version is not currently supported.
	InstanceId *string `pulumi:"instanceId"`
	// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
	// the key and this key will be beyond the control of Terraform.
	KeyId *string `pulumi:"keyId"`
	// List of bound keys.
	KeyInfoLists []InstanceTransparentDataEncryptionKeyInfoList `pulumi:"keyInfoLists"`
	// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
	KmsRegion *string `pulumi:"kmsRegion"`
	// Represents whether transparent encryption is turned on. Valid values: - close: Not opened; - open: It has been opened.
	TransparentDataEncryptionStatus *string `pulumi:"transparentDataEncryptionStatus"`
}

type InstanceTransparentDataEncryptionState struct {
	// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
	// version is not currently supported.
	InstanceId pulumi.StringPtrInput
	// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
	// the key and this key will be beyond the control of Terraform.
	KeyId pulumi.StringPtrInput
	// List of bound keys.
	KeyInfoLists InstanceTransparentDataEncryptionKeyInfoListArrayInput
	// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
	KmsRegion pulumi.StringPtrInput
	// Represents whether transparent encryption is turned on. Valid values: - close: Not opened; - open: It has been opened.
	TransparentDataEncryptionStatus pulumi.StringPtrInput
}

func (InstanceTransparentDataEncryptionState) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTransparentDataEncryptionState)(nil)).Elem()
}

type instanceTransparentDataEncryptionArgs struct {
	// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
	// version is not currently supported.
	InstanceId string `pulumi:"instanceId"`
	// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
	// the key and this key will be beyond the control of Terraform.
	KeyId *string `pulumi:"keyId"`
	// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
	KmsRegion string `pulumi:"kmsRegion"`
}

// The set of arguments for constructing a InstanceTransparentDataEncryption resource.
type InstanceTransparentDataEncryptionArgs struct {
	// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
	// version is not currently supported.
	InstanceId pulumi.StringInput
	// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
	// the key and this key will be beyond the control of Terraform.
	KeyId pulumi.StringPtrInput
	// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
	KmsRegion pulumi.StringInput
}

func (InstanceTransparentDataEncryptionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*instanceTransparentDataEncryptionArgs)(nil)).Elem()
}

type InstanceTransparentDataEncryptionInput interface {
	pulumi.Input

	ToInstanceTransparentDataEncryptionOutput() InstanceTransparentDataEncryptionOutput
	ToInstanceTransparentDataEncryptionOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionOutput
}

func (*InstanceTransparentDataEncryption) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTransparentDataEncryption)(nil)).Elem()
}

func (i *InstanceTransparentDataEncryption) ToInstanceTransparentDataEncryptionOutput() InstanceTransparentDataEncryptionOutput {
	return i.ToInstanceTransparentDataEncryptionOutputWithContext(context.Background())
}

func (i *InstanceTransparentDataEncryption) ToInstanceTransparentDataEncryptionOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTransparentDataEncryptionOutput)
}

// InstanceTransparentDataEncryptionArrayInput is an input type that accepts InstanceTransparentDataEncryptionArray and InstanceTransparentDataEncryptionArrayOutput values.
// You can construct a concrete instance of `InstanceTransparentDataEncryptionArrayInput` via:
//
//	InstanceTransparentDataEncryptionArray{ InstanceTransparentDataEncryptionArgs{...} }
type InstanceTransparentDataEncryptionArrayInput interface {
	pulumi.Input

	ToInstanceTransparentDataEncryptionArrayOutput() InstanceTransparentDataEncryptionArrayOutput
	ToInstanceTransparentDataEncryptionArrayOutputWithContext(context.Context) InstanceTransparentDataEncryptionArrayOutput
}

type InstanceTransparentDataEncryptionArray []InstanceTransparentDataEncryptionInput

func (InstanceTransparentDataEncryptionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceTransparentDataEncryption)(nil)).Elem()
}

func (i InstanceTransparentDataEncryptionArray) ToInstanceTransparentDataEncryptionArrayOutput() InstanceTransparentDataEncryptionArrayOutput {
	return i.ToInstanceTransparentDataEncryptionArrayOutputWithContext(context.Background())
}

func (i InstanceTransparentDataEncryptionArray) ToInstanceTransparentDataEncryptionArrayOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTransparentDataEncryptionArrayOutput)
}

// InstanceTransparentDataEncryptionMapInput is an input type that accepts InstanceTransparentDataEncryptionMap and InstanceTransparentDataEncryptionMapOutput values.
// You can construct a concrete instance of `InstanceTransparentDataEncryptionMapInput` via:
//
//	InstanceTransparentDataEncryptionMap{ "key": InstanceTransparentDataEncryptionArgs{...} }
type InstanceTransparentDataEncryptionMapInput interface {
	pulumi.Input

	ToInstanceTransparentDataEncryptionMapOutput() InstanceTransparentDataEncryptionMapOutput
	ToInstanceTransparentDataEncryptionMapOutputWithContext(context.Context) InstanceTransparentDataEncryptionMapOutput
}

type InstanceTransparentDataEncryptionMap map[string]InstanceTransparentDataEncryptionInput

func (InstanceTransparentDataEncryptionMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceTransparentDataEncryption)(nil)).Elem()
}

func (i InstanceTransparentDataEncryptionMap) ToInstanceTransparentDataEncryptionMapOutput() InstanceTransparentDataEncryptionMapOutput {
	return i.ToInstanceTransparentDataEncryptionMapOutputWithContext(context.Background())
}

func (i InstanceTransparentDataEncryptionMap) ToInstanceTransparentDataEncryptionMapOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTransparentDataEncryptionMapOutput)
}

type InstanceTransparentDataEncryptionOutput struct{ *pulumi.OutputState }

func (InstanceTransparentDataEncryptionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceTransparentDataEncryption)(nil)).Elem()
}

func (o InstanceTransparentDataEncryptionOutput) ToInstanceTransparentDataEncryptionOutput() InstanceTransparentDataEncryptionOutput {
	return o
}

func (o InstanceTransparentDataEncryptionOutput) ToInstanceTransparentDataEncryptionOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionOutput {
	return o
}

// Instance ID, for example: cmgo-p8vn ***. Currently supported general versions include: 4.4 and 5.0, but the cloud disk
// version is not currently supported.
func (o InstanceTransparentDataEncryptionOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceTransparentDataEncryption) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// Key ID. If this parameter is not set and the specific key ID is not specified, Tencent Cloud will automatically generate
// the key and this key will be beyond the control of Terraform.
func (o InstanceTransparentDataEncryptionOutput) KeyId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceTransparentDataEncryption) pulumi.StringPtrOutput { return v.KeyId }).(pulumi.StringPtrOutput)
}

// List of bound keys.
func (o InstanceTransparentDataEncryptionOutput) KeyInfoLists() InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
	return o.ApplyT(func(v *InstanceTransparentDataEncryption) InstanceTransparentDataEncryptionKeyInfoListArrayOutput {
		return v.KeyInfoLists
	}).(InstanceTransparentDataEncryptionKeyInfoListArrayOutput)
}

// The region where the Key Management Service (KMS) serves, such as ap-shanghai.
func (o InstanceTransparentDataEncryptionOutput) KmsRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceTransparentDataEncryption) pulumi.StringOutput { return v.KmsRegion }).(pulumi.StringOutput)
}

// Represents whether transparent encryption is turned on. Valid values: - close: Not opened; - open: It has been opened.
func (o InstanceTransparentDataEncryptionOutput) TransparentDataEncryptionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v *InstanceTransparentDataEncryption) pulumi.StringOutput {
		return v.TransparentDataEncryptionStatus
	}).(pulumi.StringOutput)
}

type InstanceTransparentDataEncryptionArrayOutput struct{ *pulumi.OutputState }

func (InstanceTransparentDataEncryptionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*InstanceTransparentDataEncryption)(nil)).Elem()
}

func (o InstanceTransparentDataEncryptionArrayOutput) ToInstanceTransparentDataEncryptionArrayOutput() InstanceTransparentDataEncryptionArrayOutput {
	return o
}

func (o InstanceTransparentDataEncryptionArrayOutput) ToInstanceTransparentDataEncryptionArrayOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionArrayOutput {
	return o
}

func (o InstanceTransparentDataEncryptionArrayOutput) Index(i pulumi.IntInput) InstanceTransparentDataEncryptionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *InstanceTransparentDataEncryption {
		return vs[0].([]*InstanceTransparentDataEncryption)[vs[1].(int)]
	}).(InstanceTransparentDataEncryptionOutput)
}

type InstanceTransparentDataEncryptionMapOutput struct{ *pulumi.OutputState }

func (InstanceTransparentDataEncryptionMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*InstanceTransparentDataEncryption)(nil)).Elem()
}

func (o InstanceTransparentDataEncryptionMapOutput) ToInstanceTransparentDataEncryptionMapOutput() InstanceTransparentDataEncryptionMapOutput {
	return o
}

func (o InstanceTransparentDataEncryptionMapOutput) ToInstanceTransparentDataEncryptionMapOutputWithContext(ctx context.Context) InstanceTransparentDataEncryptionMapOutput {
	return o
}

func (o InstanceTransparentDataEncryptionMapOutput) MapIndex(k pulumi.StringInput) InstanceTransparentDataEncryptionOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *InstanceTransparentDataEncryption {
		return vs[0].(map[string]*InstanceTransparentDataEncryption)[vs[1].(string)]
	}).(InstanceTransparentDataEncryptionOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransparentDataEncryptionInput)(nil)).Elem(), &InstanceTransparentDataEncryption{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransparentDataEncryptionArrayInput)(nil)).Elem(), InstanceTransparentDataEncryptionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTransparentDataEncryptionMapInput)(nil)).Elem(), InstanceTransparentDataEncryptionMap{})
	pulumi.RegisterOutputType(InstanceTransparentDataEncryptionOutput{})
	pulumi.RegisterOutputType(InstanceTransparentDataEncryptionArrayOutput{})
	pulumi.RegisterOutputType(InstanceTransparentDataEncryptionMapOutput{})
}
