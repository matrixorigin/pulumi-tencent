// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ccn

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupRouteTableInputPolicies(ctx *pulumi.Context, args *LookupRouteTableInputPoliciesArgs, opts ...pulumi.InvokeOption) (*LookupRouteTableInputPoliciesResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupRouteTableInputPoliciesResult
	err := ctx.Invoke("tencentcloud:Ccn/getRouteTableInputPolicies:getRouteTableInputPolicies", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getRouteTableInputPolicies.
type LookupRouteTableInputPoliciesArgs struct {
	CcnId            string  `pulumi:"ccnId"`
	PolicyVersion    *int    `pulumi:"policyVersion"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	RouteTableId     string  `pulumi:"routeTableId"`
}

// A collection of values returned by getRouteTableInputPolicies.
type LookupRouteTableInputPoliciesResult struct {
	CcnId string `pulumi:"ccnId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                                `pulumi:"id"`
	PolicySets       []GetRouteTableInputPoliciesPolicySet `pulumi:"policySets"`
	PolicyVersion    *int                                  `pulumi:"policyVersion"`
	ResultOutputFile *string                               `pulumi:"resultOutputFile"`
	RouteTableId     string                                `pulumi:"routeTableId"`
}

func LookupRouteTableInputPoliciesOutput(ctx *pulumi.Context, args LookupRouteTableInputPoliciesOutputArgs, opts ...pulumi.InvokeOption) LookupRouteTableInputPoliciesResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupRouteTableInputPoliciesResult, error) {
			args := v.(LookupRouteTableInputPoliciesArgs)
			r, err := LookupRouteTableInputPolicies(ctx, &args, opts...)
			var s LookupRouteTableInputPoliciesResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupRouteTableInputPoliciesResultOutput)
}

// A collection of arguments for invoking getRouteTableInputPolicies.
type LookupRouteTableInputPoliciesOutputArgs struct {
	CcnId            pulumi.StringInput    `pulumi:"ccnId"`
	PolicyVersion    pulumi.IntPtrInput    `pulumi:"policyVersion"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	RouteTableId     pulumi.StringInput    `pulumi:"routeTableId"`
}

func (LookupRouteTableInputPoliciesOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteTableInputPoliciesArgs)(nil)).Elem()
}

// A collection of values returned by getRouteTableInputPolicies.
type LookupRouteTableInputPoliciesResultOutput struct{ *pulumi.OutputState }

func (LookupRouteTableInputPoliciesResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupRouteTableInputPoliciesResult)(nil)).Elem()
}

func (o LookupRouteTableInputPoliciesResultOutput) ToLookupRouteTableInputPoliciesResultOutput() LookupRouteTableInputPoliciesResultOutput {
	return o
}

func (o LookupRouteTableInputPoliciesResultOutput) ToLookupRouteTableInputPoliciesResultOutputWithContext(ctx context.Context) LookupRouteTableInputPoliciesResultOutput {
	return o
}

func (o LookupRouteTableInputPoliciesResultOutput) CcnId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) string { return v.CcnId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupRouteTableInputPoliciesResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupRouteTableInputPoliciesResultOutput) PolicySets() GetRouteTableInputPoliciesPolicySetArrayOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) []GetRouteTableInputPoliciesPolicySet { return v.PolicySets }).(GetRouteTableInputPoliciesPolicySetArrayOutput)
}

func (o LookupRouteTableInputPoliciesResultOutput) PolicyVersion() pulumi.IntPtrOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) *int { return v.PolicyVersion }).(pulumi.IntPtrOutput)
}

func (o LookupRouteTableInputPoliciesResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupRouteTableInputPoliciesResultOutput) RouteTableId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupRouteTableInputPoliciesResult) string { return v.RouteTableId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupRouteTableInputPoliciesResultOutput{})
}
