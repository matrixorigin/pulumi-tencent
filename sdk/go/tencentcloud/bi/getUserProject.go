// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package bi

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetUserProject(ctx *pulumi.Context, args *GetUserProjectArgs, opts ...pulumi.InvokeOption) (*GetUserProjectResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetUserProjectResult
	err := ctx.Invoke("tencentcloud:Bi/getUserProject:getUserProject", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUserProject.
type GetUserProjectArgs struct {
	AllPage          *bool   `pulumi:"allPage"`
	ProjectId        *int    `pulumi:"projectId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getUserProject.
type GetUserProjectResult struct {
	AllPage *bool `pulumi:"allPage"`
	// The provider-assigned unique ID for this managed resource.
	Id               string               `pulumi:"id"`
	Lists            []GetUserProjectList `pulumi:"lists"`
	ProjectId        *int                 `pulumi:"projectId"`
	ResultOutputFile *string              `pulumi:"resultOutputFile"`
}

func GetUserProjectOutput(ctx *pulumi.Context, args GetUserProjectOutputArgs, opts ...pulumi.InvokeOption) GetUserProjectResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetUserProjectResult, error) {
			args := v.(GetUserProjectArgs)
			r, err := GetUserProject(ctx, &args, opts...)
			var s GetUserProjectResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetUserProjectResultOutput)
}

// A collection of arguments for invoking getUserProject.
type GetUserProjectOutputArgs struct {
	AllPage          pulumi.BoolPtrInput   `pulumi:"allPage"`
	ProjectId        pulumi.IntPtrInput    `pulumi:"projectId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetUserProjectOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserProjectArgs)(nil)).Elem()
}

// A collection of values returned by getUserProject.
type GetUserProjectResultOutput struct{ *pulumi.OutputState }

func (GetUserProjectResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserProjectResult)(nil)).Elem()
}

func (o GetUserProjectResultOutput) ToGetUserProjectResultOutput() GetUserProjectResultOutput {
	return o
}

func (o GetUserProjectResultOutput) ToGetUserProjectResultOutputWithContext(ctx context.Context) GetUserProjectResultOutput {
	return o
}

func (o GetUserProjectResultOutput) AllPage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetUserProjectResult) *bool { return v.AllPage }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetUserProjectResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserProjectResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserProjectResultOutput) Lists() GetUserProjectListArrayOutput {
	return o.ApplyT(func(v GetUserProjectResult) []GetUserProjectList { return v.Lists }).(GetUserProjectListArrayOutput)
}

func (o GetUserProjectResultOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetUserProjectResult) *int { return v.ProjectId }).(pulumi.IntPtrOutput)
}

func (o GetUserProjectResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetUserProjectResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetUserProjectResultOutput{})
}
