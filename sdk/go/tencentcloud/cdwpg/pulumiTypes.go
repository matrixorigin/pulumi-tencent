// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdwpg

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceChargeProperties struct {
	ChargeType *string `pulumi:"chargeType"`
	RenewFlag  int     `pulumi:"renewFlag"`
	TimeSpan   int     `pulumi:"timeSpan"`
	TimeUnit   string  `pulumi:"timeUnit"`
}

// InstanceChargePropertiesInput is an input type that accepts InstanceChargePropertiesArgs and InstanceChargePropertiesOutput values.
// You can construct a concrete instance of `InstanceChargePropertiesInput` via:
//
//	InstanceChargePropertiesArgs{...}
type InstanceChargePropertiesInput interface {
	pulumi.Input

	ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput
	ToInstanceChargePropertiesOutputWithContext(context.Context) InstanceChargePropertiesOutput
}

type InstanceChargePropertiesArgs struct {
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	RenewFlag  pulumi.IntInput       `pulumi:"renewFlag"`
	TimeSpan   pulumi.IntInput       `pulumi:"timeSpan"`
	TimeUnit   pulumi.StringInput    `pulumi:"timeUnit"`
}

func (InstanceChargePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceChargeProperties)(nil)).Elem()
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput {
	return i.ToInstanceChargePropertiesOutputWithContext(context.Background())
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesOutputWithContext(ctx context.Context) InstanceChargePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesOutput)
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return i.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesOutput).ToInstanceChargePropertiesPtrOutputWithContext(ctx)
}

// InstanceChargePropertiesPtrInput is an input type that accepts InstanceChargePropertiesArgs, InstanceChargePropertiesPtr and InstanceChargePropertiesPtrOutput values.
// You can construct a concrete instance of `InstanceChargePropertiesPtrInput` via:
//
//	        InstanceChargePropertiesArgs{...}
//
//	or:
//
//	        nil
type InstanceChargePropertiesPtrInput interface {
	pulumi.Input

	ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput
	ToInstanceChargePropertiesPtrOutputWithContext(context.Context) InstanceChargePropertiesPtrOutput
}

type instanceChargePropertiesPtrType InstanceChargePropertiesArgs

func InstanceChargePropertiesPtr(v *InstanceChargePropertiesArgs) InstanceChargePropertiesPtrInput {
	return (*instanceChargePropertiesPtrType)(v)
}

func (*instanceChargePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceChargeProperties)(nil)).Elem()
}

func (i *instanceChargePropertiesPtrType) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return i.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (i *instanceChargePropertiesPtrType) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesPtrOutput)
}

type InstanceChargePropertiesOutput struct{ *pulumi.OutputState }

func (InstanceChargePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceChargeProperties)(nil)).Elem()
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput {
	return o
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesOutputWithContext(ctx context.Context) InstanceChargePropertiesOutput {
	return o
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return o.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceChargeProperties) *InstanceChargeProperties {
		return &v
	}).(InstanceChargePropertiesPtrOutput)
}

func (o InstanceChargePropertiesOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceChargeProperties) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

func (o InstanceChargePropertiesOutput) RenewFlag() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceChargeProperties) int { return v.RenewFlag }).(pulumi.IntOutput)
}

func (o InstanceChargePropertiesOutput) TimeSpan() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceChargeProperties) int { return v.TimeSpan }).(pulumi.IntOutput)
}

func (o InstanceChargePropertiesOutput) TimeUnit() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceChargeProperties) string { return v.TimeUnit }).(pulumi.StringOutput)
}

type InstanceChargePropertiesPtrOutput struct{ *pulumi.OutputState }

func (InstanceChargePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceChargeProperties)(nil)).Elem()
}

func (o InstanceChargePropertiesPtrOutput) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return o
}

func (o InstanceChargePropertiesPtrOutput) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return o
}

func (o InstanceChargePropertiesPtrOutput) Elem() InstanceChargePropertiesOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) InstanceChargeProperties {
		if v != nil {
			return *v
		}
		var ret InstanceChargeProperties
		return ret
	}).(InstanceChargePropertiesOutput)
}

func (o InstanceChargePropertiesPtrOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChargeType
	}).(pulumi.StringPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) RenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.RenewFlag
	}).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) TimeSpan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *int {
		if v == nil {
			return nil
		}
		return &v.TimeSpan
	}).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *string {
		if v == nil {
			return nil
		}
		return &v.TimeUnit
	}).(pulumi.StringPtrOutput)
}

type InstanceResource struct {
	Count    int                      `pulumi:"count"`
	DiskSpec InstanceResourceDiskSpec `pulumi:"diskSpec"`
	SpecName string                   `pulumi:"specName"`
	Type     string                   `pulumi:"type"`
}

// InstanceResourceInput is an input type that accepts InstanceResourceArgs and InstanceResourceOutput values.
// You can construct a concrete instance of `InstanceResourceInput` via:
//
//	InstanceResourceArgs{...}
type InstanceResourceInput interface {
	pulumi.Input

	ToInstanceResourceOutput() InstanceResourceOutput
	ToInstanceResourceOutputWithContext(context.Context) InstanceResourceOutput
}

type InstanceResourceArgs struct {
	Count    pulumi.IntInput               `pulumi:"count"`
	DiskSpec InstanceResourceDiskSpecInput `pulumi:"diskSpec"`
	SpecName pulumi.StringInput            `pulumi:"specName"`
	Type     pulumi.StringInput            `pulumi:"type"`
}

func (InstanceResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceResource)(nil)).Elem()
}

func (i InstanceResourceArgs) ToInstanceResourceOutput() InstanceResourceOutput {
	return i.ToInstanceResourceOutputWithContext(context.Background())
}

func (i InstanceResourceArgs) ToInstanceResourceOutputWithContext(ctx context.Context) InstanceResourceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceResourceOutput)
}

// InstanceResourceArrayInput is an input type that accepts InstanceResourceArray and InstanceResourceArrayOutput values.
// You can construct a concrete instance of `InstanceResourceArrayInput` via:
//
//	InstanceResourceArray{ InstanceResourceArgs{...} }
type InstanceResourceArrayInput interface {
	pulumi.Input

	ToInstanceResourceArrayOutput() InstanceResourceArrayOutput
	ToInstanceResourceArrayOutputWithContext(context.Context) InstanceResourceArrayOutput
}

type InstanceResourceArray []InstanceResourceInput

func (InstanceResourceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceResource)(nil)).Elem()
}

func (i InstanceResourceArray) ToInstanceResourceArrayOutput() InstanceResourceArrayOutput {
	return i.ToInstanceResourceArrayOutputWithContext(context.Background())
}

func (i InstanceResourceArray) ToInstanceResourceArrayOutputWithContext(ctx context.Context) InstanceResourceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceResourceArrayOutput)
}

type InstanceResourceOutput struct{ *pulumi.OutputState }

func (InstanceResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceResource)(nil)).Elem()
}

func (o InstanceResourceOutput) ToInstanceResourceOutput() InstanceResourceOutput {
	return o
}

func (o InstanceResourceOutput) ToInstanceResourceOutputWithContext(ctx context.Context) InstanceResourceOutput {
	return o
}

func (o InstanceResourceOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceResource) int { return v.Count }).(pulumi.IntOutput)
}

func (o InstanceResourceOutput) DiskSpec() InstanceResourceDiskSpecOutput {
	return o.ApplyT(func(v InstanceResource) InstanceResourceDiskSpec { return v.DiskSpec }).(InstanceResourceDiskSpecOutput)
}

func (o InstanceResourceOutput) SpecName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceResource) string { return v.SpecName }).(pulumi.StringOutput)
}

func (o InstanceResourceOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceResource) string { return v.Type }).(pulumi.StringOutput)
}

type InstanceResourceArrayOutput struct{ *pulumi.OutputState }

func (InstanceResourceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceResource)(nil)).Elem()
}

func (o InstanceResourceArrayOutput) ToInstanceResourceArrayOutput() InstanceResourceArrayOutput {
	return o
}

func (o InstanceResourceArrayOutput) ToInstanceResourceArrayOutputWithContext(ctx context.Context) InstanceResourceArrayOutput {
	return o
}

func (o InstanceResourceArrayOutput) Index(i pulumi.IntInput) InstanceResourceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceResource {
		return vs[0].([]InstanceResource)[vs[1].(int)]
	}).(InstanceResourceOutput)
}

type InstanceResourceDiskSpec struct {
	DiskCount int    `pulumi:"diskCount"`
	DiskSize  int    `pulumi:"diskSize"`
	DiskType  string `pulumi:"diskType"`
}

// InstanceResourceDiskSpecInput is an input type that accepts InstanceResourceDiskSpecArgs and InstanceResourceDiskSpecOutput values.
// You can construct a concrete instance of `InstanceResourceDiskSpecInput` via:
//
//	InstanceResourceDiskSpecArgs{...}
type InstanceResourceDiskSpecInput interface {
	pulumi.Input

	ToInstanceResourceDiskSpecOutput() InstanceResourceDiskSpecOutput
	ToInstanceResourceDiskSpecOutputWithContext(context.Context) InstanceResourceDiskSpecOutput
}

type InstanceResourceDiskSpecArgs struct {
	DiskCount pulumi.IntInput    `pulumi:"diskCount"`
	DiskSize  pulumi.IntInput    `pulumi:"diskSize"`
	DiskType  pulumi.StringInput `pulumi:"diskType"`
}

func (InstanceResourceDiskSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceResourceDiskSpec)(nil)).Elem()
}

func (i InstanceResourceDiskSpecArgs) ToInstanceResourceDiskSpecOutput() InstanceResourceDiskSpecOutput {
	return i.ToInstanceResourceDiskSpecOutputWithContext(context.Background())
}

func (i InstanceResourceDiskSpecArgs) ToInstanceResourceDiskSpecOutputWithContext(ctx context.Context) InstanceResourceDiskSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceResourceDiskSpecOutput)
}

type InstanceResourceDiskSpecOutput struct{ *pulumi.OutputState }

func (InstanceResourceDiskSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceResourceDiskSpec)(nil)).Elem()
}

func (o InstanceResourceDiskSpecOutput) ToInstanceResourceDiskSpecOutput() InstanceResourceDiskSpecOutput {
	return o
}

func (o InstanceResourceDiskSpecOutput) ToInstanceResourceDiskSpecOutputWithContext(ctx context.Context) InstanceResourceDiskSpecOutput {
	return o
}

func (o InstanceResourceDiskSpecOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceResourceDiskSpec) int { return v.DiskCount }).(pulumi.IntOutput)
}

func (o InstanceResourceDiskSpecOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceResourceDiskSpec) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o InstanceResourceDiskSpecOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceResourceDiskSpec) string { return v.DiskType }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceChargePropertiesInput)(nil)).Elem(), InstanceChargePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceChargePropertiesPtrInput)(nil)).Elem(), InstanceChargePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceResourceInput)(nil)).Elem(), InstanceResourceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceResourceArrayInput)(nil)).Elem(), InstanceResourceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceResourceDiskSpecInput)(nil)).Elem(), InstanceResourceDiskSpecArgs{})
	pulumi.RegisterOutputType(InstanceChargePropertiesOutput{})
	pulumi.RegisterOutputType(InstanceChargePropertiesPtrOutput{})
	pulumi.RegisterOutputType(InstanceResourceOutput{})
	pulumi.RegisterOutputType(InstanceResourceArrayOutput{})
	pulumi.RegisterOutputType(InstanceResourceDiskSpecOutput{})
}
