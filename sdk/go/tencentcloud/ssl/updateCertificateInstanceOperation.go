// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type UpdateCertificateInstanceOperation struct {
	pulumi.CustomResourceState

	// Update new certificate ID.
	CertificateId pulumi.StringOutput `pulumi:"certificateId"`
	// Update the original certificate ID.
	OldCertificateId pulumi.StringOutput `pulumi:"oldCertificateId"`
	// The resource type that needs to be deployed. The parameter value is optional:
	// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
	ResourceTypes pulumi.StringArrayOutput `pulumi:"resourceTypes"`
	// List of regions where cloud resources need to be deployed.
	ResourceTypesRegions UpdateCertificateInstanceOperationResourceTypesRegionArrayOutput `pulumi:"resourceTypesRegions"`
}

// NewUpdateCertificateInstanceOperation registers a new resource with the given unique name, arguments, and options.
func NewUpdateCertificateInstanceOperation(ctx *pulumi.Context,
	name string, args *UpdateCertificateInstanceOperationArgs, opts ...pulumi.ResourceOption) (*UpdateCertificateInstanceOperation, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.CertificateId == nil {
		return nil, errors.New("invalid value for required argument 'CertificateId'")
	}
	if args.OldCertificateId == nil {
		return nil, errors.New("invalid value for required argument 'OldCertificateId'")
	}
	if args.ResourceTypes == nil {
		return nil, errors.New("invalid value for required argument 'ResourceTypes'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource UpdateCertificateInstanceOperation
	err := ctx.RegisterResource("tencentcloud:Ssl/updateCertificateInstanceOperation:UpdateCertificateInstanceOperation", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetUpdateCertificateInstanceOperation gets an existing UpdateCertificateInstanceOperation resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetUpdateCertificateInstanceOperation(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *UpdateCertificateInstanceOperationState, opts ...pulumi.ResourceOption) (*UpdateCertificateInstanceOperation, error) {
	var resource UpdateCertificateInstanceOperation
	err := ctx.ReadResource("tencentcloud:Ssl/updateCertificateInstanceOperation:UpdateCertificateInstanceOperation", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering UpdateCertificateInstanceOperation resources.
type updateCertificateInstanceOperationState struct {
	// Update new certificate ID.
	CertificateId *string `pulumi:"certificateId"`
	// Update the original certificate ID.
	OldCertificateId *string `pulumi:"oldCertificateId"`
	// The resource type that needs to be deployed. The parameter value is optional:
	// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
	ResourceTypes []string `pulumi:"resourceTypes"`
	// List of regions where cloud resources need to be deployed.
	ResourceTypesRegions []UpdateCertificateInstanceOperationResourceTypesRegion `pulumi:"resourceTypesRegions"`
}

type UpdateCertificateInstanceOperationState struct {
	// Update new certificate ID.
	CertificateId pulumi.StringPtrInput
	// Update the original certificate ID.
	OldCertificateId pulumi.StringPtrInput
	// The resource type that needs to be deployed. The parameter value is optional:
	// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
	ResourceTypes pulumi.StringArrayInput
	// List of regions where cloud resources need to be deployed.
	ResourceTypesRegions UpdateCertificateInstanceOperationResourceTypesRegionArrayInput
}

func (UpdateCertificateInstanceOperationState) ElementType() reflect.Type {
	return reflect.TypeOf((*updateCertificateInstanceOperationState)(nil)).Elem()
}

type updateCertificateInstanceOperationArgs struct {
	// Update new certificate ID.
	CertificateId string `pulumi:"certificateId"`
	// Update the original certificate ID.
	OldCertificateId string `pulumi:"oldCertificateId"`
	// The resource type that needs to be deployed. The parameter value is optional:
	// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
	ResourceTypes []string `pulumi:"resourceTypes"`
	// List of regions where cloud resources need to be deployed.
	ResourceTypesRegions []UpdateCertificateInstanceOperationResourceTypesRegion `pulumi:"resourceTypesRegions"`
}

// The set of arguments for constructing a UpdateCertificateInstanceOperation resource.
type UpdateCertificateInstanceOperationArgs struct {
	// Update new certificate ID.
	CertificateId pulumi.StringInput
	// Update the original certificate ID.
	OldCertificateId pulumi.StringInput
	// The resource type that needs to be deployed. The parameter value is optional:
	// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
	ResourceTypes pulumi.StringArrayInput
	// List of regions where cloud resources need to be deployed.
	ResourceTypesRegions UpdateCertificateInstanceOperationResourceTypesRegionArrayInput
}

func (UpdateCertificateInstanceOperationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*updateCertificateInstanceOperationArgs)(nil)).Elem()
}

type UpdateCertificateInstanceOperationInput interface {
	pulumi.Input

	ToUpdateCertificateInstanceOperationOutput() UpdateCertificateInstanceOperationOutput
	ToUpdateCertificateInstanceOperationOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationOutput
}

func (*UpdateCertificateInstanceOperation) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (i *UpdateCertificateInstanceOperation) ToUpdateCertificateInstanceOperationOutput() UpdateCertificateInstanceOperationOutput {
	return i.ToUpdateCertificateInstanceOperationOutputWithContext(context.Background())
}

func (i *UpdateCertificateInstanceOperation) ToUpdateCertificateInstanceOperationOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateInstanceOperationOutput)
}

// UpdateCertificateInstanceOperationArrayInput is an input type that accepts UpdateCertificateInstanceOperationArray and UpdateCertificateInstanceOperationArrayOutput values.
// You can construct a concrete instance of `UpdateCertificateInstanceOperationArrayInput` via:
//
//	UpdateCertificateInstanceOperationArray{ UpdateCertificateInstanceOperationArgs{...} }
type UpdateCertificateInstanceOperationArrayInput interface {
	pulumi.Input

	ToUpdateCertificateInstanceOperationArrayOutput() UpdateCertificateInstanceOperationArrayOutput
	ToUpdateCertificateInstanceOperationArrayOutputWithContext(context.Context) UpdateCertificateInstanceOperationArrayOutput
}

type UpdateCertificateInstanceOperationArray []UpdateCertificateInstanceOperationInput

func (UpdateCertificateInstanceOperationArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (i UpdateCertificateInstanceOperationArray) ToUpdateCertificateInstanceOperationArrayOutput() UpdateCertificateInstanceOperationArrayOutput {
	return i.ToUpdateCertificateInstanceOperationArrayOutputWithContext(context.Background())
}

func (i UpdateCertificateInstanceOperationArray) ToUpdateCertificateInstanceOperationArrayOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateInstanceOperationArrayOutput)
}

// UpdateCertificateInstanceOperationMapInput is an input type that accepts UpdateCertificateInstanceOperationMap and UpdateCertificateInstanceOperationMapOutput values.
// You can construct a concrete instance of `UpdateCertificateInstanceOperationMapInput` via:
//
//	UpdateCertificateInstanceOperationMap{ "key": UpdateCertificateInstanceOperationArgs{...} }
type UpdateCertificateInstanceOperationMapInput interface {
	pulumi.Input

	ToUpdateCertificateInstanceOperationMapOutput() UpdateCertificateInstanceOperationMapOutput
	ToUpdateCertificateInstanceOperationMapOutputWithContext(context.Context) UpdateCertificateInstanceOperationMapOutput
}

type UpdateCertificateInstanceOperationMap map[string]UpdateCertificateInstanceOperationInput

func (UpdateCertificateInstanceOperationMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (i UpdateCertificateInstanceOperationMap) ToUpdateCertificateInstanceOperationMapOutput() UpdateCertificateInstanceOperationMapOutput {
	return i.ToUpdateCertificateInstanceOperationMapOutputWithContext(context.Background())
}

func (i UpdateCertificateInstanceOperationMap) ToUpdateCertificateInstanceOperationMapOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(UpdateCertificateInstanceOperationMapOutput)
}

type UpdateCertificateInstanceOperationOutput struct{ *pulumi.OutputState }

func (UpdateCertificateInstanceOperationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (o UpdateCertificateInstanceOperationOutput) ToUpdateCertificateInstanceOperationOutput() UpdateCertificateInstanceOperationOutput {
	return o
}

func (o UpdateCertificateInstanceOperationOutput) ToUpdateCertificateInstanceOperationOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationOutput {
	return o
}

// Update new certificate ID.
func (o UpdateCertificateInstanceOperationOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *UpdateCertificateInstanceOperation) pulumi.StringOutput { return v.CertificateId }).(pulumi.StringOutput)
}

// Update the original certificate ID.
func (o UpdateCertificateInstanceOperationOutput) OldCertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v *UpdateCertificateInstanceOperation) pulumi.StringOutput { return v.OldCertificateId }).(pulumi.StringOutput)
}

// The resource type that needs to be deployed. The parameter value is optional:
// clb,cdn,waf,live,ddos,teo,apigateway,vod,tke,tcb.
func (o UpdateCertificateInstanceOperationOutput) ResourceTypes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *UpdateCertificateInstanceOperation) pulumi.StringArrayOutput { return v.ResourceTypes }).(pulumi.StringArrayOutput)
}

// List of regions where cloud resources need to be deployed.
func (o UpdateCertificateInstanceOperationOutput) ResourceTypesRegions() UpdateCertificateInstanceOperationResourceTypesRegionArrayOutput {
	return o.ApplyT(func(v *UpdateCertificateInstanceOperation) UpdateCertificateInstanceOperationResourceTypesRegionArrayOutput {
		return v.ResourceTypesRegions
	}).(UpdateCertificateInstanceOperationResourceTypesRegionArrayOutput)
}

type UpdateCertificateInstanceOperationArrayOutput struct{ *pulumi.OutputState }

func (UpdateCertificateInstanceOperationArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (o UpdateCertificateInstanceOperationArrayOutput) ToUpdateCertificateInstanceOperationArrayOutput() UpdateCertificateInstanceOperationArrayOutput {
	return o
}

func (o UpdateCertificateInstanceOperationArrayOutput) ToUpdateCertificateInstanceOperationArrayOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationArrayOutput {
	return o
}

func (o UpdateCertificateInstanceOperationArrayOutput) Index(i pulumi.IntInput) UpdateCertificateInstanceOperationOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *UpdateCertificateInstanceOperation {
		return vs[0].([]*UpdateCertificateInstanceOperation)[vs[1].(int)]
	}).(UpdateCertificateInstanceOperationOutput)
}

type UpdateCertificateInstanceOperationMapOutput struct{ *pulumi.OutputState }

func (UpdateCertificateInstanceOperationMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*UpdateCertificateInstanceOperation)(nil)).Elem()
}

func (o UpdateCertificateInstanceOperationMapOutput) ToUpdateCertificateInstanceOperationMapOutput() UpdateCertificateInstanceOperationMapOutput {
	return o
}

func (o UpdateCertificateInstanceOperationMapOutput) ToUpdateCertificateInstanceOperationMapOutputWithContext(ctx context.Context) UpdateCertificateInstanceOperationMapOutput {
	return o
}

func (o UpdateCertificateInstanceOperationMapOutput) MapIndex(k pulumi.StringInput) UpdateCertificateInstanceOperationOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *UpdateCertificateInstanceOperation {
		return vs[0].(map[string]*UpdateCertificateInstanceOperation)[vs[1].(string)]
	}).(UpdateCertificateInstanceOperationOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateInstanceOperationInput)(nil)).Elem(), &UpdateCertificateInstanceOperation{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateInstanceOperationArrayInput)(nil)).Elem(), UpdateCertificateInstanceOperationArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*UpdateCertificateInstanceOperationMapInput)(nil)).Elem(), UpdateCertificateInstanceOperationMap{})
	pulumi.RegisterOutputType(UpdateCertificateInstanceOperationOutput{})
	pulumi.RegisterOutputType(UpdateCertificateInstanceOperationArrayOutput{})
	pulumi.RegisterOutputType(UpdateCertificateInstanceOperationMapOutput{})
}
