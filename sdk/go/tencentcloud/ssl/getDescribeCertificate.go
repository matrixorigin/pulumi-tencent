// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package ssl

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupDescribeCertificate(ctx *pulumi.Context, args *LookupDescribeCertificateArgs, opts ...pulumi.InvokeOption) (*LookupDescribeCertificateResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupDescribeCertificateResult
	err := ctx.Invoke("tencentcloud:Ssl/getDescribeCertificate:getDescribeCertificate", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDescribeCertificate.
type LookupDescribeCertificateArgs struct {
	CertificateId    string  `pulumi:"certificateId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getDescribeCertificate.
type LookupDescribeCertificateResult struct {
	CertificateId string `pulumi:"certificateId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                         `pulumi:"id"`
	ResultOutputFile *string                        `pulumi:"resultOutputFile"`
	Results          []GetDescribeCertificateResult `pulumi:"results"`
}

func LookupDescribeCertificateOutput(ctx *pulumi.Context, args LookupDescribeCertificateOutputArgs, opts ...pulumi.InvokeOption) LookupDescribeCertificateResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupDescribeCertificateResult, error) {
			args := v.(LookupDescribeCertificateArgs)
			r, err := LookupDescribeCertificate(ctx, &args, opts...)
			var s LookupDescribeCertificateResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupDescribeCertificateResultOutput)
}

// A collection of arguments for invoking getDescribeCertificate.
type LookupDescribeCertificateOutputArgs struct {
	CertificateId    pulumi.StringInput    `pulumi:"certificateId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (LookupDescribeCertificateOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDescribeCertificateArgs)(nil)).Elem()
}

// A collection of values returned by getDescribeCertificate.
type LookupDescribeCertificateResultOutput struct{ *pulumi.OutputState }

func (LookupDescribeCertificateResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupDescribeCertificateResult)(nil)).Elem()
}

func (o LookupDescribeCertificateResultOutput) ToLookupDescribeCertificateResultOutput() LookupDescribeCertificateResultOutput {
	return o
}

func (o LookupDescribeCertificateResultOutput) ToLookupDescribeCertificateResultOutputWithContext(ctx context.Context) LookupDescribeCertificateResultOutput {
	return o
}

func (o LookupDescribeCertificateResultOutput) CertificateId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDescribeCertificateResult) string { return v.CertificateId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupDescribeCertificateResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupDescribeCertificateResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupDescribeCertificateResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupDescribeCertificateResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupDescribeCertificateResultOutput) Results() GetDescribeCertificateResultArrayOutput {
	return o.ApplyT(func(v LookupDescribeCertificateResult) []GetDescribeCertificateResult { return v.Results }).(GetDescribeCertificateResultArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupDescribeCertificateResultOutput{})
}
