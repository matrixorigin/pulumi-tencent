// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package enis

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type GetInstanceEni struct {
	CdcId          string                 `pulumi:"cdcId"`
	CreateTime     string                 `pulumi:"createTime"`
	Description    string                 `pulumi:"description"`
	Id             string                 `pulumi:"id"`
	InstanceId     string                 `pulumi:"instanceId"`
	Ipv4s          []GetInstanceEniIpv4   `pulumi:"ipv4s"`
	Ipv6s          []GetInstanceEniIpv6   `pulumi:"ipv6s"`
	Mac            string                 `pulumi:"mac"`
	Name           string                 `pulumi:"name"`
	Primary        bool                   `pulumi:"primary"`
	SecurityGroups []string               `pulumi:"securityGroups"`
	State          string                 `pulumi:"state"`
	SubnetId       string                 `pulumi:"subnetId"`
	Tags           map[string]interface{} `pulumi:"tags"`
	VpcId          string                 `pulumi:"vpcId"`
}

// GetInstanceEniInput is an input type that accepts GetInstanceEniArgs and GetInstanceEniOutput values.
// You can construct a concrete instance of `GetInstanceEniInput` via:
//
//	GetInstanceEniArgs{...}
type GetInstanceEniInput interface {
	pulumi.Input

	ToGetInstanceEniOutput() GetInstanceEniOutput
	ToGetInstanceEniOutputWithContext(context.Context) GetInstanceEniOutput
}

type GetInstanceEniArgs struct {
	CdcId          pulumi.StringInput           `pulumi:"cdcId"`
	CreateTime     pulumi.StringInput           `pulumi:"createTime"`
	Description    pulumi.StringInput           `pulumi:"description"`
	Id             pulumi.StringInput           `pulumi:"id"`
	InstanceId     pulumi.StringInput           `pulumi:"instanceId"`
	Ipv4s          GetInstanceEniIpv4ArrayInput `pulumi:"ipv4s"`
	Ipv6s          GetInstanceEniIpv6ArrayInput `pulumi:"ipv6s"`
	Mac            pulumi.StringInput           `pulumi:"mac"`
	Name           pulumi.StringInput           `pulumi:"name"`
	Primary        pulumi.BoolInput             `pulumi:"primary"`
	SecurityGroups pulumi.StringArrayInput      `pulumi:"securityGroups"`
	State          pulumi.StringInput           `pulumi:"state"`
	SubnetId       pulumi.StringInput           `pulumi:"subnetId"`
	Tags           pulumi.MapInput              `pulumi:"tags"`
	VpcId          pulumi.StringInput           `pulumi:"vpcId"`
}

func (GetInstanceEniArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEni)(nil)).Elem()
}

func (i GetInstanceEniArgs) ToGetInstanceEniOutput() GetInstanceEniOutput {
	return i.ToGetInstanceEniOutputWithContext(context.Background())
}

func (i GetInstanceEniArgs) ToGetInstanceEniOutputWithContext(ctx context.Context) GetInstanceEniOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniOutput)
}

// GetInstanceEniArrayInput is an input type that accepts GetInstanceEniArray and GetInstanceEniArrayOutput values.
// You can construct a concrete instance of `GetInstanceEniArrayInput` via:
//
//	GetInstanceEniArray{ GetInstanceEniArgs{...} }
type GetInstanceEniArrayInput interface {
	pulumi.Input

	ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput
	ToGetInstanceEniArrayOutputWithContext(context.Context) GetInstanceEniArrayOutput
}

type GetInstanceEniArray []GetInstanceEniInput

func (GetInstanceEniArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEni)(nil)).Elem()
}

func (i GetInstanceEniArray) ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput {
	return i.ToGetInstanceEniArrayOutputWithContext(context.Background())
}

func (i GetInstanceEniArray) ToGetInstanceEniArrayOutputWithContext(ctx context.Context) GetInstanceEniArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniArrayOutput)
}

type GetInstanceEniOutput struct{ *pulumi.OutputState }

func (GetInstanceEniOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEni)(nil)).Elem()
}

func (o GetInstanceEniOutput) ToGetInstanceEniOutput() GetInstanceEniOutput {
	return o
}

func (o GetInstanceEniOutput) ToGetInstanceEniOutputWithContext(ctx context.Context) GetInstanceEniOutput {
	return o
}

func (o GetInstanceEniOutput) CdcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.CdcId }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Ipv4s() GetInstanceEniIpv4ArrayOutput {
	return o.ApplyT(func(v GetInstanceEni) []GetInstanceEniIpv4 { return v.Ipv4s }).(GetInstanceEniIpv4ArrayOutput)
}

func (o GetInstanceEniOutput) Ipv6s() GetInstanceEniIpv6ArrayOutput {
	return o.ApplyT(func(v GetInstanceEni) []GetInstanceEniIpv6 { return v.Ipv6s }).(GetInstanceEniIpv6ArrayOutput)
}

func (o GetInstanceEniOutput) Mac() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Mac }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEni) bool { return v.Primary }).(pulumi.BoolOutput)
}

func (o GetInstanceEniOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstanceEni) []string { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

func (o GetInstanceEniOutput) State() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.State }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetInstanceEniOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v GetInstanceEni) map[string]interface{} { return v.Tags }).(pulumi.MapOutput)
}

func (o GetInstanceEniOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEni) string { return v.VpcId }).(pulumi.StringOutput)
}

type GetInstanceEniArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEniArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEni)(nil)).Elem()
}

func (o GetInstanceEniArrayOutput) ToGetInstanceEniArrayOutput() GetInstanceEniArrayOutput {
	return o
}

func (o GetInstanceEniArrayOutput) ToGetInstanceEniArrayOutputWithContext(ctx context.Context) GetInstanceEniArrayOutput {
	return o
}

func (o GetInstanceEniArrayOutput) Index(i pulumi.IntInput) GetInstanceEniOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEni {
		return vs[0].([]GetInstanceEni)[vs[1].(int)]
	}).(GetInstanceEniOutput)
}

type GetInstanceEniIpv4 struct {
	Description string `pulumi:"description"`
	Ip          string `pulumi:"ip"`
	Primary     bool   `pulumi:"primary"`
}

// GetInstanceEniIpv4Input is an input type that accepts GetInstanceEniIpv4Args and GetInstanceEniIpv4Output values.
// You can construct a concrete instance of `GetInstanceEniIpv4Input` via:
//
//	GetInstanceEniIpv4Args{...}
type GetInstanceEniIpv4Input interface {
	pulumi.Input

	ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output
	ToGetInstanceEniIpv4OutputWithContext(context.Context) GetInstanceEniIpv4Output
}

type GetInstanceEniIpv4Args struct {
	Description pulumi.StringInput `pulumi:"description"`
	Ip          pulumi.StringInput `pulumi:"ip"`
	Primary     pulumi.BoolInput   `pulumi:"primary"`
}

func (GetInstanceEniIpv4Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv4)(nil)).Elem()
}

func (i GetInstanceEniIpv4Args) ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output {
	return i.ToGetInstanceEniIpv4OutputWithContext(context.Background())
}

func (i GetInstanceEniIpv4Args) ToGetInstanceEniIpv4OutputWithContext(ctx context.Context) GetInstanceEniIpv4Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv4Output)
}

// GetInstanceEniIpv4ArrayInput is an input type that accepts GetInstanceEniIpv4Array and GetInstanceEniIpv4ArrayOutput values.
// You can construct a concrete instance of `GetInstanceEniIpv4ArrayInput` via:
//
//	GetInstanceEniIpv4Array{ GetInstanceEniIpv4Args{...} }
type GetInstanceEniIpv4ArrayInput interface {
	pulumi.Input

	ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput
	ToGetInstanceEniIpv4ArrayOutputWithContext(context.Context) GetInstanceEniIpv4ArrayOutput
}

type GetInstanceEniIpv4Array []GetInstanceEniIpv4Input

func (GetInstanceEniIpv4Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv4)(nil)).Elem()
}

func (i GetInstanceEniIpv4Array) ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput {
	return i.ToGetInstanceEniIpv4ArrayOutputWithContext(context.Background())
}

func (i GetInstanceEniIpv4Array) ToGetInstanceEniIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv4ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv4ArrayOutput)
}

type GetInstanceEniIpv4Output struct{ *pulumi.OutputState }

func (GetInstanceEniIpv4Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv4)(nil)).Elem()
}

func (o GetInstanceEniIpv4Output) ToGetInstanceEniIpv4Output() GetInstanceEniIpv4Output {
	return o
}

func (o GetInstanceEniIpv4Output) ToGetInstanceEniIpv4OutputWithContext(ctx context.Context) GetInstanceEniIpv4Output {
	return o
}

func (o GetInstanceEniIpv4Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceEniIpv4Output) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) string { return v.Ip }).(pulumi.StringOutput)
}

func (o GetInstanceEniIpv4Output) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEniIpv4) bool { return v.Primary }).(pulumi.BoolOutput)
}

type GetInstanceEniIpv4ArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEniIpv4ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv4)(nil)).Elem()
}

func (o GetInstanceEniIpv4ArrayOutput) ToGetInstanceEniIpv4ArrayOutput() GetInstanceEniIpv4ArrayOutput {
	return o
}

func (o GetInstanceEniIpv4ArrayOutput) ToGetInstanceEniIpv4ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv4ArrayOutput {
	return o
}

func (o GetInstanceEniIpv4ArrayOutput) Index(i pulumi.IntInput) GetInstanceEniIpv4Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEniIpv4 {
		return vs[0].([]GetInstanceEniIpv4)[vs[1].(int)]
	}).(GetInstanceEniIpv4Output)
}

type GetInstanceEniIpv6 struct {
	Address        string `pulumi:"address"`
	AddressId      string `pulumi:"addressId"`
	Description    string `pulumi:"description"`
	IsWanIpBlocked bool   `pulumi:"isWanIpBlocked"`
	Primary        bool   `pulumi:"primary"`
}

// GetInstanceEniIpv6Input is an input type that accepts GetInstanceEniIpv6Args and GetInstanceEniIpv6Output values.
// You can construct a concrete instance of `GetInstanceEniIpv6Input` via:
//
//	GetInstanceEniIpv6Args{...}
type GetInstanceEniIpv6Input interface {
	pulumi.Input

	ToGetInstanceEniIpv6Output() GetInstanceEniIpv6Output
	ToGetInstanceEniIpv6OutputWithContext(context.Context) GetInstanceEniIpv6Output
}

type GetInstanceEniIpv6Args struct {
	Address        pulumi.StringInput `pulumi:"address"`
	AddressId      pulumi.StringInput `pulumi:"addressId"`
	Description    pulumi.StringInput `pulumi:"description"`
	IsWanIpBlocked pulumi.BoolInput   `pulumi:"isWanIpBlocked"`
	Primary        pulumi.BoolInput   `pulumi:"primary"`
}

func (GetInstanceEniIpv6Args) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv6)(nil)).Elem()
}

func (i GetInstanceEniIpv6Args) ToGetInstanceEniIpv6Output() GetInstanceEniIpv6Output {
	return i.ToGetInstanceEniIpv6OutputWithContext(context.Background())
}

func (i GetInstanceEniIpv6Args) ToGetInstanceEniIpv6OutputWithContext(ctx context.Context) GetInstanceEniIpv6Output {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv6Output)
}

// GetInstanceEniIpv6ArrayInput is an input type that accepts GetInstanceEniIpv6Array and GetInstanceEniIpv6ArrayOutput values.
// You can construct a concrete instance of `GetInstanceEniIpv6ArrayInput` via:
//
//	GetInstanceEniIpv6Array{ GetInstanceEniIpv6Args{...} }
type GetInstanceEniIpv6ArrayInput interface {
	pulumi.Input

	ToGetInstanceEniIpv6ArrayOutput() GetInstanceEniIpv6ArrayOutput
	ToGetInstanceEniIpv6ArrayOutputWithContext(context.Context) GetInstanceEniIpv6ArrayOutput
}

type GetInstanceEniIpv6Array []GetInstanceEniIpv6Input

func (GetInstanceEniIpv6Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv6)(nil)).Elem()
}

func (i GetInstanceEniIpv6Array) ToGetInstanceEniIpv6ArrayOutput() GetInstanceEniIpv6ArrayOutput {
	return i.ToGetInstanceEniIpv6ArrayOutputWithContext(context.Background())
}

func (i GetInstanceEniIpv6Array) ToGetInstanceEniIpv6ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv6ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceEniIpv6ArrayOutput)
}

type GetInstanceEniIpv6Output struct{ *pulumi.OutputState }

func (GetInstanceEniIpv6Output) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceEniIpv6)(nil)).Elem()
}

func (o GetInstanceEniIpv6Output) ToGetInstanceEniIpv6Output() GetInstanceEniIpv6Output {
	return o
}

func (o GetInstanceEniIpv6Output) ToGetInstanceEniIpv6OutputWithContext(ctx context.Context) GetInstanceEniIpv6Output {
	return o
}

func (o GetInstanceEniIpv6Output) Address() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv6) string { return v.Address }).(pulumi.StringOutput)
}

func (o GetInstanceEniIpv6Output) AddressId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv6) string { return v.AddressId }).(pulumi.StringOutput)
}

func (o GetInstanceEniIpv6Output) Description() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstanceEniIpv6) string { return v.Description }).(pulumi.StringOutput)
}

func (o GetInstanceEniIpv6Output) IsWanIpBlocked() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEniIpv6) bool { return v.IsWanIpBlocked }).(pulumi.BoolOutput)
}

func (o GetInstanceEniIpv6Output) Primary() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstanceEniIpv6) bool { return v.Primary }).(pulumi.BoolOutput)
}

type GetInstanceEniIpv6ArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceEniIpv6ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceEniIpv6)(nil)).Elem()
}

func (o GetInstanceEniIpv6ArrayOutput) ToGetInstanceEniIpv6ArrayOutput() GetInstanceEniIpv6ArrayOutput {
	return o
}

func (o GetInstanceEniIpv6ArrayOutput) ToGetInstanceEniIpv6ArrayOutputWithContext(ctx context.Context) GetInstanceEniIpv6ArrayOutput {
	return o
}

func (o GetInstanceEniIpv6ArrayOutput) Index(i pulumi.IntInput) GetInstanceEniIpv6Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceEniIpv6 {
		return vs[0].([]GetInstanceEniIpv6)[vs[1].(int)]
	}).(GetInstanceEniIpv6Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniInput)(nil)).Elem(), GetInstanceEniArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniArrayInput)(nil)).Elem(), GetInstanceEniArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv4Input)(nil)).Elem(), GetInstanceEniIpv4Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv4ArrayInput)(nil)).Elem(), GetInstanceEniIpv4Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv6Input)(nil)).Elem(), GetInstanceEniIpv6Args{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceEniIpv6ArrayInput)(nil)).Elem(), GetInstanceEniIpv6Array{})
	pulumi.RegisterOutputType(GetInstanceEniOutput{})
	pulumi.RegisterOutputType(GetInstanceEniArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEniIpv4Output{})
	pulumi.RegisterOutputType(GetInstanceEniIpv4ArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceEniIpv6Output{})
	pulumi.RegisterOutputType(GetInstanceEniIpv6ArrayOutput{})
}
