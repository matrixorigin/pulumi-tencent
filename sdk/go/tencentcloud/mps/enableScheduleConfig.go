// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mps

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnableScheduleConfig struct {
	pulumi.CustomResourceState

	// true: enable; false: disable.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// The scheme ID.
	ScheduleId pulumi.IntOutput `pulumi:"scheduleId"`
}

// NewEnableScheduleConfig registers a new resource with the given unique name, arguments, and options.
func NewEnableScheduleConfig(ctx *pulumi.Context,
	name string, args *EnableScheduleConfigArgs, opts ...pulumi.ResourceOption) (*EnableScheduleConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.ScheduleId == nil {
		return nil, errors.New("invalid value for required argument 'ScheduleId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnableScheduleConfig
	err := ctx.RegisterResource("tencentcloud:Mps/enableScheduleConfig:EnableScheduleConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnableScheduleConfig gets an existing EnableScheduleConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnableScheduleConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnableScheduleConfigState, opts ...pulumi.ResourceOption) (*EnableScheduleConfig, error) {
	var resource EnableScheduleConfig
	err := ctx.ReadResource("tencentcloud:Mps/enableScheduleConfig:EnableScheduleConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnableScheduleConfig resources.
type enableScheduleConfigState struct {
	// true: enable; false: disable.
	Enabled *bool `pulumi:"enabled"`
	// The scheme ID.
	ScheduleId *int `pulumi:"scheduleId"`
}

type EnableScheduleConfigState struct {
	// true: enable; false: disable.
	Enabled pulumi.BoolPtrInput
	// The scheme ID.
	ScheduleId pulumi.IntPtrInput
}

func (EnableScheduleConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*enableScheduleConfigState)(nil)).Elem()
}

type enableScheduleConfigArgs struct {
	// true: enable; false: disable.
	Enabled bool `pulumi:"enabled"`
	// The scheme ID.
	ScheduleId int `pulumi:"scheduleId"`
}

// The set of arguments for constructing a EnableScheduleConfig resource.
type EnableScheduleConfigArgs struct {
	// true: enable; false: disable.
	Enabled pulumi.BoolInput
	// The scheme ID.
	ScheduleId pulumi.IntInput
}

func (EnableScheduleConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enableScheduleConfigArgs)(nil)).Elem()
}

type EnableScheduleConfigInput interface {
	pulumi.Input

	ToEnableScheduleConfigOutput() EnableScheduleConfigOutput
	ToEnableScheduleConfigOutputWithContext(ctx context.Context) EnableScheduleConfigOutput
}

func (*EnableScheduleConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableScheduleConfig)(nil)).Elem()
}

func (i *EnableScheduleConfig) ToEnableScheduleConfigOutput() EnableScheduleConfigOutput {
	return i.ToEnableScheduleConfigOutputWithContext(context.Background())
}

func (i *EnableScheduleConfig) ToEnableScheduleConfigOutputWithContext(ctx context.Context) EnableScheduleConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableScheduleConfigOutput)
}

// EnableScheduleConfigArrayInput is an input type that accepts EnableScheduleConfigArray and EnableScheduleConfigArrayOutput values.
// You can construct a concrete instance of `EnableScheduleConfigArrayInput` via:
//
//	EnableScheduleConfigArray{ EnableScheduleConfigArgs{...} }
type EnableScheduleConfigArrayInput interface {
	pulumi.Input

	ToEnableScheduleConfigArrayOutput() EnableScheduleConfigArrayOutput
	ToEnableScheduleConfigArrayOutputWithContext(context.Context) EnableScheduleConfigArrayOutput
}

type EnableScheduleConfigArray []EnableScheduleConfigInput

func (EnableScheduleConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnableScheduleConfig)(nil)).Elem()
}

func (i EnableScheduleConfigArray) ToEnableScheduleConfigArrayOutput() EnableScheduleConfigArrayOutput {
	return i.ToEnableScheduleConfigArrayOutputWithContext(context.Background())
}

func (i EnableScheduleConfigArray) ToEnableScheduleConfigArrayOutputWithContext(ctx context.Context) EnableScheduleConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableScheduleConfigArrayOutput)
}

// EnableScheduleConfigMapInput is an input type that accepts EnableScheduleConfigMap and EnableScheduleConfigMapOutput values.
// You can construct a concrete instance of `EnableScheduleConfigMapInput` via:
//
//	EnableScheduleConfigMap{ "key": EnableScheduleConfigArgs{...} }
type EnableScheduleConfigMapInput interface {
	pulumi.Input

	ToEnableScheduleConfigMapOutput() EnableScheduleConfigMapOutput
	ToEnableScheduleConfigMapOutputWithContext(context.Context) EnableScheduleConfigMapOutput
}

type EnableScheduleConfigMap map[string]EnableScheduleConfigInput

func (EnableScheduleConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnableScheduleConfig)(nil)).Elem()
}

func (i EnableScheduleConfigMap) ToEnableScheduleConfigMapOutput() EnableScheduleConfigMapOutput {
	return i.ToEnableScheduleConfigMapOutputWithContext(context.Background())
}

func (i EnableScheduleConfigMap) ToEnableScheduleConfigMapOutputWithContext(ctx context.Context) EnableScheduleConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableScheduleConfigMapOutput)
}

type EnableScheduleConfigOutput struct{ *pulumi.OutputState }

func (EnableScheduleConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableScheduleConfig)(nil)).Elem()
}

func (o EnableScheduleConfigOutput) ToEnableScheduleConfigOutput() EnableScheduleConfigOutput {
	return o
}

func (o EnableScheduleConfigOutput) ToEnableScheduleConfigOutputWithContext(ctx context.Context) EnableScheduleConfigOutput {
	return o
}

// true: enable; false: disable.
func (o EnableScheduleConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *EnableScheduleConfig) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// The scheme ID.
func (o EnableScheduleConfigOutput) ScheduleId() pulumi.IntOutput {
	return o.ApplyT(func(v *EnableScheduleConfig) pulumi.IntOutput { return v.ScheduleId }).(pulumi.IntOutput)
}

type EnableScheduleConfigArrayOutput struct{ *pulumi.OutputState }

func (EnableScheduleConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnableScheduleConfig)(nil)).Elem()
}

func (o EnableScheduleConfigArrayOutput) ToEnableScheduleConfigArrayOutput() EnableScheduleConfigArrayOutput {
	return o
}

func (o EnableScheduleConfigArrayOutput) ToEnableScheduleConfigArrayOutputWithContext(ctx context.Context) EnableScheduleConfigArrayOutput {
	return o
}

func (o EnableScheduleConfigArrayOutput) Index(i pulumi.IntInput) EnableScheduleConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnableScheduleConfig {
		return vs[0].([]*EnableScheduleConfig)[vs[1].(int)]
	}).(EnableScheduleConfigOutput)
}

type EnableScheduleConfigMapOutput struct{ *pulumi.OutputState }

func (EnableScheduleConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnableScheduleConfig)(nil)).Elem()
}

func (o EnableScheduleConfigMapOutput) ToEnableScheduleConfigMapOutput() EnableScheduleConfigMapOutput {
	return o
}

func (o EnableScheduleConfigMapOutput) ToEnableScheduleConfigMapOutputWithContext(ctx context.Context) EnableScheduleConfigMapOutput {
	return o
}

func (o EnableScheduleConfigMapOutput) MapIndex(k pulumi.StringInput) EnableScheduleConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnableScheduleConfig {
		return vs[0].(map[string]*EnableScheduleConfig)[vs[1].(string)]
	}).(EnableScheduleConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnableScheduleConfigInput)(nil)).Elem(), &EnableScheduleConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnableScheduleConfigArrayInput)(nil)).Elem(), EnableScheduleConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnableScheduleConfigMapInput)(nil)).Elem(), EnableScheduleConfigMap{})
	pulumi.RegisterOutputType(EnableScheduleConfigOutput{})
	pulumi.RegisterOutputType(EnableScheduleConfigArrayOutput{})
	pulumi.RegisterOutputType(EnableScheduleConfigMapOutput{})
}
