// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mps

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type EnableWorkflowConfig struct {
	pulumi.CustomResourceState

	// true: enable; false: disable.
	Enabled pulumi.BoolOutput `pulumi:"enabled"`
	// Workflow ID.
	WorkflowId pulumi.IntOutput `pulumi:"workflowId"`
}

// NewEnableWorkflowConfig registers a new resource with the given unique name, arguments, and options.
func NewEnableWorkflowConfig(ctx *pulumi.Context,
	name string, args *EnableWorkflowConfigArgs, opts ...pulumi.ResourceOption) (*EnableWorkflowConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Enabled == nil {
		return nil, errors.New("invalid value for required argument 'Enabled'")
	}
	if args.WorkflowId == nil {
		return nil, errors.New("invalid value for required argument 'WorkflowId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource EnableWorkflowConfig
	err := ctx.RegisterResource("tencentcloud:Mps/enableWorkflowConfig:EnableWorkflowConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetEnableWorkflowConfig gets an existing EnableWorkflowConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetEnableWorkflowConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *EnableWorkflowConfigState, opts ...pulumi.ResourceOption) (*EnableWorkflowConfig, error) {
	var resource EnableWorkflowConfig
	err := ctx.ReadResource("tencentcloud:Mps/enableWorkflowConfig:EnableWorkflowConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering EnableWorkflowConfig resources.
type enableWorkflowConfigState struct {
	// true: enable; false: disable.
	Enabled *bool `pulumi:"enabled"`
	// Workflow ID.
	WorkflowId *int `pulumi:"workflowId"`
}

type EnableWorkflowConfigState struct {
	// true: enable; false: disable.
	Enabled pulumi.BoolPtrInput
	// Workflow ID.
	WorkflowId pulumi.IntPtrInput
}

func (EnableWorkflowConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*enableWorkflowConfigState)(nil)).Elem()
}

type enableWorkflowConfigArgs struct {
	// true: enable; false: disable.
	Enabled bool `pulumi:"enabled"`
	// Workflow ID.
	WorkflowId int `pulumi:"workflowId"`
}

// The set of arguments for constructing a EnableWorkflowConfig resource.
type EnableWorkflowConfigArgs struct {
	// true: enable; false: disable.
	Enabled pulumi.BoolInput
	// Workflow ID.
	WorkflowId pulumi.IntInput
}

func (EnableWorkflowConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*enableWorkflowConfigArgs)(nil)).Elem()
}

type EnableWorkflowConfigInput interface {
	pulumi.Input

	ToEnableWorkflowConfigOutput() EnableWorkflowConfigOutput
	ToEnableWorkflowConfigOutputWithContext(ctx context.Context) EnableWorkflowConfigOutput
}

func (*EnableWorkflowConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableWorkflowConfig)(nil)).Elem()
}

func (i *EnableWorkflowConfig) ToEnableWorkflowConfigOutput() EnableWorkflowConfigOutput {
	return i.ToEnableWorkflowConfigOutputWithContext(context.Background())
}

func (i *EnableWorkflowConfig) ToEnableWorkflowConfigOutputWithContext(ctx context.Context) EnableWorkflowConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableWorkflowConfigOutput)
}

// EnableWorkflowConfigArrayInput is an input type that accepts EnableWorkflowConfigArray and EnableWorkflowConfigArrayOutput values.
// You can construct a concrete instance of `EnableWorkflowConfigArrayInput` via:
//
//	EnableWorkflowConfigArray{ EnableWorkflowConfigArgs{...} }
type EnableWorkflowConfigArrayInput interface {
	pulumi.Input

	ToEnableWorkflowConfigArrayOutput() EnableWorkflowConfigArrayOutput
	ToEnableWorkflowConfigArrayOutputWithContext(context.Context) EnableWorkflowConfigArrayOutput
}

type EnableWorkflowConfigArray []EnableWorkflowConfigInput

func (EnableWorkflowConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnableWorkflowConfig)(nil)).Elem()
}

func (i EnableWorkflowConfigArray) ToEnableWorkflowConfigArrayOutput() EnableWorkflowConfigArrayOutput {
	return i.ToEnableWorkflowConfigArrayOutputWithContext(context.Background())
}

func (i EnableWorkflowConfigArray) ToEnableWorkflowConfigArrayOutputWithContext(ctx context.Context) EnableWorkflowConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableWorkflowConfigArrayOutput)
}

// EnableWorkflowConfigMapInput is an input type that accepts EnableWorkflowConfigMap and EnableWorkflowConfigMapOutput values.
// You can construct a concrete instance of `EnableWorkflowConfigMapInput` via:
//
//	EnableWorkflowConfigMap{ "key": EnableWorkflowConfigArgs{...} }
type EnableWorkflowConfigMapInput interface {
	pulumi.Input

	ToEnableWorkflowConfigMapOutput() EnableWorkflowConfigMapOutput
	ToEnableWorkflowConfigMapOutputWithContext(context.Context) EnableWorkflowConfigMapOutput
}

type EnableWorkflowConfigMap map[string]EnableWorkflowConfigInput

func (EnableWorkflowConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnableWorkflowConfig)(nil)).Elem()
}

func (i EnableWorkflowConfigMap) ToEnableWorkflowConfigMapOutput() EnableWorkflowConfigMapOutput {
	return i.ToEnableWorkflowConfigMapOutputWithContext(context.Background())
}

func (i EnableWorkflowConfigMap) ToEnableWorkflowConfigMapOutputWithContext(ctx context.Context) EnableWorkflowConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(EnableWorkflowConfigMapOutput)
}

type EnableWorkflowConfigOutput struct{ *pulumi.OutputState }

func (EnableWorkflowConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**EnableWorkflowConfig)(nil)).Elem()
}

func (o EnableWorkflowConfigOutput) ToEnableWorkflowConfigOutput() EnableWorkflowConfigOutput {
	return o
}

func (o EnableWorkflowConfigOutput) ToEnableWorkflowConfigOutputWithContext(ctx context.Context) EnableWorkflowConfigOutput {
	return o
}

// true: enable; false: disable.
func (o EnableWorkflowConfigOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v *EnableWorkflowConfig) pulumi.BoolOutput { return v.Enabled }).(pulumi.BoolOutput)
}

// Workflow ID.
func (o EnableWorkflowConfigOutput) WorkflowId() pulumi.IntOutput {
	return o.ApplyT(func(v *EnableWorkflowConfig) pulumi.IntOutput { return v.WorkflowId }).(pulumi.IntOutput)
}

type EnableWorkflowConfigArrayOutput struct{ *pulumi.OutputState }

func (EnableWorkflowConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*EnableWorkflowConfig)(nil)).Elem()
}

func (o EnableWorkflowConfigArrayOutput) ToEnableWorkflowConfigArrayOutput() EnableWorkflowConfigArrayOutput {
	return o
}

func (o EnableWorkflowConfigArrayOutput) ToEnableWorkflowConfigArrayOutputWithContext(ctx context.Context) EnableWorkflowConfigArrayOutput {
	return o
}

func (o EnableWorkflowConfigArrayOutput) Index(i pulumi.IntInput) EnableWorkflowConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *EnableWorkflowConfig {
		return vs[0].([]*EnableWorkflowConfig)[vs[1].(int)]
	}).(EnableWorkflowConfigOutput)
}

type EnableWorkflowConfigMapOutput struct{ *pulumi.OutputState }

func (EnableWorkflowConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*EnableWorkflowConfig)(nil)).Elem()
}

func (o EnableWorkflowConfigMapOutput) ToEnableWorkflowConfigMapOutput() EnableWorkflowConfigMapOutput {
	return o
}

func (o EnableWorkflowConfigMapOutput) ToEnableWorkflowConfigMapOutputWithContext(ctx context.Context) EnableWorkflowConfigMapOutput {
	return o
}

func (o EnableWorkflowConfigMapOutput) MapIndex(k pulumi.StringInput) EnableWorkflowConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *EnableWorkflowConfig {
		return vs[0].(map[string]*EnableWorkflowConfig)[vs[1].(string)]
	}).(EnableWorkflowConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*EnableWorkflowConfigInput)(nil)).Elem(), &EnableWorkflowConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnableWorkflowConfigArrayInput)(nil)).Elem(), EnableWorkflowConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*EnableWorkflowConfigMapInput)(nil)).Elem(), EnableWorkflowConfigMap{})
	pulumi.RegisterOutputType(EnableWorkflowConfigOutput{})
	pulumi.RegisterOutputType(EnableWorkflowConfigArrayOutput{})
	pulumi.RegisterOutputType(EnableWorkflowConfigMapOutput{})
}
