// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetSign(ctx *pulumi.Context, args *GetSignArgs, opts ...pulumi.InvokeOption) (*GetSignResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSignResult
	err := ctx.Invoke("tencentcloud:Rum/getSign:getSign", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSign.
type GetSignArgs struct {
	FileType         *int    `pulumi:"fileType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	Timeout          *int    `pulumi:"timeout"`
}

// A collection of values returned by getSign.
type GetSignResult struct {
	ExpiredTime int  `pulumi:"expiredTime"`
	FileType    *int `pulumi:"fileType"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	SecretId         string  `pulumi:"secretId"`
	SecretKey        string  `pulumi:"secretKey"`
	SessionToken     string  `pulumi:"sessionToken"`
	StartTime        int     `pulumi:"startTime"`
	Timeout          *int    `pulumi:"timeout"`
}

func GetSignOutput(ctx *pulumi.Context, args GetSignOutputArgs, opts ...pulumi.InvokeOption) GetSignResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetSignResult, error) {
			args := v.(GetSignArgs)
			r, err := GetSign(ctx, &args, opts...)
			var s GetSignResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetSignResultOutput)
}

// A collection of arguments for invoking getSign.
type GetSignOutputArgs struct {
	FileType         pulumi.IntPtrInput    `pulumi:"fileType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	Timeout          pulumi.IntPtrInput    `pulumi:"timeout"`
}

func (GetSignOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSignArgs)(nil)).Elem()
}

// A collection of values returned by getSign.
type GetSignResultOutput struct{ *pulumi.OutputState }

func (GetSignResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSignResult)(nil)).Elem()
}

func (o GetSignResultOutput) ToGetSignResultOutput() GetSignResultOutput {
	return o
}

func (o GetSignResultOutput) ToGetSignResultOutputWithContext(ctx context.Context) GetSignResultOutput {
	return o
}

func (o GetSignResultOutput) ExpiredTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSignResult) int { return v.ExpiredTime }).(pulumi.IntOutput)
}

func (o GetSignResultOutput) FileType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSignResult) *int { return v.FileType }).(pulumi.IntPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSignResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSignResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetSignResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetSignResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetSignResultOutput) SecretId() pulumi.StringOutput {
	return o.ApplyT(func(v GetSignResult) string { return v.SecretId }).(pulumi.StringOutput)
}

func (o GetSignResultOutput) SecretKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetSignResult) string { return v.SecretKey }).(pulumi.StringOutput)
}

func (o GetSignResultOutput) SessionToken() pulumi.StringOutput {
	return o.ApplyT(func(v GetSignResult) string { return v.SessionToken }).(pulumi.StringOutput)
}

func (o GetSignResultOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetSignResult) int { return v.StartTime }).(pulumi.IntOutput)
}

func (o GetSignResultOutput) Timeout() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetSignResult) *int { return v.Timeout }).(pulumi.IntPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSignResultOutput{})
}
