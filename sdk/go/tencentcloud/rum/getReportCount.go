// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package rum

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetReportCount(ctx *pulumi.Context, args *GetReportCountArgs, opts ...pulumi.InvokeOption) (*GetReportCountResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetReportCountResult
	err := ctx.Invoke("tencentcloud:Rum/getReportCount:getReportCount", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getReportCount.
type GetReportCountArgs struct {
	EndTime          int     `pulumi:"endTime"`
	InstanceId       *string `pulumi:"instanceId"`
	ProjectId        int     `pulumi:"projectId"`
	ReportType       *string `pulumi:"reportType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        int     `pulumi:"startTime"`
}

// A collection of values returned by getReportCount.
type GetReportCountResult struct {
	EndTime int `pulumi:"endTime"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	InstanceId       *string `pulumi:"instanceId"`
	ProjectId        int     `pulumi:"projectId"`
	ReportType       *string `pulumi:"reportType"`
	Result           string  `pulumi:"result"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartTime        int     `pulumi:"startTime"`
}

func GetReportCountOutput(ctx *pulumi.Context, args GetReportCountOutputArgs, opts ...pulumi.InvokeOption) GetReportCountResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetReportCountResult, error) {
			args := v.(GetReportCountArgs)
			r, err := GetReportCount(ctx, &args, opts...)
			var s GetReportCountResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetReportCountResultOutput)
}

// A collection of arguments for invoking getReportCount.
type GetReportCountOutputArgs struct {
	EndTime          pulumi.IntInput       `pulumi:"endTime"`
	InstanceId       pulumi.StringPtrInput `pulumi:"instanceId"`
	ProjectId        pulumi.IntInput       `pulumi:"projectId"`
	ReportType       pulumi.StringPtrInput `pulumi:"reportType"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	StartTime        pulumi.IntInput       `pulumi:"startTime"`
}

func (GetReportCountOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportCountArgs)(nil)).Elem()
}

// A collection of values returned by getReportCount.
type GetReportCountResultOutput struct{ *pulumi.OutputState }

func (GetReportCountResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetReportCountResult)(nil)).Elem()
}

func (o GetReportCountResultOutput) ToGetReportCountResultOutput() GetReportCountResultOutput {
	return o
}

func (o GetReportCountResultOutput) ToGetReportCountResultOutputWithContext(ctx context.Context) GetReportCountResultOutput {
	return o
}

func (o GetReportCountResultOutput) EndTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetReportCountResult) int { return v.EndTime }).(pulumi.IntOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetReportCountResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportCountResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetReportCountResultOutput) InstanceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportCountResult) *string { return v.InstanceId }).(pulumi.StringPtrOutput)
}

func (o GetReportCountResultOutput) ProjectId() pulumi.IntOutput {
	return o.ApplyT(func(v GetReportCountResult) int { return v.ProjectId }).(pulumi.IntOutput)
}

func (o GetReportCountResultOutput) ReportType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportCountResult) *string { return v.ReportType }).(pulumi.StringPtrOutput)
}

func (o GetReportCountResultOutput) Result() pulumi.StringOutput {
	return o.ApplyT(func(v GetReportCountResult) string { return v.Result }).(pulumi.StringOutput)
}

func (o GetReportCountResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetReportCountResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetReportCountResultOutput) StartTime() pulumi.IntOutput {
	return o.ApplyT(func(v GetReportCountResult) int { return v.StartTime }).(pulumi.IntOutput)
}

func init() {
	pulumi.RegisterOutputType(GetReportCountResultOutput{})
}
