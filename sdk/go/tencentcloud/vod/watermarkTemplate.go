// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package vod

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type WatermarkTemplate struct {
	pulumi.CustomResourceState

	// Template description. Length limit: 256 characters.
	Comment pulumi.StringOutput `pulumi:"comment"`
	// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
	// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
	// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
	// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
	// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
	// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
	CoordinateOrigin pulumi.StringOutput `pulumi:"coordinateOrigin"`
	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate WatermarkTemplateImageTemplateOutput `pulumi:"imageTemplate"`
	// Watermarking template name. Length limit: 64 characters.
	Name pulumi.StringOutput `pulumi:"name"`
	// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
	// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
	// application or a newly created one), they must fill in this field with the application ID.
	SubAppId pulumi.IntOutput `pulumi:"subAppId"`
	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate WatermarkTemplateSvgTemplateOutput `pulumi:"svgTemplate"`
	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate WatermarkTemplateTextTemplateOutput `pulumi:"textTemplate"`
	// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
	Type pulumi.StringOutput `pulumi:"type"`
	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
	// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
	// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
	XPos pulumi.StringOutput `pulumi:"xPos"`
	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
	// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
	// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
	YPos pulumi.StringOutput `pulumi:"yPos"`
}

// NewWatermarkTemplate registers a new resource with the given unique name, arguments, and options.
func NewWatermarkTemplate(ctx *pulumi.Context,
	name string, args *WatermarkTemplateArgs, opts ...pulumi.ResourceOption) (*WatermarkTemplate, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.SubAppId == nil {
		return nil, errors.New("invalid value for required argument 'SubAppId'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource WatermarkTemplate
	err := ctx.RegisterResource("tencentcloud:Vod/watermarkTemplate:WatermarkTemplate", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetWatermarkTemplate gets an existing WatermarkTemplate resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetWatermarkTemplate(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *WatermarkTemplateState, opts ...pulumi.ResourceOption) (*WatermarkTemplate, error) {
	var resource WatermarkTemplate
	err := ctx.ReadResource("tencentcloud:Vod/watermarkTemplate:WatermarkTemplate", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering WatermarkTemplate resources.
type watermarkTemplateState struct {
	// Template description. Length limit: 256 characters.
	Comment *string `pulumi:"comment"`
	// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
	// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
	// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
	// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
	// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
	// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
	CoordinateOrigin *string `pulumi:"coordinateOrigin"`
	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate *WatermarkTemplateImageTemplate `pulumi:"imageTemplate"`
	// Watermarking template name. Length limit: 64 characters.
	Name *string `pulumi:"name"`
	// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
	// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
	// application or a newly created one), they must fill in this field with the application ID.
	SubAppId *int `pulumi:"subAppId"`
	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate *WatermarkTemplateSvgTemplate `pulumi:"svgTemplate"`
	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate *WatermarkTemplateTextTemplate `pulumi:"textTemplate"`
	// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
	Type *string `pulumi:"type"`
	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
	// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
	// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
	XPos *string `pulumi:"xPos"`
	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
	// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
	// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
	YPos *string `pulumi:"yPos"`
}

type WatermarkTemplateState struct {
	// Template description. Length limit: 256 characters.
	Comment pulumi.StringPtrInput
	// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
	// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
	// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
	// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
	// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
	// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
	CoordinateOrigin pulumi.StringPtrInput
	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate WatermarkTemplateImageTemplatePtrInput
	// Watermarking template name. Length limit: 64 characters.
	Name pulumi.StringPtrInput
	// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
	// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
	// application or a newly created one), they must fill in this field with the application ID.
	SubAppId pulumi.IntPtrInput
	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate WatermarkTemplateSvgTemplatePtrInput
	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate WatermarkTemplateTextTemplatePtrInput
	// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
	Type pulumi.StringPtrInput
	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
	// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
	// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
	XPos pulumi.StringPtrInput
	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
	// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
	// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
	YPos pulumi.StringPtrInput
}

func (WatermarkTemplateState) ElementType() reflect.Type {
	return reflect.TypeOf((*watermarkTemplateState)(nil)).Elem()
}

type watermarkTemplateArgs struct {
	// Template description. Length limit: 256 characters.
	Comment *string `pulumi:"comment"`
	// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
	// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
	// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
	// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
	// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
	// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
	CoordinateOrigin *string `pulumi:"coordinateOrigin"`
	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate *WatermarkTemplateImageTemplate `pulumi:"imageTemplate"`
	// Watermarking template name. Length limit: 64 characters.
	Name *string `pulumi:"name"`
	// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
	// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
	// application or a newly created one), they must fill in this field with the application ID.
	SubAppId int `pulumi:"subAppId"`
	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate *WatermarkTemplateSvgTemplate `pulumi:"svgTemplate"`
	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate *WatermarkTemplateTextTemplate `pulumi:"textTemplate"`
	// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
	Type string `pulumi:"type"`
	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
	// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
	// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
	XPos *string `pulumi:"xPos"`
	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
	// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
	// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
	YPos *string `pulumi:"yPos"`
}

// The set of arguments for constructing a WatermarkTemplate resource.
type WatermarkTemplateArgs struct {
	// Template description. Length limit: 256 characters.
	Comment pulumi.StringPtrInput
	// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
	// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
	// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
	// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
	// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
	// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
	CoordinateOrigin pulumi.StringPtrInput
	// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
	ImageTemplate WatermarkTemplateImageTemplatePtrInput
	// Watermarking template name. Length limit: 64 characters.
	Name pulumi.StringPtrInput
	// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
	// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
	// application or a newly created one), they must fill in this field with the application ID.
	SubAppId pulumi.IntInput
	// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
	SvgTemplate WatermarkTemplateSvgTemplatePtrInput
	// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
	TextTemplate WatermarkTemplateTextTemplatePtrInput
	// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
	Type pulumi.StringInput
	// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
	// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
	// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
	XPos pulumi.StringPtrInput
	// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
	// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
	// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
	// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
	YPos pulumi.StringPtrInput
}

func (WatermarkTemplateArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*watermarkTemplateArgs)(nil)).Elem()
}

type WatermarkTemplateInput interface {
	pulumi.Input

	ToWatermarkTemplateOutput() WatermarkTemplateOutput
	ToWatermarkTemplateOutputWithContext(ctx context.Context) WatermarkTemplateOutput
}

func (*WatermarkTemplate) ElementType() reflect.Type {
	return reflect.TypeOf((**WatermarkTemplate)(nil)).Elem()
}

func (i *WatermarkTemplate) ToWatermarkTemplateOutput() WatermarkTemplateOutput {
	return i.ToWatermarkTemplateOutputWithContext(context.Background())
}

func (i *WatermarkTemplate) ToWatermarkTemplateOutputWithContext(ctx context.Context) WatermarkTemplateOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatermarkTemplateOutput)
}

// WatermarkTemplateArrayInput is an input type that accepts WatermarkTemplateArray and WatermarkTemplateArrayOutput values.
// You can construct a concrete instance of `WatermarkTemplateArrayInput` via:
//
//	WatermarkTemplateArray{ WatermarkTemplateArgs{...} }
type WatermarkTemplateArrayInput interface {
	pulumi.Input

	ToWatermarkTemplateArrayOutput() WatermarkTemplateArrayOutput
	ToWatermarkTemplateArrayOutputWithContext(context.Context) WatermarkTemplateArrayOutput
}

type WatermarkTemplateArray []WatermarkTemplateInput

func (WatermarkTemplateArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WatermarkTemplate)(nil)).Elem()
}

func (i WatermarkTemplateArray) ToWatermarkTemplateArrayOutput() WatermarkTemplateArrayOutput {
	return i.ToWatermarkTemplateArrayOutputWithContext(context.Background())
}

func (i WatermarkTemplateArray) ToWatermarkTemplateArrayOutputWithContext(ctx context.Context) WatermarkTemplateArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatermarkTemplateArrayOutput)
}

// WatermarkTemplateMapInput is an input type that accepts WatermarkTemplateMap and WatermarkTemplateMapOutput values.
// You can construct a concrete instance of `WatermarkTemplateMapInput` via:
//
//	WatermarkTemplateMap{ "key": WatermarkTemplateArgs{...} }
type WatermarkTemplateMapInput interface {
	pulumi.Input

	ToWatermarkTemplateMapOutput() WatermarkTemplateMapOutput
	ToWatermarkTemplateMapOutputWithContext(context.Context) WatermarkTemplateMapOutput
}

type WatermarkTemplateMap map[string]WatermarkTemplateInput

func (WatermarkTemplateMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WatermarkTemplate)(nil)).Elem()
}

func (i WatermarkTemplateMap) ToWatermarkTemplateMapOutput() WatermarkTemplateMapOutput {
	return i.ToWatermarkTemplateMapOutputWithContext(context.Background())
}

func (i WatermarkTemplateMap) ToWatermarkTemplateMapOutputWithContext(ctx context.Context) WatermarkTemplateMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WatermarkTemplateMapOutput)
}

type WatermarkTemplateOutput struct{ *pulumi.OutputState }

func (WatermarkTemplateOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WatermarkTemplate)(nil)).Elem()
}

func (o WatermarkTemplateOutput) ToWatermarkTemplateOutput() WatermarkTemplateOutput {
	return o
}

func (o WatermarkTemplateOutput) ToWatermarkTemplateOutputWithContext(ctx context.Context) WatermarkTemplateOutput {
	return o
}

// Template description. Length limit: 256 characters.
func (o WatermarkTemplateOutput) Comment() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.Comment }).(pulumi.StringOutput)
}

// Origin position. Valid values: TopLeft: the origin of coordinates is in the top-left corner of the video, and the origin
// of the watermark is in the top-left corner of the image or text; TopRight: the origin of coordinates is in the top-right
// corner of the video, and the origin of the watermark is in the top-right corner of the image or text; BottomLeft: the
// origin of coordinates is in the bottom-left corner of the video, and the origin of the watermark is in the bottom-left
// corner of the image or text; BottomRight: the origin of coordinates is in the bottom-right corner of the video, and the
// origin of the watermark is in the bottom-right corner of the image or text.Default value: TopLeft.
func (o WatermarkTemplateOutput) CoordinateOrigin() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.CoordinateOrigin }).(pulumi.StringOutput)
}

// Image watermarking template. This field is required when `Type` is `image` and is invalid when `Type` is `text`.
func (o WatermarkTemplateOutput) ImageTemplate() WatermarkTemplateImageTemplateOutput {
	return o.ApplyT(func(v *WatermarkTemplate) WatermarkTemplateImageTemplateOutput { return v.ImageTemplate }).(WatermarkTemplateImageTemplateOutput)
}

// Watermarking template name. Length limit: 64 characters.
func (o WatermarkTemplateOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// The VOD [application](https://intl.cloud.tencent.com/document/product/266/14574) ID. For customers who activate VOD
// service from December 25, 2023, if they want to access resources in a VOD application (whether it's the default
// application or a newly created one), they must fill in this field with the application ID.
func (o WatermarkTemplateOutput) SubAppId() pulumi.IntOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.IntOutput { return v.SubAppId }).(pulumi.IntOutput)
}

// SVG watermarking template. This field is required when `Type` is `svg` and is invalid when `Type` is `image` or `text`.
func (o WatermarkTemplateOutput) SvgTemplate() WatermarkTemplateSvgTemplateOutput {
	return o.ApplyT(func(v *WatermarkTemplate) WatermarkTemplateSvgTemplateOutput { return v.SvgTemplate }).(WatermarkTemplateSvgTemplateOutput)
}

// Text watermarking template. This field is required when `Type` is `text` and is invalid when `Type` is `image`.
func (o WatermarkTemplateOutput) TextTemplate() WatermarkTemplateTextTemplateOutput {
	return o.ApplyT(func(v *WatermarkTemplate) WatermarkTemplateTextTemplateOutput { return v.TextTemplate }).(WatermarkTemplateTextTemplateOutput)
}

// Watermarking type. Valid values: image: image watermark; text: text watermark; svg: SVG watermark.
func (o WatermarkTemplateOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// The horizontal position of the origin of the watermark relative to the origin of coordinates of the video. % and px
// formats are supported: If the string ends in %, the `XPos` of the watermark will be the specified percentage of the
// video width; for example, `10%` means that `XPos` is 10% of the video width; If the string ends in px, the `XPos` of the
// watermark will be the specified px; for example, `100px` means that `XPos` is 100 px.Default value: 0 px.
func (o WatermarkTemplateOutput) XPos() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.XPos }).(pulumi.StringOutput)
}

// The vertical position of the origin of the watermark relative to the origin of coordinates of the video. % and px
// formats are supported: If the string ends in %, the `YPos` of the watermark will be the specified percentage of the
// video height; for example, `10%` means that `YPos` is 10% of the video height; If the string ends in px, the `YPos` of
// the watermark will be the specified px; for example, `100px` means that `YPos` is 100 px.Default value: 0 px.
func (o WatermarkTemplateOutput) YPos() pulumi.StringOutput {
	return o.ApplyT(func(v *WatermarkTemplate) pulumi.StringOutput { return v.YPos }).(pulumi.StringOutput)
}

type WatermarkTemplateArrayOutput struct{ *pulumi.OutputState }

func (WatermarkTemplateArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*WatermarkTemplate)(nil)).Elem()
}

func (o WatermarkTemplateArrayOutput) ToWatermarkTemplateArrayOutput() WatermarkTemplateArrayOutput {
	return o
}

func (o WatermarkTemplateArrayOutput) ToWatermarkTemplateArrayOutputWithContext(ctx context.Context) WatermarkTemplateArrayOutput {
	return o
}

func (o WatermarkTemplateArrayOutput) Index(i pulumi.IntInput) WatermarkTemplateOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *WatermarkTemplate {
		return vs[0].([]*WatermarkTemplate)[vs[1].(int)]
	}).(WatermarkTemplateOutput)
}

type WatermarkTemplateMapOutput struct{ *pulumi.OutputState }

func (WatermarkTemplateMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*WatermarkTemplate)(nil)).Elem()
}

func (o WatermarkTemplateMapOutput) ToWatermarkTemplateMapOutput() WatermarkTemplateMapOutput {
	return o
}

func (o WatermarkTemplateMapOutput) ToWatermarkTemplateMapOutputWithContext(ctx context.Context) WatermarkTemplateMapOutput {
	return o
}

func (o WatermarkTemplateMapOutput) MapIndex(k pulumi.StringInput) WatermarkTemplateOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *WatermarkTemplate {
		return vs[0].(map[string]*WatermarkTemplate)[vs[1].(string)]
	}).(WatermarkTemplateOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*WatermarkTemplateInput)(nil)).Elem(), &WatermarkTemplate{})
	pulumi.RegisterInputType(reflect.TypeOf((*WatermarkTemplateArrayInput)(nil)).Elem(), WatermarkTemplateArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*WatermarkTemplateMapInput)(nil)).Elem(), WatermarkTemplateMap{})
	pulumi.RegisterOutputType(WatermarkTemplateOutput{})
	pulumi.RegisterOutputType(WatermarkTemplateArrayOutput{})
	pulumi.RegisterOutputType(WatermarkTemplateMapOutput{})
}
