// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package teo

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type OriginGroup struct {
	pulumi.CustomResourceState

	// Origin site group creation time.
	CreateTime pulumi.StringOutput `pulumi:"createTime"`
	// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
	// configuration priority to be higher than the Host Header of the origin site group.
	HostHeader pulumi.StringPtrOutput `pulumi:"hostHeader"`
	// OriginGroup Name.
	Name pulumi.StringOutput `pulumi:"name"`
	// OriginGroup ID.
	OriginGroupId pulumi.StringOutput `pulumi:"originGroupId"`
	// Origin site records.
	Records OriginGroupRecordArrayOutput `pulumi:"records"`
	// List of referenced instances of the origin site group.
	References OriginGroupReferenceArrayOutput `pulumi:"references"`
	// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
	// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
	// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
	// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
	// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
	Type pulumi.StringOutput `pulumi:"type"`
	// Origin site group update time.
	UpdateTime pulumi.StringOutput `pulumi:"updateTime"`
	// Site ID.
	ZoneId pulumi.StringOutput `pulumi:"zoneId"`
}

// NewOriginGroup registers a new resource with the given unique name, arguments, and options.
func NewOriginGroup(ctx *pulumi.Context,
	name string, args *OriginGroupArgs, opts ...pulumi.ResourceOption) (*OriginGroup, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Records == nil {
		return nil, errors.New("invalid value for required argument 'Records'")
	}
	if args.Type == nil {
		return nil, errors.New("invalid value for required argument 'Type'")
	}
	if args.ZoneId == nil {
		return nil, errors.New("invalid value for required argument 'ZoneId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource OriginGroup
	err := ctx.RegisterResource("tencentcloud:Teo/originGroup:OriginGroup", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetOriginGroup gets an existing OriginGroup resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetOriginGroup(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *OriginGroupState, opts ...pulumi.ResourceOption) (*OriginGroup, error) {
	var resource OriginGroup
	err := ctx.ReadResource("tencentcloud:Teo/originGroup:OriginGroup", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering OriginGroup resources.
type originGroupState struct {
	// Origin site group creation time.
	CreateTime *string `pulumi:"createTime"`
	// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
	// configuration priority to be higher than the Host Header of the origin site group.
	HostHeader *string `pulumi:"hostHeader"`
	// OriginGroup Name.
	Name *string `pulumi:"name"`
	// OriginGroup ID.
	OriginGroupId *string `pulumi:"originGroupId"`
	// Origin site records.
	Records []OriginGroupRecord `pulumi:"records"`
	// List of referenced instances of the origin site group.
	References []OriginGroupReference `pulumi:"references"`
	// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
	// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
	// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
	// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
	// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
	Type *string `pulumi:"type"`
	// Origin site group update time.
	UpdateTime *string `pulumi:"updateTime"`
	// Site ID.
	ZoneId *string `pulumi:"zoneId"`
}

type OriginGroupState struct {
	// Origin site group creation time.
	CreateTime pulumi.StringPtrInput
	// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
	// configuration priority to be higher than the Host Header of the origin site group.
	HostHeader pulumi.StringPtrInput
	// OriginGroup Name.
	Name pulumi.StringPtrInput
	// OriginGroup ID.
	OriginGroupId pulumi.StringPtrInput
	// Origin site records.
	Records OriginGroupRecordArrayInput
	// List of referenced instances of the origin site group.
	References OriginGroupReferenceArrayInput
	// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
	// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
	// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
	// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
	// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
	Type pulumi.StringPtrInput
	// Origin site group update time.
	UpdateTime pulumi.StringPtrInput
	// Site ID.
	ZoneId pulumi.StringPtrInput
}

func (OriginGroupState) ElementType() reflect.Type {
	return reflect.TypeOf((*originGroupState)(nil)).Elem()
}

type originGroupArgs struct {
	// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
	// configuration priority to be higher than the Host Header of the origin site group.
	HostHeader *string `pulumi:"hostHeader"`
	// OriginGroup Name.
	Name *string `pulumi:"name"`
	// Origin site records.
	Records []OriginGroupRecord `pulumi:"records"`
	// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
	// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
	// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
	// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
	// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
	Type string `pulumi:"type"`
	// Site ID.
	ZoneId string `pulumi:"zoneId"`
}

// The set of arguments for constructing a OriginGroup resource.
type OriginGroupArgs struct {
	// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
	// configuration priority to be higher than the Host Header of the origin site group.
	HostHeader pulumi.StringPtrInput
	// OriginGroup Name.
	Name pulumi.StringPtrInput
	// Origin site records.
	Records OriginGroupRecordArrayInput
	// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
	// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
	// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
	// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
	// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
	Type pulumi.StringInput
	// Site ID.
	ZoneId pulumi.StringInput
}

func (OriginGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*originGroupArgs)(nil)).Elem()
}

type OriginGroupInput interface {
	pulumi.Input

	ToOriginGroupOutput() OriginGroupOutput
	ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput
}

func (*OriginGroup) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroup)(nil)).Elem()
}

func (i *OriginGroup) ToOriginGroupOutput() OriginGroupOutput {
	return i.ToOriginGroupOutputWithContext(context.Background())
}

func (i *OriginGroup) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupOutput)
}

// OriginGroupArrayInput is an input type that accepts OriginGroupArray and OriginGroupArrayOutput values.
// You can construct a concrete instance of `OriginGroupArrayInput` via:
//
//	OriginGroupArray{ OriginGroupArgs{...} }
type OriginGroupArrayInput interface {
	pulumi.Input

	ToOriginGroupArrayOutput() OriginGroupArrayOutput
	ToOriginGroupArrayOutputWithContext(context.Context) OriginGroupArrayOutput
}

type OriginGroupArray []OriginGroupInput

func (OriginGroupArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginGroup)(nil)).Elem()
}

func (i OriginGroupArray) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return i.ToOriginGroupArrayOutputWithContext(context.Background())
}

func (i OriginGroupArray) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupArrayOutput)
}

// OriginGroupMapInput is an input type that accepts OriginGroupMap and OriginGroupMapOutput values.
// You can construct a concrete instance of `OriginGroupMapInput` via:
//
//	OriginGroupMap{ "key": OriginGroupArgs{...} }
type OriginGroupMapInput interface {
	pulumi.Input

	ToOriginGroupMapOutput() OriginGroupMapOutput
	ToOriginGroupMapOutputWithContext(context.Context) OriginGroupMapOutput
}

type OriginGroupMap map[string]OriginGroupInput

func (OriginGroupMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginGroup)(nil)).Elem()
}

func (i OriginGroupMap) ToOriginGroupMapOutput() OriginGroupMapOutput {
	return i.ToOriginGroupMapOutputWithContext(context.Background())
}

func (i OriginGroupMap) ToOriginGroupMapOutputWithContext(ctx context.Context) OriginGroupMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OriginGroupMapOutput)
}

type OriginGroupOutput struct{ *pulumi.OutputState }

func (OriginGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**OriginGroup)(nil)).Elem()
}

func (o OriginGroupOutput) ToOriginGroupOutput() OriginGroupOutput {
	return o
}

func (o OriginGroupOutput) ToOriginGroupOutputWithContext(ctx context.Context) OriginGroupOutput {
	return o
}

// Origin site group creation time.
func (o OriginGroupOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.CreateTime }).(pulumi.StringOutput)
}

// Back-to-origin Host Header, it only takes effect when type = HTTP is passed in. The rule engine modifies the Host Header
// configuration priority to be higher than the Host Header of the origin site group.
func (o OriginGroupOutput) HostHeader() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringPtrOutput { return v.HostHeader }).(pulumi.StringPtrOutput)
}

// OriginGroup Name.
func (o OriginGroupOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.Name }).(pulumi.StringOutput)
}

// OriginGroup ID.
func (o OriginGroupOutput) OriginGroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.OriginGroupId }).(pulumi.StringOutput)
}

// Origin site records.
func (o OriginGroupOutput) Records() OriginGroupRecordArrayOutput {
	return o.ApplyT(func(v *OriginGroup) OriginGroupRecordArrayOutput { return v.Records }).(OriginGroupRecordArrayOutput)
}

// List of referenced instances of the origin site group.
func (o OriginGroupOutput) References() OriginGroupReferenceArrayOutput {
	return o.ApplyT(func(v *OriginGroup) OriginGroupReferenceArrayOutput { return v.References }).(OriginGroupReferenceArrayOutput)
}

// Type of the origin site. Valid values: - `GENERAL`: Universal origin site group, only supports adding IP/domain name
// origin sites, which can be referenced by domain name service, rule engine, four-layer proxy, general load balancing, and
// HTTP-specific load balancing. - `HTTP`: The HTTP-specific origin site group, supports adding IP/domain name and object
// storage origin site as the origin site, it cannot be referenced by the four-layer proxy, it can only be added to the
// acceleration domain name, rule engine-modify origin site, and HTTP-specific load balancing reference.
func (o OriginGroupOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.Type }).(pulumi.StringOutput)
}

// Origin site group update time.
func (o OriginGroupOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.UpdateTime }).(pulumi.StringOutput)
}

// Site ID.
func (o OriginGroupOutput) ZoneId() pulumi.StringOutput {
	return o.ApplyT(func(v *OriginGroup) pulumi.StringOutput { return v.ZoneId }).(pulumi.StringOutput)
}

type OriginGroupArrayOutput struct{ *pulumi.OutputState }

func (OriginGroupArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*OriginGroup)(nil)).Elem()
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutput() OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) ToOriginGroupArrayOutputWithContext(ctx context.Context) OriginGroupArrayOutput {
	return o
}

func (o OriginGroupArrayOutput) Index(i pulumi.IntInput) OriginGroupOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *OriginGroup {
		return vs[0].([]*OriginGroup)[vs[1].(int)]
	}).(OriginGroupOutput)
}

type OriginGroupMapOutput struct{ *pulumi.OutputState }

func (OriginGroupMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*OriginGroup)(nil)).Elem()
}

func (o OriginGroupMapOutput) ToOriginGroupMapOutput() OriginGroupMapOutput {
	return o
}

func (o OriginGroupMapOutput) ToOriginGroupMapOutputWithContext(ctx context.Context) OriginGroupMapOutput {
	return o
}

func (o OriginGroupMapOutput) MapIndex(k pulumi.StringInput) OriginGroupOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *OriginGroup {
		return vs[0].(map[string]*OriginGroup)[vs[1].(string)]
	}).(OriginGroupOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupInput)(nil)).Elem(), &OriginGroup{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupArrayInput)(nil)).Elem(), OriginGroupArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OriginGroupMapInput)(nil)).Elem(), OriginGroupMap{})
	pulumi.RegisterOutputType(OriginGroupOutput{})
	pulumi.RegisterOutputType(OriginGroupArrayOutput{})
	pulumi.RegisterOutputType(OriginGroupMapOutput{})
}
