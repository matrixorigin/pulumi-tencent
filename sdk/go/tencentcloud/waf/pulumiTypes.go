// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package waf

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type AntiInfoLeakStrategy struct {
	Content string `pulumi:"content"`
	Field   string `pulumi:"field"`
}

// AntiInfoLeakStrategyInput is an input type that accepts AntiInfoLeakStrategyArgs and AntiInfoLeakStrategyOutput values.
// You can construct a concrete instance of `AntiInfoLeakStrategyInput` via:
//
//	AntiInfoLeakStrategyArgs{...}
type AntiInfoLeakStrategyInput interface {
	pulumi.Input

	ToAntiInfoLeakStrategyOutput() AntiInfoLeakStrategyOutput
	ToAntiInfoLeakStrategyOutputWithContext(context.Context) AntiInfoLeakStrategyOutput
}

type AntiInfoLeakStrategyArgs struct {
	Content pulumi.StringInput `pulumi:"content"`
	Field   pulumi.StringInput `pulumi:"field"`
}

func (AntiInfoLeakStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*AntiInfoLeakStrategy)(nil)).Elem()
}

func (i AntiInfoLeakStrategyArgs) ToAntiInfoLeakStrategyOutput() AntiInfoLeakStrategyOutput {
	return i.ToAntiInfoLeakStrategyOutputWithContext(context.Background())
}

func (i AntiInfoLeakStrategyArgs) ToAntiInfoLeakStrategyOutputWithContext(ctx context.Context) AntiInfoLeakStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiInfoLeakStrategyOutput)
}

// AntiInfoLeakStrategyArrayInput is an input type that accepts AntiInfoLeakStrategyArray and AntiInfoLeakStrategyArrayOutput values.
// You can construct a concrete instance of `AntiInfoLeakStrategyArrayInput` via:
//
//	AntiInfoLeakStrategyArray{ AntiInfoLeakStrategyArgs{...} }
type AntiInfoLeakStrategyArrayInput interface {
	pulumi.Input

	ToAntiInfoLeakStrategyArrayOutput() AntiInfoLeakStrategyArrayOutput
	ToAntiInfoLeakStrategyArrayOutputWithContext(context.Context) AntiInfoLeakStrategyArrayOutput
}

type AntiInfoLeakStrategyArray []AntiInfoLeakStrategyInput

func (AntiInfoLeakStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntiInfoLeakStrategy)(nil)).Elem()
}

func (i AntiInfoLeakStrategyArray) ToAntiInfoLeakStrategyArrayOutput() AntiInfoLeakStrategyArrayOutput {
	return i.ToAntiInfoLeakStrategyArrayOutputWithContext(context.Background())
}

func (i AntiInfoLeakStrategyArray) ToAntiInfoLeakStrategyArrayOutputWithContext(ctx context.Context) AntiInfoLeakStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(AntiInfoLeakStrategyArrayOutput)
}

type AntiInfoLeakStrategyOutput struct{ *pulumi.OutputState }

func (AntiInfoLeakStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*AntiInfoLeakStrategy)(nil)).Elem()
}

func (o AntiInfoLeakStrategyOutput) ToAntiInfoLeakStrategyOutput() AntiInfoLeakStrategyOutput {
	return o
}

func (o AntiInfoLeakStrategyOutput) ToAntiInfoLeakStrategyOutputWithContext(ctx context.Context) AntiInfoLeakStrategyOutput {
	return o
}

func (o AntiInfoLeakStrategyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v AntiInfoLeakStrategy) string { return v.Content }).(pulumi.StringOutput)
}

func (o AntiInfoLeakStrategyOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v AntiInfoLeakStrategy) string { return v.Field }).(pulumi.StringOutput)
}

type AntiInfoLeakStrategyArrayOutput struct{ *pulumi.OutputState }

func (AntiInfoLeakStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]AntiInfoLeakStrategy)(nil)).Elem()
}

func (o AntiInfoLeakStrategyArrayOutput) ToAntiInfoLeakStrategyArrayOutput() AntiInfoLeakStrategyArrayOutput {
	return o
}

func (o AntiInfoLeakStrategyArrayOutput) ToAntiInfoLeakStrategyArrayOutputWithContext(ctx context.Context) AntiInfoLeakStrategyArrayOutput {
	return o
}

func (o AntiInfoLeakStrategyArrayOutput) Index(i pulumi.IntInput) AntiInfoLeakStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) AntiInfoLeakStrategy {
		return vs[0].([]AntiInfoLeakStrategy)[vs[1].(int)]
	}).(AntiInfoLeakStrategyOutput)
}

type ClbDomainLoadBalancerSet struct {
	ListenerId       string  `pulumi:"listenerId"`
	ListenerName     string  `pulumi:"listenerName"`
	LoadBalancerId   string  `pulumi:"loadBalancerId"`
	LoadBalancerName string  `pulumi:"loadBalancerName"`
	LoadBalancerType *string `pulumi:"loadBalancerType"`
	NumericalVpcId   *int    `pulumi:"numericalVpcId"`
	Protocol         string  `pulumi:"protocol"`
	Region           string  `pulumi:"region"`
	Vip              string  `pulumi:"vip"`
	Vport            int     `pulumi:"vport"`
	Zone             string  `pulumi:"zone"`
}

// ClbDomainLoadBalancerSetInput is an input type that accepts ClbDomainLoadBalancerSetArgs and ClbDomainLoadBalancerSetOutput values.
// You can construct a concrete instance of `ClbDomainLoadBalancerSetInput` via:
//
//	ClbDomainLoadBalancerSetArgs{...}
type ClbDomainLoadBalancerSetInput interface {
	pulumi.Input

	ToClbDomainLoadBalancerSetOutput() ClbDomainLoadBalancerSetOutput
	ToClbDomainLoadBalancerSetOutputWithContext(context.Context) ClbDomainLoadBalancerSetOutput
}

type ClbDomainLoadBalancerSetArgs struct {
	ListenerId       pulumi.StringInput    `pulumi:"listenerId"`
	ListenerName     pulumi.StringInput    `pulumi:"listenerName"`
	LoadBalancerId   pulumi.StringInput    `pulumi:"loadBalancerId"`
	LoadBalancerName pulumi.StringInput    `pulumi:"loadBalancerName"`
	LoadBalancerType pulumi.StringPtrInput `pulumi:"loadBalancerType"`
	NumericalVpcId   pulumi.IntPtrInput    `pulumi:"numericalVpcId"`
	Protocol         pulumi.StringInput    `pulumi:"protocol"`
	Region           pulumi.StringInput    `pulumi:"region"`
	Vip              pulumi.StringInput    `pulumi:"vip"`
	Vport            pulumi.IntInput       `pulumi:"vport"`
	Zone             pulumi.StringInput    `pulumi:"zone"`
}

func (ClbDomainLoadBalancerSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbDomainLoadBalancerSet)(nil)).Elem()
}

func (i ClbDomainLoadBalancerSetArgs) ToClbDomainLoadBalancerSetOutput() ClbDomainLoadBalancerSetOutput {
	return i.ToClbDomainLoadBalancerSetOutputWithContext(context.Background())
}

func (i ClbDomainLoadBalancerSetArgs) ToClbDomainLoadBalancerSetOutputWithContext(ctx context.Context) ClbDomainLoadBalancerSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbDomainLoadBalancerSetOutput)
}

// ClbDomainLoadBalancerSetArrayInput is an input type that accepts ClbDomainLoadBalancerSetArray and ClbDomainLoadBalancerSetArrayOutput values.
// You can construct a concrete instance of `ClbDomainLoadBalancerSetArrayInput` via:
//
//	ClbDomainLoadBalancerSetArray{ ClbDomainLoadBalancerSetArgs{...} }
type ClbDomainLoadBalancerSetArrayInput interface {
	pulumi.Input

	ToClbDomainLoadBalancerSetArrayOutput() ClbDomainLoadBalancerSetArrayOutput
	ToClbDomainLoadBalancerSetArrayOutputWithContext(context.Context) ClbDomainLoadBalancerSetArrayOutput
}

type ClbDomainLoadBalancerSetArray []ClbDomainLoadBalancerSetInput

func (ClbDomainLoadBalancerSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbDomainLoadBalancerSet)(nil)).Elem()
}

func (i ClbDomainLoadBalancerSetArray) ToClbDomainLoadBalancerSetArrayOutput() ClbDomainLoadBalancerSetArrayOutput {
	return i.ToClbDomainLoadBalancerSetArrayOutputWithContext(context.Background())
}

func (i ClbDomainLoadBalancerSetArray) ToClbDomainLoadBalancerSetArrayOutputWithContext(ctx context.Context) ClbDomainLoadBalancerSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ClbDomainLoadBalancerSetArrayOutput)
}

type ClbDomainLoadBalancerSetOutput struct{ *pulumi.OutputState }

func (ClbDomainLoadBalancerSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ClbDomainLoadBalancerSet)(nil)).Elem()
}

func (o ClbDomainLoadBalancerSetOutput) ToClbDomainLoadBalancerSetOutput() ClbDomainLoadBalancerSetOutput {
	return o
}

func (o ClbDomainLoadBalancerSetOutput) ToClbDomainLoadBalancerSetOutputWithContext(ctx context.Context) ClbDomainLoadBalancerSetOutput {
	return o
}

func (o ClbDomainLoadBalancerSetOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.ListenerName }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) LoadBalancerType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) *string { return v.LoadBalancerType }).(pulumi.StringPtrOutput)
}

func (o ClbDomainLoadBalancerSetOutput) NumericalVpcId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) *int { return v.NumericalVpcId }).(pulumi.IntPtrOutput)
}

func (o ClbDomainLoadBalancerSetOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.Region }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.Vip }).(pulumi.StringOutput)
}

func (o ClbDomainLoadBalancerSetOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) int { return v.Vport }).(pulumi.IntOutput)
}

func (o ClbDomainLoadBalancerSetOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v ClbDomainLoadBalancerSet) string { return v.Zone }).(pulumi.StringOutput)
}

type ClbDomainLoadBalancerSetArrayOutput struct{ *pulumi.OutputState }

func (ClbDomainLoadBalancerSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ClbDomainLoadBalancerSet)(nil)).Elem()
}

func (o ClbDomainLoadBalancerSetArrayOutput) ToClbDomainLoadBalancerSetArrayOutput() ClbDomainLoadBalancerSetArrayOutput {
	return o
}

func (o ClbDomainLoadBalancerSetArrayOutput) ToClbDomainLoadBalancerSetArrayOutputWithContext(ctx context.Context) ClbDomainLoadBalancerSetArrayOutput {
	return o
}

func (o ClbDomainLoadBalancerSetArrayOutput) Index(i pulumi.IntInput) ClbDomainLoadBalancerSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ClbDomainLoadBalancerSet {
		return vs[0].([]ClbDomainLoadBalancerSet)[vs[1].(int)]
	}).(ClbDomainLoadBalancerSetOutput)
}

type CustomRuleStrategy struct {
	Arg         string `pulumi:"arg"`
	CompareFunc string `pulumi:"compareFunc"`
	Content     string `pulumi:"content"`
	Field       string `pulumi:"field"`
}

// CustomRuleStrategyInput is an input type that accepts CustomRuleStrategyArgs and CustomRuleStrategyOutput values.
// You can construct a concrete instance of `CustomRuleStrategyInput` via:
//
//	CustomRuleStrategyArgs{...}
type CustomRuleStrategyInput interface {
	pulumi.Input

	ToCustomRuleStrategyOutput() CustomRuleStrategyOutput
	ToCustomRuleStrategyOutputWithContext(context.Context) CustomRuleStrategyOutput
}

type CustomRuleStrategyArgs struct {
	Arg         pulumi.StringInput `pulumi:"arg"`
	CompareFunc pulumi.StringInput `pulumi:"compareFunc"`
	Content     pulumi.StringInput `pulumi:"content"`
	Field       pulumi.StringInput `pulumi:"field"`
}

func (CustomRuleStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleStrategy)(nil)).Elem()
}

func (i CustomRuleStrategyArgs) ToCustomRuleStrategyOutput() CustomRuleStrategyOutput {
	return i.ToCustomRuleStrategyOutputWithContext(context.Background())
}

func (i CustomRuleStrategyArgs) ToCustomRuleStrategyOutputWithContext(ctx context.Context) CustomRuleStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleStrategyOutput)
}

// CustomRuleStrategyArrayInput is an input type that accepts CustomRuleStrategyArray and CustomRuleStrategyArrayOutput values.
// You can construct a concrete instance of `CustomRuleStrategyArrayInput` via:
//
//	CustomRuleStrategyArray{ CustomRuleStrategyArgs{...} }
type CustomRuleStrategyArrayInput interface {
	pulumi.Input

	ToCustomRuleStrategyArrayOutput() CustomRuleStrategyArrayOutput
	ToCustomRuleStrategyArrayOutputWithContext(context.Context) CustomRuleStrategyArrayOutput
}

type CustomRuleStrategyArray []CustomRuleStrategyInput

func (CustomRuleStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleStrategy)(nil)).Elem()
}

func (i CustomRuleStrategyArray) ToCustomRuleStrategyArrayOutput() CustomRuleStrategyArrayOutput {
	return i.ToCustomRuleStrategyArrayOutputWithContext(context.Background())
}

func (i CustomRuleStrategyArray) ToCustomRuleStrategyArrayOutputWithContext(ctx context.Context) CustomRuleStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomRuleStrategyArrayOutput)
}

type CustomRuleStrategyOutput struct{ *pulumi.OutputState }

func (CustomRuleStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomRuleStrategy)(nil)).Elem()
}

func (o CustomRuleStrategyOutput) ToCustomRuleStrategyOutput() CustomRuleStrategyOutput {
	return o
}

func (o CustomRuleStrategyOutput) ToCustomRuleStrategyOutputWithContext(ctx context.Context) CustomRuleStrategyOutput {
	return o
}

func (o CustomRuleStrategyOutput) Arg() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleStrategy) string { return v.Arg }).(pulumi.StringOutput)
}

func (o CustomRuleStrategyOutput) CompareFunc() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleStrategy) string { return v.CompareFunc }).(pulumi.StringOutput)
}

func (o CustomRuleStrategyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleStrategy) string { return v.Content }).(pulumi.StringOutput)
}

func (o CustomRuleStrategyOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v CustomRuleStrategy) string { return v.Field }).(pulumi.StringOutput)
}

type CustomRuleStrategyArrayOutput struct{ *pulumi.OutputState }

func (CustomRuleStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomRuleStrategy)(nil)).Elem()
}

func (o CustomRuleStrategyArrayOutput) ToCustomRuleStrategyArrayOutput() CustomRuleStrategyArrayOutput {
	return o
}

func (o CustomRuleStrategyArrayOutput) ToCustomRuleStrategyArrayOutputWithContext(ctx context.Context) CustomRuleStrategyArrayOutput {
	return o
}

func (o CustomRuleStrategyArrayOutput) Index(i pulumi.IntInput) CustomRuleStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomRuleStrategy {
		return vs[0].([]CustomRuleStrategy)[vs[1].(int)]
	}).(CustomRuleStrategyOutput)
}

type CustomWhiteRuleStrategy struct {
	Arg         string `pulumi:"arg"`
	CompareFunc string `pulumi:"compareFunc"`
	Content     string `pulumi:"content"`
	Field       string `pulumi:"field"`
}

// CustomWhiteRuleStrategyInput is an input type that accepts CustomWhiteRuleStrategyArgs and CustomWhiteRuleStrategyOutput values.
// You can construct a concrete instance of `CustomWhiteRuleStrategyInput` via:
//
//	CustomWhiteRuleStrategyArgs{...}
type CustomWhiteRuleStrategyInput interface {
	pulumi.Input

	ToCustomWhiteRuleStrategyOutput() CustomWhiteRuleStrategyOutput
	ToCustomWhiteRuleStrategyOutputWithContext(context.Context) CustomWhiteRuleStrategyOutput
}

type CustomWhiteRuleStrategyArgs struct {
	Arg         pulumi.StringInput `pulumi:"arg"`
	CompareFunc pulumi.StringInput `pulumi:"compareFunc"`
	Content     pulumi.StringInput `pulumi:"content"`
	Field       pulumi.StringInput `pulumi:"field"`
}

func (CustomWhiteRuleStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomWhiteRuleStrategy)(nil)).Elem()
}

func (i CustomWhiteRuleStrategyArgs) ToCustomWhiteRuleStrategyOutput() CustomWhiteRuleStrategyOutput {
	return i.ToCustomWhiteRuleStrategyOutputWithContext(context.Background())
}

func (i CustomWhiteRuleStrategyArgs) ToCustomWhiteRuleStrategyOutputWithContext(ctx context.Context) CustomWhiteRuleStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomWhiteRuleStrategyOutput)
}

// CustomWhiteRuleStrategyArrayInput is an input type that accepts CustomWhiteRuleStrategyArray and CustomWhiteRuleStrategyArrayOutput values.
// You can construct a concrete instance of `CustomWhiteRuleStrategyArrayInput` via:
//
//	CustomWhiteRuleStrategyArray{ CustomWhiteRuleStrategyArgs{...} }
type CustomWhiteRuleStrategyArrayInput interface {
	pulumi.Input

	ToCustomWhiteRuleStrategyArrayOutput() CustomWhiteRuleStrategyArrayOutput
	ToCustomWhiteRuleStrategyArrayOutputWithContext(context.Context) CustomWhiteRuleStrategyArrayOutput
}

type CustomWhiteRuleStrategyArray []CustomWhiteRuleStrategyInput

func (CustomWhiteRuleStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomWhiteRuleStrategy)(nil)).Elem()
}

func (i CustomWhiteRuleStrategyArray) ToCustomWhiteRuleStrategyArrayOutput() CustomWhiteRuleStrategyArrayOutput {
	return i.ToCustomWhiteRuleStrategyArrayOutputWithContext(context.Background())
}

func (i CustomWhiteRuleStrategyArray) ToCustomWhiteRuleStrategyArrayOutputWithContext(ctx context.Context) CustomWhiteRuleStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomWhiteRuleStrategyArrayOutput)
}

type CustomWhiteRuleStrategyOutput struct{ *pulumi.OutputState }

func (CustomWhiteRuleStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomWhiteRuleStrategy)(nil)).Elem()
}

func (o CustomWhiteRuleStrategyOutput) ToCustomWhiteRuleStrategyOutput() CustomWhiteRuleStrategyOutput {
	return o
}

func (o CustomWhiteRuleStrategyOutput) ToCustomWhiteRuleStrategyOutputWithContext(ctx context.Context) CustomWhiteRuleStrategyOutput {
	return o
}

func (o CustomWhiteRuleStrategyOutput) Arg() pulumi.StringOutput {
	return o.ApplyT(func(v CustomWhiteRuleStrategy) string { return v.Arg }).(pulumi.StringOutput)
}

func (o CustomWhiteRuleStrategyOutput) CompareFunc() pulumi.StringOutput {
	return o.ApplyT(func(v CustomWhiteRuleStrategy) string { return v.CompareFunc }).(pulumi.StringOutput)
}

func (o CustomWhiteRuleStrategyOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v CustomWhiteRuleStrategy) string { return v.Content }).(pulumi.StringOutput)
}

func (o CustomWhiteRuleStrategyOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v CustomWhiteRuleStrategy) string { return v.Field }).(pulumi.StringOutput)
}

type CustomWhiteRuleStrategyArrayOutput struct{ *pulumi.OutputState }

func (CustomWhiteRuleStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomWhiteRuleStrategy)(nil)).Elem()
}

func (o CustomWhiteRuleStrategyArrayOutput) ToCustomWhiteRuleStrategyArrayOutput() CustomWhiteRuleStrategyArrayOutput {
	return o
}

func (o CustomWhiteRuleStrategyArrayOutput) ToCustomWhiteRuleStrategyArrayOutputWithContext(ctx context.Context) CustomWhiteRuleStrategyArrayOutput {
	return o
}

func (o CustomWhiteRuleStrategyArrayOutput) Index(i pulumi.IntInput) CustomWhiteRuleStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomWhiteRuleStrategy {
		return vs[0].([]CustomWhiteRuleStrategy)[vs[1].(int)]
	}).(CustomWhiteRuleStrategyOutput)
}

type IpAccessControlItem struct {
	Action      int     `pulumi:"action"`
	Id          *string `pulumi:"id"`
	Ip          string  `pulumi:"ip"`
	Note        string  `pulumi:"note"`
	Source      *string `pulumi:"source"`
	ValidStatus *int    `pulumi:"validStatus"`
	ValidTs     int     `pulumi:"validTs"`
}

// IpAccessControlItemInput is an input type that accepts IpAccessControlItemArgs and IpAccessControlItemOutput values.
// You can construct a concrete instance of `IpAccessControlItemInput` via:
//
//	IpAccessControlItemArgs{...}
type IpAccessControlItemInput interface {
	pulumi.Input

	ToIpAccessControlItemOutput() IpAccessControlItemOutput
	ToIpAccessControlItemOutputWithContext(context.Context) IpAccessControlItemOutput
}

type IpAccessControlItemArgs struct {
	Action      pulumi.IntInput       `pulumi:"action"`
	Id          pulumi.StringPtrInput `pulumi:"id"`
	Ip          pulumi.StringInput    `pulumi:"ip"`
	Note        pulumi.StringInput    `pulumi:"note"`
	Source      pulumi.StringPtrInput `pulumi:"source"`
	ValidStatus pulumi.IntPtrInput    `pulumi:"validStatus"`
	ValidTs     pulumi.IntInput       `pulumi:"validTs"`
}

func (IpAccessControlItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAccessControlItem)(nil)).Elem()
}

func (i IpAccessControlItemArgs) ToIpAccessControlItemOutput() IpAccessControlItemOutput {
	return i.ToIpAccessControlItemOutputWithContext(context.Background())
}

func (i IpAccessControlItemArgs) ToIpAccessControlItemOutputWithContext(ctx context.Context) IpAccessControlItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessControlItemOutput)
}

// IpAccessControlItemArrayInput is an input type that accepts IpAccessControlItemArray and IpAccessControlItemArrayOutput values.
// You can construct a concrete instance of `IpAccessControlItemArrayInput` via:
//
//	IpAccessControlItemArray{ IpAccessControlItemArgs{...} }
type IpAccessControlItemArrayInput interface {
	pulumi.Input

	ToIpAccessControlItemArrayOutput() IpAccessControlItemArrayOutput
	ToIpAccessControlItemArrayOutputWithContext(context.Context) IpAccessControlItemArrayOutput
}

type IpAccessControlItemArray []IpAccessControlItemInput

func (IpAccessControlItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAccessControlItem)(nil)).Elem()
}

func (i IpAccessControlItemArray) ToIpAccessControlItemArrayOutput() IpAccessControlItemArrayOutput {
	return i.ToIpAccessControlItemArrayOutputWithContext(context.Background())
}

func (i IpAccessControlItemArray) ToIpAccessControlItemArrayOutputWithContext(ctx context.Context) IpAccessControlItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IpAccessControlItemArrayOutput)
}

type IpAccessControlItemOutput struct{ *pulumi.OutputState }

func (IpAccessControlItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IpAccessControlItem)(nil)).Elem()
}

func (o IpAccessControlItemOutput) ToIpAccessControlItemOutput() IpAccessControlItemOutput {
	return o
}

func (o IpAccessControlItemOutput) ToIpAccessControlItemOutputWithContext(ctx context.Context) IpAccessControlItemOutput {
	return o
}

func (o IpAccessControlItemOutput) Action() pulumi.IntOutput {
	return o.ApplyT(func(v IpAccessControlItem) int { return v.Action }).(pulumi.IntOutput)
}

func (o IpAccessControlItemOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAccessControlItem) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o IpAccessControlItemOutput) Ip() pulumi.StringOutput {
	return o.ApplyT(func(v IpAccessControlItem) string { return v.Ip }).(pulumi.StringOutput)
}

func (o IpAccessControlItemOutput) Note() pulumi.StringOutput {
	return o.ApplyT(func(v IpAccessControlItem) string { return v.Note }).(pulumi.StringOutput)
}

func (o IpAccessControlItemOutput) Source() pulumi.StringPtrOutput {
	return o.ApplyT(func(v IpAccessControlItem) *string { return v.Source }).(pulumi.StringPtrOutput)
}

func (o IpAccessControlItemOutput) ValidStatus() pulumi.IntPtrOutput {
	return o.ApplyT(func(v IpAccessControlItem) *int { return v.ValidStatus }).(pulumi.IntPtrOutput)
}

func (o IpAccessControlItemOutput) ValidTs() pulumi.IntOutput {
	return o.ApplyT(func(v IpAccessControlItem) int { return v.ValidTs }).(pulumi.IntOutput)
}

type IpAccessControlItemArrayOutput struct{ *pulumi.OutputState }

func (IpAccessControlItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IpAccessControlItem)(nil)).Elem()
}

func (o IpAccessControlItemArrayOutput) ToIpAccessControlItemArrayOutput() IpAccessControlItemArrayOutput {
	return o
}

func (o IpAccessControlItemArrayOutput) ToIpAccessControlItemArrayOutputWithContext(ctx context.Context) IpAccessControlItemArrayOutput {
	return o
}

func (o IpAccessControlItemArrayOutput) Index(i pulumi.IntInput) IpAccessControlItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IpAccessControlItem {
		return vs[0].([]IpAccessControlItem)[vs[1].(int)]
	}).(IpAccessControlItemOutput)
}

type SaasDomainPort struct {
	NginxServerId    *string `pulumi:"nginxServerId"`
	Port             string  `pulumi:"port"`
	Protocol         string  `pulumi:"protocol"`
	UpstreamPort     string  `pulumi:"upstreamPort"`
	UpstreamProtocol string  `pulumi:"upstreamProtocol"`
}

// SaasDomainPortInput is an input type that accepts SaasDomainPortArgs and SaasDomainPortOutput values.
// You can construct a concrete instance of `SaasDomainPortInput` via:
//
//	SaasDomainPortArgs{...}
type SaasDomainPortInput interface {
	pulumi.Input

	ToSaasDomainPortOutput() SaasDomainPortOutput
	ToSaasDomainPortOutputWithContext(context.Context) SaasDomainPortOutput
}

type SaasDomainPortArgs struct {
	NginxServerId    pulumi.StringPtrInput `pulumi:"nginxServerId"`
	Port             pulumi.StringInput    `pulumi:"port"`
	Protocol         pulumi.StringInput    `pulumi:"protocol"`
	UpstreamPort     pulumi.StringInput    `pulumi:"upstreamPort"`
	UpstreamProtocol pulumi.StringInput    `pulumi:"upstreamProtocol"`
}

func (SaasDomainPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*SaasDomainPort)(nil)).Elem()
}

func (i SaasDomainPortArgs) ToSaasDomainPortOutput() SaasDomainPortOutput {
	return i.ToSaasDomainPortOutputWithContext(context.Background())
}

func (i SaasDomainPortArgs) ToSaasDomainPortOutputWithContext(ctx context.Context) SaasDomainPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaasDomainPortOutput)
}

// SaasDomainPortArrayInput is an input type that accepts SaasDomainPortArray and SaasDomainPortArrayOutput values.
// You can construct a concrete instance of `SaasDomainPortArrayInput` via:
//
//	SaasDomainPortArray{ SaasDomainPortArgs{...} }
type SaasDomainPortArrayInput interface {
	pulumi.Input

	ToSaasDomainPortArrayOutput() SaasDomainPortArrayOutput
	ToSaasDomainPortArrayOutputWithContext(context.Context) SaasDomainPortArrayOutput
}

type SaasDomainPortArray []SaasDomainPortInput

func (SaasDomainPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SaasDomainPort)(nil)).Elem()
}

func (i SaasDomainPortArray) ToSaasDomainPortArrayOutput() SaasDomainPortArrayOutput {
	return i.ToSaasDomainPortArrayOutputWithContext(context.Background())
}

func (i SaasDomainPortArray) ToSaasDomainPortArrayOutputWithContext(ctx context.Context) SaasDomainPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(SaasDomainPortArrayOutput)
}

type SaasDomainPortOutput struct{ *pulumi.OutputState }

func (SaasDomainPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*SaasDomainPort)(nil)).Elem()
}

func (o SaasDomainPortOutput) ToSaasDomainPortOutput() SaasDomainPortOutput {
	return o
}

func (o SaasDomainPortOutput) ToSaasDomainPortOutputWithContext(ctx context.Context) SaasDomainPortOutput {
	return o
}

func (o SaasDomainPortOutput) NginxServerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v SaasDomainPort) *string { return v.NginxServerId }).(pulumi.StringPtrOutput)
}

func (o SaasDomainPortOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v SaasDomainPort) string { return v.Port }).(pulumi.StringOutput)
}

func (o SaasDomainPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v SaasDomainPort) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o SaasDomainPortOutput) UpstreamPort() pulumi.StringOutput {
	return o.ApplyT(func(v SaasDomainPort) string { return v.UpstreamPort }).(pulumi.StringOutput)
}

func (o SaasDomainPortOutput) UpstreamProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v SaasDomainPort) string { return v.UpstreamProtocol }).(pulumi.StringOutput)
}

type SaasDomainPortArrayOutput struct{ *pulumi.OutputState }

func (SaasDomainPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]SaasDomainPort)(nil)).Elem()
}

func (o SaasDomainPortArrayOutput) ToSaasDomainPortArrayOutput() SaasDomainPortArrayOutput {
	return o
}

func (o SaasDomainPortArrayOutput) ToSaasDomainPortArrayOutputWithContext(ctx context.Context) SaasDomainPortArrayOutput {
	return o
}

func (o SaasDomainPortArrayOutput) Index(i pulumi.IntInput) SaasDomainPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) SaasDomainPort {
		return vs[0].([]SaasDomainPort)[vs[1].(int)]
	}).(SaasDomainPortOutput)
}

type GetAttackLogHistogramData struct {
	Count     int `pulumi:"count"`
	TimeStamp int `pulumi:"timeStamp"`
}

// GetAttackLogHistogramDataInput is an input type that accepts GetAttackLogHistogramDataArgs and GetAttackLogHistogramDataOutput values.
// You can construct a concrete instance of `GetAttackLogHistogramDataInput` via:
//
//	GetAttackLogHistogramDataArgs{...}
type GetAttackLogHistogramDataInput interface {
	pulumi.Input

	ToGetAttackLogHistogramDataOutput() GetAttackLogHistogramDataOutput
	ToGetAttackLogHistogramDataOutputWithContext(context.Context) GetAttackLogHistogramDataOutput
}

type GetAttackLogHistogramDataArgs struct {
	Count     pulumi.IntInput `pulumi:"count"`
	TimeStamp pulumi.IntInput `pulumi:"timeStamp"`
}

func (GetAttackLogHistogramDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogHistogramData)(nil)).Elem()
}

func (i GetAttackLogHistogramDataArgs) ToGetAttackLogHistogramDataOutput() GetAttackLogHistogramDataOutput {
	return i.ToGetAttackLogHistogramDataOutputWithContext(context.Background())
}

func (i GetAttackLogHistogramDataArgs) ToGetAttackLogHistogramDataOutputWithContext(ctx context.Context) GetAttackLogHistogramDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogHistogramDataOutput)
}

// GetAttackLogHistogramDataArrayInput is an input type that accepts GetAttackLogHistogramDataArray and GetAttackLogHistogramDataArrayOutput values.
// You can construct a concrete instance of `GetAttackLogHistogramDataArrayInput` via:
//
//	GetAttackLogHistogramDataArray{ GetAttackLogHistogramDataArgs{...} }
type GetAttackLogHistogramDataArrayInput interface {
	pulumi.Input

	ToGetAttackLogHistogramDataArrayOutput() GetAttackLogHistogramDataArrayOutput
	ToGetAttackLogHistogramDataArrayOutputWithContext(context.Context) GetAttackLogHistogramDataArrayOutput
}

type GetAttackLogHistogramDataArray []GetAttackLogHistogramDataInput

func (GetAttackLogHistogramDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogHistogramData)(nil)).Elem()
}

func (i GetAttackLogHistogramDataArray) ToGetAttackLogHistogramDataArrayOutput() GetAttackLogHistogramDataArrayOutput {
	return i.ToGetAttackLogHistogramDataArrayOutputWithContext(context.Background())
}

func (i GetAttackLogHistogramDataArray) ToGetAttackLogHistogramDataArrayOutputWithContext(ctx context.Context) GetAttackLogHistogramDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogHistogramDataArrayOutput)
}

type GetAttackLogHistogramDataOutput struct{ *pulumi.OutputState }

func (GetAttackLogHistogramDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogHistogramData)(nil)).Elem()
}

func (o GetAttackLogHistogramDataOutput) ToGetAttackLogHistogramDataOutput() GetAttackLogHistogramDataOutput {
	return o
}

func (o GetAttackLogHistogramDataOutput) ToGetAttackLogHistogramDataOutputWithContext(ctx context.Context) GetAttackLogHistogramDataOutput {
	return o
}

func (o GetAttackLogHistogramDataOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogHistogramData) int { return v.Count }).(pulumi.IntOutput)
}

func (o GetAttackLogHistogramDataOutput) TimeStamp() pulumi.IntOutput {
	return o.ApplyT(func(v GetAttackLogHistogramData) int { return v.TimeStamp }).(pulumi.IntOutput)
}

type GetAttackLogHistogramDataArrayOutput struct{ *pulumi.OutputState }

func (GetAttackLogHistogramDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogHistogramData)(nil)).Elem()
}

func (o GetAttackLogHistogramDataArrayOutput) ToGetAttackLogHistogramDataArrayOutput() GetAttackLogHistogramDataArrayOutput {
	return o
}

func (o GetAttackLogHistogramDataArrayOutput) ToGetAttackLogHistogramDataArrayOutputWithContext(ctx context.Context) GetAttackLogHistogramDataArrayOutput {
	return o
}

func (o GetAttackLogHistogramDataArrayOutput) Index(i pulumi.IntInput) GetAttackLogHistogramDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackLogHistogramData {
		return vs[0].([]GetAttackLogHistogramData)[vs[1].(int)]
	}).(GetAttackLogHistogramDataOutput)
}

type GetAttackLogListData struct {
	Content   string `pulumi:"content"`
	FileName  string `pulumi:"fileName"`
	Source    string `pulumi:"source"`
	TimeStamp string `pulumi:"timeStamp"`
}

// GetAttackLogListDataInput is an input type that accepts GetAttackLogListDataArgs and GetAttackLogListDataOutput values.
// You can construct a concrete instance of `GetAttackLogListDataInput` via:
//
//	GetAttackLogListDataArgs{...}
type GetAttackLogListDataInput interface {
	pulumi.Input

	ToGetAttackLogListDataOutput() GetAttackLogListDataOutput
	ToGetAttackLogListDataOutputWithContext(context.Context) GetAttackLogListDataOutput
}

type GetAttackLogListDataArgs struct {
	Content   pulumi.StringInput `pulumi:"content"`
	FileName  pulumi.StringInput `pulumi:"fileName"`
	Source    pulumi.StringInput `pulumi:"source"`
	TimeStamp pulumi.StringInput `pulumi:"timeStamp"`
}

func (GetAttackLogListDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogListData)(nil)).Elem()
}

func (i GetAttackLogListDataArgs) ToGetAttackLogListDataOutput() GetAttackLogListDataOutput {
	return i.ToGetAttackLogListDataOutputWithContext(context.Background())
}

func (i GetAttackLogListDataArgs) ToGetAttackLogListDataOutputWithContext(ctx context.Context) GetAttackLogListDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogListDataOutput)
}

// GetAttackLogListDataArrayInput is an input type that accepts GetAttackLogListDataArray and GetAttackLogListDataArrayOutput values.
// You can construct a concrete instance of `GetAttackLogListDataArrayInput` via:
//
//	GetAttackLogListDataArray{ GetAttackLogListDataArgs{...} }
type GetAttackLogListDataArrayInput interface {
	pulumi.Input

	ToGetAttackLogListDataArrayOutput() GetAttackLogListDataArrayOutput
	ToGetAttackLogListDataArrayOutputWithContext(context.Context) GetAttackLogListDataArrayOutput
}

type GetAttackLogListDataArray []GetAttackLogListDataInput

func (GetAttackLogListDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogListData)(nil)).Elem()
}

func (i GetAttackLogListDataArray) ToGetAttackLogListDataArrayOutput() GetAttackLogListDataArrayOutput {
	return i.ToGetAttackLogListDataArrayOutputWithContext(context.Background())
}

func (i GetAttackLogListDataArray) ToGetAttackLogListDataArrayOutputWithContext(ctx context.Context) GetAttackLogListDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetAttackLogListDataArrayOutput)
}

type GetAttackLogListDataOutput struct{ *pulumi.OutputState }

func (GetAttackLogListDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetAttackLogListData)(nil)).Elem()
}

func (o GetAttackLogListDataOutput) ToGetAttackLogListDataOutput() GetAttackLogListDataOutput {
	return o
}

func (o GetAttackLogListDataOutput) ToGetAttackLogListDataOutputWithContext(ctx context.Context) GetAttackLogListDataOutput {
	return o
}

func (o GetAttackLogListDataOutput) Content() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogListData) string { return v.Content }).(pulumi.StringOutput)
}

func (o GetAttackLogListDataOutput) FileName() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogListData) string { return v.FileName }).(pulumi.StringOutput)
}

func (o GetAttackLogListDataOutput) Source() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogListData) string { return v.Source }).(pulumi.StringOutput)
}

func (o GetAttackLogListDataOutput) TimeStamp() pulumi.StringOutput {
	return o.ApplyT(func(v GetAttackLogListData) string { return v.TimeStamp }).(pulumi.StringOutput)
}

type GetAttackLogListDataArrayOutput struct{ *pulumi.OutputState }

func (GetAttackLogListDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetAttackLogListData)(nil)).Elem()
}

func (o GetAttackLogListDataArrayOutput) ToGetAttackLogListDataArrayOutput() GetAttackLogListDataArrayOutput {
	return o
}

func (o GetAttackLogListDataArrayOutput) ToGetAttackLogListDataArrayOutputWithContext(ctx context.Context) GetAttackLogListDataArrayOutput {
	return o
}

func (o GetAttackLogListDataArrayOutput) Index(i pulumi.IntInput) GetAttackLogListDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetAttackLogListData {
		return vs[0].([]GetAttackLogListData)[vs[1].(int)]
	}).(GetAttackLogListDataOutput)
}

type GetCiphersCipher struct {
	CipherId   int    `pulumi:"cipherId"`
	CipherName string `pulumi:"cipherName"`
	VersionId  int    `pulumi:"versionId"`
}

// GetCiphersCipherInput is an input type that accepts GetCiphersCipherArgs and GetCiphersCipherOutput values.
// You can construct a concrete instance of `GetCiphersCipherInput` via:
//
//	GetCiphersCipherArgs{...}
type GetCiphersCipherInput interface {
	pulumi.Input

	ToGetCiphersCipherOutput() GetCiphersCipherOutput
	ToGetCiphersCipherOutputWithContext(context.Context) GetCiphersCipherOutput
}

type GetCiphersCipherArgs struct {
	CipherId   pulumi.IntInput    `pulumi:"cipherId"`
	CipherName pulumi.StringInput `pulumi:"cipherName"`
	VersionId  pulumi.IntInput    `pulumi:"versionId"`
}

func (GetCiphersCipherArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCiphersCipher)(nil)).Elem()
}

func (i GetCiphersCipherArgs) ToGetCiphersCipherOutput() GetCiphersCipherOutput {
	return i.ToGetCiphersCipherOutputWithContext(context.Background())
}

func (i GetCiphersCipherArgs) ToGetCiphersCipherOutputWithContext(ctx context.Context) GetCiphersCipherOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCiphersCipherOutput)
}

// GetCiphersCipherArrayInput is an input type that accepts GetCiphersCipherArray and GetCiphersCipherArrayOutput values.
// You can construct a concrete instance of `GetCiphersCipherArrayInput` via:
//
//	GetCiphersCipherArray{ GetCiphersCipherArgs{...} }
type GetCiphersCipherArrayInput interface {
	pulumi.Input

	ToGetCiphersCipherArrayOutput() GetCiphersCipherArrayOutput
	ToGetCiphersCipherArrayOutputWithContext(context.Context) GetCiphersCipherArrayOutput
}

type GetCiphersCipherArray []GetCiphersCipherInput

func (GetCiphersCipherArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCiphersCipher)(nil)).Elem()
}

func (i GetCiphersCipherArray) ToGetCiphersCipherArrayOutput() GetCiphersCipherArrayOutput {
	return i.ToGetCiphersCipherArrayOutputWithContext(context.Background())
}

func (i GetCiphersCipherArray) ToGetCiphersCipherArrayOutputWithContext(ctx context.Context) GetCiphersCipherArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetCiphersCipherArrayOutput)
}

type GetCiphersCipherOutput struct{ *pulumi.OutputState }

func (GetCiphersCipherOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCiphersCipher)(nil)).Elem()
}

func (o GetCiphersCipherOutput) ToGetCiphersCipherOutput() GetCiphersCipherOutput {
	return o
}

func (o GetCiphersCipherOutput) ToGetCiphersCipherOutputWithContext(ctx context.Context) GetCiphersCipherOutput {
	return o
}

func (o GetCiphersCipherOutput) CipherId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCiphersCipher) int { return v.CipherId }).(pulumi.IntOutput)
}

func (o GetCiphersCipherOutput) CipherName() pulumi.StringOutput {
	return o.ApplyT(func(v GetCiphersCipher) string { return v.CipherName }).(pulumi.StringOutput)
}

func (o GetCiphersCipherOutput) VersionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetCiphersCipher) int { return v.VersionId }).(pulumi.IntOutput)
}

type GetCiphersCipherArrayOutput struct{ *pulumi.OutputState }

func (GetCiphersCipherArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetCiphersCipher)(nil)).Elem()
}

func (o GetCiphersCipherArrayOutput) ToGetCiphersCipherArrayOutput() GetCiphersCipherArrayOutput {
	return o
}

func (o GetCiphersCipherArrayOutput) ToGetCiphersCipherArrayOutputWithContext(ctx context.Context) GetCiphersCipherArrayOutput {
	return o
}

func (o GetCiphersCipherArrayOutput) Index(i pulumi.IntInput) GetCiphersCipherOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetCiphersCipher {
		return vs[0].([]GetCiphersCipher)[vs[1].(int)]
	}).(GetCiphersCipherOutput)
}

type GetDomainsDomain struct {
	AlbType          string                            `pulumi:"albType"`
	ApiStatus        int                               `pulumi:"apiStatus"`
	AppId            int                               `pulumi:"appId"`
	BotStatus        int                               `pulumi:"botStatus"`
	CcLists          []string                          `pulumi:"ccLists"`
	CdcClusters      string                            `pulumi:"cdcClusters"`
	ClsStatus        int                               `pulumi:"clsStatus"`
	Cname            string                            `pulumi:"cname"`
	CreateTime       string                            `pulumi:"createTime"`
	Domain           string                            `pulumi:"domain"`
	DomainId         string                            `pulumi:"domainId"`
	Edition          string                            `pulumi:"edition"`
	Engine           int                               `pulumi:"engine"`
	FlowMode         int                               `pulumi:"flowMode"`
	InstanceId       string                            `pulumi:"instanceId"`
	InstanceName     string                            `pulumi:"instanceName"`
	Ipv6Status       int                               `pulumi:"ipv6Status"`
	Level            int                               `pulumi:"level"`
	LoadBalancerSets []GetDomainsDomainLoadBalancerSet `pulumi:"loadBalancerSets"`
	Mode             int                               `pulumi:"mode"`
	Ports            []GetDomainsDomainPort            `pulumi:"ports"`
	PostCkafkaStatus int                               `pulumi:"postCkafkaStatus"`
	PostClsStatus    int                               `pulumi:"postClsStatus"`
	Region           string                            `pulumi:"region"`
	RsLists          []string                          `pulumi:"rsLists"`
	SgDetail         string                            `pulumi:"sgDetail"`
	SgState          int                               `pulumi:"sgState"`
	State            int                               `pulumi:"state"`
	Status           int                               `pulumi:"status"`
}

// GetDomainsDomainInput is an input type that accepts GetDomainsDomainArgs and GetDomainsDomainOutput values.
// You can construct a concrete instance of `GetDomainsDomainInput` via:
//
//	GetDomainsDomainArgs{...}
type GetDomainsDomainInput interface {
	pulumi.Input

	ToGetDomainsDomainOutput() GetDomainsDomainOutput
	ToGetDomainsDomainOutputWithContext(context.Context) GetDomainsDomainOutput
}

type GetDomainsDomainArgs struct {
	AlbType          pulumi.StringInput                        `pulumi:"albType"`
	ApiStatus        pulumi.IntInput                           `pulumi:"apiStatus"`
	AppId            pulumi.IntInput                           `pulumi:"appId"`
	BotStatus        pulumi.IntInput                           `pulumi:"botStatus"`
	CcLists          pulumi.StringArrayInput                   `pulumi:"ccLists"`
	CdcClusters      pulumi.StringInput                        `pulumi:"cdcClusters"`
	ClsStatus        pulumi.IntInput                           `pulumi:"clsStatus"`
	Cname            pulumi.StringInput                        `pulumi:"cname"`
	CreateTime       pulumi.StringInput                        `pulumi:"createTime"`
	Domain           pulumi.StringInput                        `pulumi:"domain"`
	DomainId         pulumi.StringInput                        `pulumi:"domainId"`
	Edition          pulumi.StringInput                        `pulumi:"edition"`
	Engine           pulumi.IntInput                           `pulumi:"engine"`
	FlowMode         pulumi.IntInput                           `pulumi:"flowMode"`
	InstanceId       pulumi.StringInput                        `pulumi:"instanceId"`
	InstanceName     pulumi.StringInput                        `pulumi:"instanceName"`
	Ipv6Status       pulumi.IntInput                           `pulumi:"ipv6Status"`
	Level            pulumi.IntInput                           `pulumi:"level"`
	LoadBalancerSets GetDomainsDomainLoadBalancerSetArrayInput `pulumi:"loadBalancerSets"`
	Mode             pulumi.IntInput                           `pulumi:"mode"`
	Ports            GetDomainsDomainPortArrayInput            `pulumi:"ports"`
	PostCkafkaStatus pulumi.IntInput                           `pulumi:"postCkafkaStatus"`
	PostClsStatus    pulumi.IntInput                           `pulumi:"postClsStatus"`
	Region           pulumi.StringInput                        `pulumi:"region"`
	RsLists          pulumi.StringArrayInput                   `pulumi:"rsLists"`
	SgDetail         pulumi.StringInput                        `pulumi:"sgDetail"`
	SgState          pulumi.IntInput                           `pulumi:"sgState"`
	State            pulumi.IntInput                           `pulumi:"state"`
	Status           pulumi.IntInput                           `pulumi:"status"`
}

func (GetDomainsDomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return i.ToGetDomainsDomainOutputWithContext(context.Background())
}

func (i GetDomainsDomainArgs) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainOutput)
}

// GetDomainsDomainArrayInput is an input type that accepts GetDomainsDomainArray and GetDomainsDomainArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainArrayInput` via:
//
//	GetDomainsDomainArray{ GetDomainsDomainArgs{...} }
type GetDomainsDomainArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput
	ToGetDomainsDomainArrayOutputWithContext(context.Context) GetDomainsDomainArrayOutput
}

type GetDomainsDomainArray []GetDomainsDomainInput

func (GetDomainsDomainArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return i.ToGetDomainsDomainArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainArray) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainArrayOutput)
}

type GetDomainsDomainOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutput() GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) ToGetDomainsDomainOutputWithContext(ctx context.Context) GetDomainsDomainOutput {
	return o
}

func (o GetDomainsDomainOutput) AlbType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.AlbType }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) ApiStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.ApiStatus }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) AppId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.AppId }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) BotStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.BotStatus }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) CcLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []string { return v.CcLists }).(pulumi.StringArrayOutput)
}

func (o GetDomainsDomainOutput) CdcClusters() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.CdcClusters }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) ClsStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.ClsStatus }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) Cname() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Cname }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.DomainId }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Edition }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) Engine() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Engine }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) FlowMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.FlowMode }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) Ipv6Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Ipv6Status }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) Level() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Level }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) LoadBalancerSets() GetDomainsDomainLoadBalancerSetArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []GetDomainsDomainLoadBalancerSet { return v.LoadBalancerSets }).(GetDomainsDomainLoadBalancerSetArrayOutput)
}

func (o GetDomainsDomainOutput) Mode() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Mode }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) Ports() GetDomainsDomainPortArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []GetDomainsDomainPort { return v.Ports }).(GetDomainsDomainPortArrayOutput)
}

func (o GetDomainsDomainOutput) PostCkafkaStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.PostCkafkaStatus }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) PostClsStatus() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.PostClsStatus }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) RsLists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetDomainsDomain) []string { return v.RsLists }).(pulumi.StringArrayOutput)
}

func (o GetDomainsDomainOutput) SgDetail() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomain) string { return v.SgDetail }).(pulumi.StringOutput)
}

func (o GetDomainsDomainOutput) SgState() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.SgState }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) State() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.State }).(pulumi.IntOutput)
}

func (o GetDomainsDomainOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomain) int { return v.Status }).(pulumi.IntOutput)
}

type GetDomainsDomainArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomain)(nil)).Elem()
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutput() GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) ToGetDomainsDomainArrayOutputWithContext(ctx context.Context) GetDomainsDomainArrayOutput {
	return o
}

func (o GetDomainsDomainArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomain {
		return vs[0].([]GetDomainsDomain)[vs[1].(int)]
	}).(GetDomainsDomainOutput)
}

type GetDomainsDomainLoadBalancerSet struct {
	ListenerId       string `pulumi:"listenerId"`
	ListenerName     string `pulumi:"listenerName"`
	LoadBalancerId   string `pulumi:"loadBalancerId"`
	LoadBalancerName string `pulumi:"loadBalancerName"`
	LoadBalancerType string `pulumi:"loadBalancerType"`
	NumericalVpcId   int    `pulumi:"numericalVpcId"`
	Protocol         string `pulumi:"protocol"`
	Region           string `pulumi:"region"`
	Vip              string `pulumi:"vip"`
	Vport            int    `pulumi:"vport"`
	Zone             string `pulumi:"zone"`
}

// GetDomainsDomainLoadBalancerSetInput is an input type that accepts GetDomainsDomainLoadBalancerSetArgs and GetDomainsDomainLoadBalancerSetOutput values.
// You can construct a concrete instance of `GetDomainsDomainLoadBalancerSetInput` via:
//
//	GetDomainsDomainLoadBalancerSetArgs{...}
type GetDomainsDomainLoadBalancerSetInput interface {
	pulumi.Input

	ToGetDomainsDomainLoadBalancerSetOutput() GetDomainsDomainLoadBalancerSetOutput
	ToGetDomainsDomainLoadBalancerSetOutputWithContext(context.Context) GetDomainsDomainLoadBalancerSetOutput
}

type GetDomainsDomainLoadBalancerSetArgs struct {
	ListenerId       pulumi.StringInput `pulumi:"listenerId"`
	ListenerName     pulumi.StringInput `pulumi:"listenerName"`
	LoadBalancerId   pulumi.StringInput `pulumi:"loadBalancerId"`
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	LoadBalancerType pulumi.StringInput `pulumi:"loadBalancerType"`
	NumericalVpcId   pulumi.IntInput    `pulumi:"numericalVpcId"`
	Protocol         pulumi.StringInput `pulumi:"protocol"`
	Region           pulumi.StringInput `pulumi:"region"`
	Vip              pulumi.StringInput `pulumi:"vip"`
	Vport            pulumi.IntInput    `pulumi:"vport"`
	Zone             pulumi.StringInput `pulumi:"zone"`
}

func (GetDomainsDomainLoadBalancerSetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainLoadBalancerSet)(nil)).Elem()
}

func (i GetDomainsDomainLoadBalancerSetArgs) ToGetDomainsDomainLoadBalancerSetOutput() GetDomainsDomainLoadBalancerSetOutput {
	return i.ToGetDomainsDomainLoadBalancerSetOutputWithContext(context.Background())
}

func (i GetDomainsDomainLoadBalancerSetArgs) ToGetDomainsDomainLoadBalancerSetOutputWithContext(ctx context.Context) GetDomainsDomainLoadBalancerSetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainLoadBalancerSetOutput)
}

// GetDomainsDomainLoadBalancerSetArrayInput is an input type that accepts GetDomainsDomainLoadBalancerSetArray and GetDomainsDomainLoadBalancerSetArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainLoadBalancerSetArrayInput` via:
//
//	GetDomainsDomainLoadBalancerSetArray{ GetDomainsDomainLoadBalancerSetArgs{...} }
type GetDomainsDomainLoadBalancerSetArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainLoadBalancerSetArrayOutput() GetDomainsDomainLoadBalancerSetArrayOutput
	ToGetDomainsDomainLoadBalancerSetArrayOutputWithContext(context.Context) GetDomainsDomainLoadBalancerSetArrayOutput
}

type GetDomainsDomainLoadBalancerSetArray []GetDomainsDomainLoadBalancerSetInput

func (GetDomainsDomainLoadBalancerSetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainLoadBalancerSet)(nil)).Elem()
}

func (i GetDomainsDomainLoadBalancerSetArray) ToGetDomainsDomainLoadBalancerSetArrayOutput() GetDomainsDomainLoadBalancerSetArrayOutput {
	return i.ToGetDomainsDomainLoadBalancerSetArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainLoadBalancerSetArray) ToGetDomainsDomainLoadBalancerSetArrayOutputWithContext(ctx context.Context) GetDomainsDomainLoadBalancerSetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainLoadBalancerSetArrayOutput)
}

type GetDomainsDomainLoadBalancerSetOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainLoadBalancerSetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainLoadBalancerSet)(nil)).Elem()
}

func (o GetDomainsDomainLoadBalancerSetOutput) ToGetDomainsDomainLoadBalancerSetOutput() GetDomainsDomainLoadBalancerSetOutput {
	return o
}

func (o GetDomainsDomainLoadBalancerSetOutput) ToGetDomainsDomainLoadBalancerSetOutputWithContext(ctx context.Context) GetDomainsDomainLoadBalancerSetOutput {
	return o
}

func (o GetDomainsDomainLoadBalancerSetOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.ListenerName }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) NumericalVpcId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) int { return v.NumericalVpcId }).(pulumi.IntOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.Vip }).(pulumi.StringOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) int { return v.Vport }).(pulumi.IntOutput)
}

func (o GetDomainsDomainLoadBalancerSetOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainLoadBalancerSet) string { return v.Zone }).(pulumi.StringOutput)
}

type GetDomainsDomainLoadBalancerSetArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainLoadBalancerSetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainLoadBalancerSet)(nil)).Elem()
}

func (o GetDomainsDomainLoadBalancerSetArrayOutput) ToGetDomainsDomainLoadBalancerSetArrayOutput() GetDomainsDomainLoadBalancerSetArrayOutput {
	return o
}

func (o GetDomainsDomainLoadBalancerSetArrayOutput) ToGetDomainsDomainLoadBalancerSetArrayOutputWithContext(ctx context.Context) GetDomainsDomainLoadBalancerSetArrayOutput {
	return o
}

func (o GetDomainsDomainLoadBalancerSetArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainLoadBalancerSetOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainLoadBalancerSet {
		return vs[0].([]GetDomainsDomainLoadBalancerSet)[vs[1].(int)]
	}).(GetDomainsDomainLoadBalancerSetOutput)
}

type GetDomainsDomainPort struct {
	NginxServerId    int    `pulumi:"nginxServerId"`
	Port             string `pulumi:"port"`
	Protocol         string `pulumi:"protocol"`
	UpstreamPort     string `pulumi:"upstreamPort"`
	UpstreamProtocol string `pulumi:"upstreamProtocol"`
}

// GetDomainsDomainPortInput is an input type that accepts GetDomainsDomainPortArgs and GetDomainsDomainPortOutput values.
// You can construct a concrete instance of `GetDomainsDomainPortInput` via:
//
//	GetDomainsDomainPortArgs{...}
type GetDomainsDomainPortInput interface {
	pulumi.Input

	ToGetDomainsDomainPortOutput() GetDomainsDomainPortOutput
	ToGetDomainsDomainPortOutputWithContext(context.Context) GetDomainsDomainPortOutput
}

type GetDomainsDomainPortArgs struct {
	NginxServerId    pulumi.IntInput    `pulumi:"nginxServerId"`
	Port             pulumi.StringInput `pulumi:"port"`
	Protocol         pulumi.StringInput `pulumi:"protocol"`
	UpstreamPort     pulumi.StringInput `pulumi:"upstreamPort"`
	UpstreamProtocol pulumi.StringInput `pulumi:"upstreamProtocol"`
}

func (GetDomainsDomainPortArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainPort)(nil)).Elem()
}

func (i GetDomainsDomainPortArgs) ToGetDomainsDomainPortOutput() GetDomainsDomainPortOutput {
	return i.ToGetDomainsDomainPortOutputWithContext(context.Background())
}

func (i GetDomainsDomainPortArgs) ToGetDomainsDomainPortOutputWithContext(ctx context.Context) GetDomainsDomainPortOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainPortOutput)
}

// GetDomainsDomainPortArrayInput is an input type that accepts GetDomainsDomainPortArray and GetDomainsDomainPortArrayOutput values.
// You can construct a concrete instance of `GetDomainsDomainPortArrayInput` via:
//
//	GetDomainsDomainPortArray{ GetDomainsDomainPortArgs{...} }
type GetDomainsDomainPortArrayInput interface {
	pulumi.Input

	ToGetDomainsDomainPortArrayOutput() GetDomainsDomainPortArrayOutput
	ToGetDomainsDomainPortArrayOutputWithContext(context.Context) GetDomainsDomainPortArrayOutput
}

type GetDomainsDomainPortArray []GetDomainsDomainPortInput

func (GetDomainsDomainPortArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainPort)(nil)).Elem()
}

func (i GetDomainsDomainPortArray) ToGetDomainsDomainPortArrayOutput() GetDomainsDomainPortArrayOutput {
	return i.ToGetDomainsDomainPortArrayOutputWithContext(context.Background())
}

func (i GetDomainsDomainPortArray) ToGetDomainsDomainPortArrayOutputWithContext(ctx context.Context) GetDomainsDomainPortArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetDomainsDomainPortArrayOutput)
}

type GetDomainsDomainPortOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainPortOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainsDomainPort)(nil)).Elem()
}

func (o GetDomainsDomainPortOutput) ToGetDomainsDomainPortOutput() GetDomainsDomainPortOutput {
	return o
}

func (o GetDomainsDomainPortOutput) ToGetDomainsDomainPortOutputWithContext(ctx context.Context) GetDomainsDomainPortOutput {
	return o
}

func (o GetDomainsDomainPortOutput) NginxServerId() pulumi.IntOutput {
	return o.ApplyT(func(v GetDomainsDomainPort) int { return v.NginxServerId }).(pulumi.IntOutput)
}

func (o GetDomainsDomainPortOutput) Port() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainPort) string { return v.Port }).(pulumi.StringOutput)
}

func (o GetDomainsDomainPortOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainPort) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetDomainsDomainPortOutput) UpstreamPort() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainPort) string { return v.UpstreamPort }).(pulumi.StringOutput)
}

func (o GetDomainsDomainPortOutput) UpstreamProtocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainsDomainPort) string { return v.UpstreamProtocol }).(pulumi.StringOutput)
}

type GetDomainsDomainPortArrayOutput struct{ *pulumi.OutputState }

func (GetDomainsDomainPortArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetDomainsDomainPort)(nil)).Elem()
}

func (o GetDomainsDomainPortArrayOutput) ToGetDomainsDomainPortArrayOutput() GetDomainsDomainPortArrayOutput {
	return o
}

func (o GetDomainsDomainPortArrayOutput) ToGetDomainsDomainPortArrayOutputWithContext(ctx context.Context) GetDomainsDomainPortArrayOutput {
	return o
}

func (o GetDomainsDomainPortArrayOutput) Index(i pulumi.IntInput) GetDomainsDomainPortOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetDomainsDomainPort {
		return vs[0].([]GetDomainsDomainPort)[vs[1].(int)]
	}).(GetDomainsDomainPortOutput)
}

type GetFindDomainsList struct {
	Appid       int      `pulumi:"appid"`
	Domain      string   `pulumi:"domain"`
	DomainId    string   `pulumi:"domainId"`
	Edition     string   `pulumi:"edition"`
	FindTime    string   `pulumi:"findTime"`
	InstanceId  string   `pulumi:"instanceId"`
	Ips         []string `pulumi:"ips"`
	IsWafDomain int      `pulumi:"isWafDomain"`
}

// GetFindDomainsListInput is an input type that accepts GetFindDomainsListArgs and GetFindDomainsListOutput values.
// You can construct a concrete instance of `GetFindDomainsListInput` via:
//
//	GetFindDomainsListArgs{...}
type GetFindDomainsListInput interface {
	pulumi.Input

	ToGetFindDomainsListOutput() GetFindDomainsListOutput
	ToGetFindDomainsListOutputWithContext(context.Context) GetFindDomainsListOutput
}

type GetFindDomainsListArgs struct {
	Appid       pulumi.IntInput         `pulumi:"appid"`
	Domain      pulumi.StringInput      `pulumi:"domain"`
	DomainId    pulumi.StringInput      `pulumi:"domainId"`
	Edition     pulumi.StringInput      `pulumi:"edition"`
	FindTime    pulumi.StringInput      `pulumi:"findTime"`
	InstanceId  pulumi.StringInput      `pulumi:"instanceId"`
	Ips         pulumi.StringArrayInput `pulumi:"ips"`
	IsWafDomain pulumi.IntInput         `pulumi:"isWafDomain"`
}

func (GetFindDomainsListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFindDomainsList)(nil)).Elem()
}

func (i GetFindDomainsListArgs) ToGetFindDomainsListOutput() GetFindDomainsListOutput {
	return i.ToGetFindDomainsListOutputWithContext(context.Background())
}

func (i GetFindDomainsListArgs) ToGetFindDomainsListOutputWithContext(ctx context.Context) GetFindDomainsListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFindDomainsListOutput)
}

// GetFindDomainsListArrayInput is an input type that accepts GetFindDomainsListArray and GetFindDomainsListArrayOutput values.
// You can construct a concrete instance of `GetFindDomainsListArrayInput` via:
//
//	GetFindDomainsListArray{ GetFindDomainsListArgs{...} }
type GetFindDomainsListArrayInput interface {
	pulumi.Input

	ToGetFindDomainsListArrayOutput() GetFindDomainsListArrayOutput
	ToGetFindDomainsListArrayOutputWithContext(context.Context) GetFindDomainsListArrayOutput
}

type GetFindDomainsListArray []GetFindDomainsListInput

func (GetFindDomainsListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFindDomainsList)(nil)).Elem()
}

func (i GetFindDomainsListArray) ToGetFindDomainsListArrayOutput() GetFindDomainsListArrayOutput {
	return i.ToGetFindDomainsListArrayOutputWithContext(context.Background())
}

func (i GetFindDomainsListArray) ToGetFindDomainsListArrayOutputWithContext(ctx context.Context) GetFindDomainsListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetFindDomainsListArrayOutput)
}

type GetFindDomainsListOutput struct{ *pulumi.OutputState }

func (GetFindDomainsListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetFindDomainsList)(nil)).Elem()
}

func (o GetFindDomainsListOutput) ToGetFindDomainsListOutput() GetFindDomainsListOutput {
	return o
}

func (o GetFindDomainsListOutput) ToGetFindDomainsListOutputWithContext(ctx context.Context) GetFindDomainsListOutput {
	return o
}

func (o GetFindDomainsListOutput) Appid() pulumi.IntOutput {
	return o.ApplyT(func(v GetFindDomainsList) int { return v.Appid }).(pulumi.IntOutput)
}

func (o GetFindDomainsListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetFindDomainsList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetFindDomainsListOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFindDomainsList) string { return v.DomainId }).(pulumi.StringOutput)
}

func (o GetFindDomainsListOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetFindDomainsList) string { return v.Edition }).(pulumi.StringOutput)
}

func (o GetFindDomainsListOutput) FindTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetFindDomainsList) string { return v.FindTime }).(pulumi.StringOutput)
}

func (o GetFindDomainsListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetFindDomainsList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetFindDomainsListOutput) Ips() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetFindDomainsList) []string { return v.Ips }).(pulumi.StringArrayOutput)
}

func (o GetFindDomainsListOutput) IsWafDomain() pulumi.IntOutput {
	return o.ApplyT(func(v GetFindDomainsList) int { return v.IsWafDomain }).(pulumi.IntOutput)
}

type GetFindDomainsListArrayOutput struct{ *pulumi.OutputState }

func (GetFindDomainsListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetFindDomainsList)(nil)).Elem()
}

func (o GetFindDomainsListArrayOutput) ToGetFindDomainsListArrayOutput() GetFindDomainsListArrayOutput {
	return o
}

func (o GetFindDomainsListArrayOutput) ToGetFindDomainsListArrayOutputWithContext(ctx context.Context) GetFindDomainsListArrayOutput {
	return o
}

func (o GetFindDomainsListArrayOutput) Index(i pulumi.IntInput) GetFindDomainsListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetFindDomainsList {
		return vs[0].([]GetFindDomainsList)[vs[1].(int)]
	}).(GetFindDomainsListOutput)
}

type GetInstanceQpsLimitQpsData struct {
	ElasticBillingDefault int `pulumi:"elasticBillingDefault"`
	ElasticBillingMax     int `pulumi:"elasticBillingMax"`
	ElasticBillingMin     int `pulumi:"elasticBillingMin"`
	QpsExtendIntlMax      int `pulumi:"qpsExtendIntlMax"`
	QpsExtendMax          int `pulumi:"qpsExtendMax"`
}

// GetInstanceQpsLimitQpsDataInput is an input type that accepts GetInstanceQpsLimitQpsDataArgs and GetInstanceQpsLimitQpsDataOutput values.
// You can construct a concrete instance of `GetInstanceQpsLimitQpsDataInput` via:
//
//	GetInstanceQpsLimitQpsDataArgs{...}
type GetInstanceQpsLimitQpsDataInput interface {
	pulumi.Input

	ToGetInstanceQpsLimitQpsDataOutput() GetInstanceQpsLimitQpsDataOutput
	ToGetInstanceQpsLimitQpsDataOutputWithContext(context.Context) GetInstanceQpsLimitQpsDataOutput
}

type GetInstanceQpsLimitQpsDataArgs struct {
	ElasticBillingDefault pulumi.IntInput `pulumi:"elasticBillingDefault"`
	ElasticBillingMax     pulumi.IntInput `pulumi:"elasticBillingMax"`
	ElasticBillingMin     pulumi.IntInput `pulumi:"elasticBillingMin"`
	QpsExtendIntlMax      pulumi.IntInput `pulumi:"qpsExtendIntlMax"`
	QpsExtendMax          pulumi.IntInput `pulumi:"qpsExtendMax"`
}

func (GetInstanceQpsLimitQpsDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceQpsLimitQpsData)(nil)).Elem()
}

func (i GetInstanceQpsLimitQpsDataArgs) ToGetInstanceQpsLimitQpsDataOutput() GetInstanceQpsLimitQpsDataOutput {
	return i.ToGetInstanceQpsLimitQpsDataOutputWithContext(context.Background())
}

func (i GetInstanceQpsLimitQpsDataArgs) ToGetInstanceQpsLimitQpsDataOutputWithContext(ctx context.Context) GetInstanceQpsLimitQpsDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceQpsLimitQpsDataOutput)
}

// GetInstanceQpsLimitQpsDataArrayInput is an input type that accepts GetInstanceQpsLimitQpsDataArray and GetInstanceQpsLimitQpsDataArrayOutput values.
// You can construct a concrete instance of `GetInstanceQpsLimitQpsDataArrayInput` via:
//
//	GetInstanceQpsLimitQpsDataArray{ GetInstanceQpsLimitQpsDataArgs{...} }
type GetInstanceQpsLimitQpsDataArrayInput interface {
	pulumi.Input

	ToGetInstanceQpsLimitQpsDataArrayOutput() GetInstanceQpsLimitQpsDataArrayOutput
	ToGetInstanceQpsLimitQpsDataArrayOutputWithContext(context.Context) GetInstanceQpsLimitQpsDataArrayOutput
}

type GetInstanceQpsLimitQpsDataArray []GetInstanceQpsLimitQpsDataInput

func (GetInstanceQpsLimitQpsDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceQpsLimitQpsData)(nil)).Elem()
}

func (i GetInstanceQpsLimitQpsDataArray) ToGetInstanceQpsLimitQpsDataArrayOutput() GetInstanceQpsLimitQpsDataArrayOutput {
	return i.ToGetInstanceQpsLimitQpsDataArrayOutputWithContext(context.Background())
}

func (i GetInstanceQpsLimitQpsDataArray) ToGetInstanceQpsLimitQpsDataArrayOutputWithContext(ctx context.Context) GetInstanceQpsLimitQpsDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstanceQpsLimitQpsDataArrayOutput)
}

type GetInstanceQpsLimitQpsDataOutput struct{ *pulumi.OutputState }

func (GetInstanceQpsLimitQpsDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstanceQpsLimitQpsData)(nil)).Elem()
}

func (o GetInstanceQpsLimitQpsDataOutput) ToGetInstanceQpsLimitQpsDataOutput() GetInstanceQpsLimitQpsDataOutput {
	return o
}

func (o GetInstanceQpsLimitQpsDataOutput) ToGetInstanceQpsLimitQpsDataOutputWithContext(ctx context.Context) GetInstanceQpsLimitQpsDataOutput {
	return o
}

func (o GetInstanceQpsLimitQpsDataOutput) ElasticBillingDefault() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitQpsData) int { return v.ElasticBillingDefault }).(pulumi.IntOutput)
}

func (o GetInstanceQpsLimitQpsDataOutput) ElasticBillingMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitQpsData) int { return v.ElasticBillingMax }).(pulumi.IntOutput)
}

func (o GetInstanceQpsLimitQpsDataOutput) ElasticBillingMin() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitQpsData) int { return v.ElasticBillingMin }).(pulumi.IntOutput)
}

func (o GetInstanceQpsLimitQpsDataOutput) QpsExtendIntlMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitQpsData) int { return v.QpsExtendIntlMax }).(pulumi.IntOutput)
}

func (o GetInstanceQpsLimitQpsDataOutput) QpsExtendMax() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstanceQpsLimitQpsData) int { return v.QpsExtendMax }).(pulumi.IntOutput)
}

type GetInstanceQpsLimitQpsDataArrayOutput struct{ *pulumi.OutputState }

func (GetInstanceQpsLimitQpsDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstanceQpsLimitQpsData)(nil)).Elem()
}

func (o GetInstanceQpsLimitQpsDataArrayOutput) ToGetInstanceQpsLimitQpsDataArrayOutput() GetInstanceQpsLimitQpsDataArrayOutput {
	return o
}

func (o GetInstanceQpsLimitQpsDataArrayOutput) ToGetInstanceQpsLimitQpsDataArrayOutputWithContext(ctx context.Context) GetInstanceQpsLimitQpsDataArrayOutput {
	return o
}

func (o GetInstanceQpsLimitQpsDataArrayOutput) Index(i pulumi.IntInput) GetInstanceQpsLimitQpsDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstanceQpsLimitQpsData {
		return vs[0].([]GetInstanceQpsLimitQpsData)[vs[1].(int)]
	}).(GetInstanceQpsLimitQpsDataOutput)
}

type GetPeakPointsPoint struct {
	Access              int `pulumi:"access"`
	Attack              int `pulumi:"attack"`
	BotAccess           int `pulumi:"botAccess"`
	Cc                  int `pulumi:"cc"`
	Down                int `pulumi:"down"`
	StatusClientError   int `pulumi:"statusClientError"`
	StatusOk            int `pulumi:"statusOk"`
	StatusRedirect      int `pulumi:"statusRedirect"`
	StatusServerError   int `pulumi:"statusServerError"`
	Time                int `pulumi:"time"`
	Up                  int `pulumi:"up"`
	UpstreamClientError int `pulumi:"upstreamClientError"`
	UpstreamRedirect    int `pulumi:"upstreamRedirect"`
	UpstreamServerError int `pulumi:"upstreamServerError"`
}

// GetPeakPointsPointInput is an input type that accepts GetPeakPointsPointArgs and GetPeakPointsPointOutput values.
// You can construct a concrete instance of `GetPeakPointsPointInput` via:
//
//	GetPeakPointsPointArgs{...}
type GetPeakPointsPointInput interface {
	pulumi.Input

	ToGetPeakPointsPointOutput() GetPeakPointsPointOutput
	ToGetPeakPointsPointOutputWithContext(context.Context) GetPeakPointsPointOutput
}

type GetPeakPointsPointArgs struct {
	Access              pulumi.IntInput `pulumi:"access"`
	Attack              pulumi.IntInput `pulumi:"attack"`
	BotAccess           pulumi.IntInput `pulumi:"botAccess"`
	Cc                  pulumi.IntInput `pulumi:"cc"`
	Down                pulumi.IntInput `pulumi:"down"`
	StatusClientError   pulumi.IntInput `pulumi:"statusClientError"`
	StatusOk            pulumi.IntInput `pulumi:"statusOk"`
	StatusRedirect      pulumi.IntInput `pulumi:"statusRedirect"`
	StatusServerError   pulumi.IntInput `pulumi:"statusServerError"`
	Time                pulumi.IntInput `pulumi:"time"`
	Up                  pulumi.IntInput `pulumi:"up"`
	UpstreamClientError pulumi.IntInput `pulumi:"upstreamClientError"`
	UpstreamRedirect    pulumi.IntInput `pulumi:"upstreamRedirect"`
	UpstreamServerError pulumi.IntInput `pulumi:"upstreamServerError"`
}

func (GetPeakPointsPointArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeakPointsPoint)(nil)).Elem()
}

func (i GetPeakPointsPointArgs) ToGetPeakPointsPointOutput() GetPeakPointsPointOutput {
	return i.ToGetPeakPointsPointOutputWithContext(context.Background())
}

func (i GetPeakPointsPointArgs) ToGetPeakPointsPointOutputWithContext(ctx context.Context) GetPeakPointsPointOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeakPointsPointOutput)
}

// GetPeakPointsPointArrayInput is an input type that accepts GetPeakPointsPointArray and GetPeakPointsPointArrayOutput values.
// You can construct a concrete instance of `GetPeakPointsPointArrayInput` via:
//
//	GetPeakPointsPointArray{ GetPeakPointsPointArgs{...} }
type GetPeakPointsPointArrayInput interface {
	pulumi.Input

	ToGetPeakPointsPointArrayOutput() GetPeakPointsPointArrayOutput
	ToGetPeakPointsPointArrayOutputWithContext(context.Context) GetPeakPointsPointArrayOutput
}

type GetPeakPointsPointArray []GetPeakPointsPointInput

func (GetPeakPointsPointArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeakPointsPoint)(nil)).Elem()
}

func (i GetPeakPointsPointArray) ToGetPeakPointsPointArrayOutput() GetPeakPointsPointArrayOutput {
	return i.ToGetPeakPointsPointArrayOutputWithContext(context.Background())
}

func (i GetPeakPointsPointArray) ToGetPeakPointsPointArrayOutputWithContext(ctx context.Context) GetPeakPointsPointArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetPeakPointsPointArrayOutput)
}

type GetPeakPointsPointOutput struct{ *pulumi.OutputState }

func (GetPeakPointsPointOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetPeakPointsPoint)(nil)).Elem()
}

func (o GetPeakPointsPointOutput) ToGetPeakPointsPointOutput() GetPeakPointsPointOutput {
	return o
}

func (o GetPeakPointsPointOutput) ToGetPeakPointsPointOutputWithContext(ctx context.Context) GetPeakPointsPointOutput {
	return o
}

func (o GetPeakPointsPointOutput) Access() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Access }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) Attack() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Attack }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) BotAccess() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.BotAccess }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) Cc() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Cc }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) Down() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Down }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) StatusClientError() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.StatusClientError }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) StatusOk() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.StatusOk }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) StatusRedirect() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.StatusRedirect }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) StatusServerError() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.StatusServerError }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) Time() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Time }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) Up() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.Up }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) UpstreamClientError() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.UpstreamClientError }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) UpstreamRedirect() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.UpstreamRedirect }).(pulumi.IntOutput)
}

func (o GetPeakPointsPointOutput) UpstreamServerError() pulumi.IntOutput {
	return o.ApplyT(func(v GetPeakPointsPoint) int { return v.UpstreamServerError }).(pulumi.IntOutput)
}

type GetPeakPointsPointArrayOutput struct{ *pulumi.OutputState }

func (GetPeakPointsPointArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetPeakPointsPoint)(nil)).Elem()
}

func (o GetPeakPointsPointArrayOutput) ToGetPeakPointsPointArrayOutput() GetPeakPointsPointArrayOutput {
	return o
}

func (o GetPeakPointsPointArrayOutput) ToGetPeakPointsPointArrayOutputWithContext(ctx context.Context) GetPeakPointsPointArrayOutput {
	return o
}

func (o GetPeakPointsPointArrayOutput) Index(i pulumi.IntInput) GetPeakPointsPointOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetPeakPointsPoint {
		return vs[0].([]GetPeakPointsPoint)[vs[1].(int)]
	}).(GetPeakPointsPointOutput)
}

type GetTlsVersionsTl struct {
	VersionId   int    `pulumi:"versionId"`
	VersionName string `pulumi:"versionName"`
}

// GetTlsVersionsTlInput is an input type that accepts GetTlsVersionsTlArgs and GetTlsVersionsTlOutput values.
// You can construct a concrete instance of `GetTlsVersionsTlInput` via:
//
//	GetTlsVersionsTlArgs{...}
type GetTlsVersionsTlInput interface {
	pulumi.Input

	ToGetTlsVersionsTlOutput() GetTlsVersionsTlOutput
	ToGetTlsVersionsTlOutputWithContext(context.Context) GetTlsVersionsTlOutput
}

type GetTlsVersionsTlArgs struct {
	VersionId   pulumi.IntInput    `pulumi:"versionId"`
	VersionName pulumi.StringInput `pulumi:"versionName"`
}

func (GetTlsVersionsTlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsVersionsTl)(nil)).Elem()
}

func (i GetTlsVersionsTlArgs) ToGetTlsVersionsTlOutput() GetTlsVersionsTlOutput {
	return i.ToGetTlsVersionsTlOutputWithContext(context.Background())
}

func (i GetTlsVersionsTlArgs) ToGetTlsVersionsTlOutputWithContext(ctx context.Context) GetTlsVersionsTlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsVersionsTlOutput)
}

// GetTlsVersionsTlArrayInput is an input type that accepts GetTlsVersionsTlArray and GetTlsVersionsTlArrayOutput values.
// You can construct a concrete instance of `GetTlsVersionsTlArrayInput` via:
//
//	GetTlsVersionsTlArray{ GetTlsVersionsTlArgs{...} }
type GetTlsVersionsTlArrayInput interface {
	pulumi.Input

	ToGetTlsVersionsTlArrayOutput() GetTlsVersionsTlArrayOutput
	ToGetTlsVersionsTlArrayOutputWithContext(context.Context) GetTlsVersionsTlArrayOutput
}

type GetTlsVersionsTlArray []GetTlsVersionsTlInput

func (GetTlsVersionsTlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsVersionsTl)(nil)).Elem()
}

func (i GetTlsVersionsTlArray) ToGetTlsVersionsTlArrayOutput() GetTlsVersionsTlArrayOutput {
	return i.ToGetTlsVersionsTlArrayOutputWithContext(context.Background())
}

func (i GetTlsVersionsTlArray) ToGetTlsVersionsTlArrayOutputWithContext(ctx context.Context) GetTlsVersionsTlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetTlsVersionsTlArrayOutput)
}

type GetTlsVersionsTlOutput struct{ *pulumi.OutputState }

func (GetTlsVersionsTlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetTlsVersionsTl)(nil)).Elem()
}

func (o GetTlsVersionsTlOutput) ToGetTlsVersionsTlOutput() GetTlsVersionsTlOutput {
	return o
}

func (o GetTlsVersionsTlOutput) ToGetTlsVersionsTlOutputWithContext(ctx context.Context) GetTlsVersionsTlOutput {
	return o
}

func (o GetTlsVersionsTlOutput) VersionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetTlsVersionsTl) int { return v.VersionId }).(pulumi.IntOutput)
}

func (o GetTlsVersionsTlOutput) VersionName() pulumi.StringOutput {
	return o.ApplyT(func(v GetTlsVersionsTl) string { return v.VersionName }).(pulumi.StringOutput)
}

type GetTlsVersionsTlArrayOutput struct{ *pulumi.OutputState }

func (GetTlsVersionsTlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetTlsVersionsTl)(nil)).Elem()
}

func (o GetTlsVersionsTlArrayOutput) ToGetTlsVersionsTlArrayOutput() GetTlsVersionsTlArrayOutput {
	return o
}

func (o GetTlsVersionsTlArrayOutput) ToGetTlsVersionsTlArrayOutputWithContext(ctx context.Context) GetTlsVersionsTlArrayOutput {
	return o
}

func (o GetTlsVersionsTlArrayOutput) Index(i pulumi.IntInput) GetTlsVersionsTlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetTlsVersionsTl {
		return vs[0].([]GetTlsVersionsTl)[vs[1].(int)]
	}).(GetTlsVersionsTlOutput)
}

type GetUserClbRegionsRichData struct {
	Code  string `pulumi:"code"`
	Id    string `pulumi:"id"`
	Text  string `pulumi:"text"`
	Value string `pulumi:"value"`
}

// GetUserClbRegionsRichDataInput is an input type that accepts GetUserClbRegionsRichDataArgs and GetUserClbRegionsRichDataOutput values.
// You can construct a concrete instance of `GetUserClbRegionsRichDataInput` via:
//
//	GetUserClbRegionsRichDataArgs{...}
type GetUserClbRegionsRichDataInput interface {
	pulumi.Input

	ToGetUserClbRegionsRichDataOutput() GetUserClbRegionsRichDataOutput
	ToGetUserClbRegionsRichDataOutputWithContext(context.Context) GetUserClbRegionsRichDataOutput
}

type GetUserClbRegionsRichDataArgs struct {
	Code  pulumi.StringInput `pulumi:"code"`
	Id    pulumi.StringInput `pulumi:"id"`
	Text  pulumi.StringInput `pulumi:"text"`
	Value pulumi.StringInput `pulumi:"value"`
}

func (GetUserClbRegionsRichDataArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserClbRegionsRichData)(nil)).Elem()
}

func (i GetUserClbRegionsRichDataArgs) ToGetUserClbRegionsRichDataOutput() GetUserClbRegionsRichDataOutput {
	return i.ToGetUserClbRegionsRichDataOutputWithContext(context.Background())
}

func (i GetUserClbRegionsRichDataArgs) ToGetUserClbRegionsRichDataOutputWithContext(ctx context.Context) GetUserClbRegionsRichDataOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserClbRegionsRichDataOutput)
}

// GetUserClbRegionsRichDataArrayInput is an input type that accepts GetUserClbRegionsRichDataArray and GetUserClbRegionsRichDataArrayOutput values.
// You can construct a concrete instance of `GetUserClbRegionsRichDataArrayInput` via:
//
//	GetUserClbRegionsRichDataArray{ GetUserClbRegionsRichDataArgs{...} }
type GetUserClbRegionsRichDataArrayInput interface {
	pulumi.Input

	ToGetUserClbRegionsRichDataArrayOutput() GetUserClbRegionsRichDataArrayOutput
	ToGetUserClbRegionsRichDataArrayOutputWithContext(context.Context) GetUserClbRegionsRichDataArrayOutput
}

type GetUserClbRegionsRichDataArray []GetUserClbRegionsRichDataInput

func (GetUserClbRegionsRichDataArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserClbRegionsRichData)(nil)).Elem()
}

func (i GetUserClbRegionsRichDataArray) ToGetUserClbRegionsRichDataArrayOutput() GetUserClbRegionsRichDataArrayOutput {
	return i.ToGetUserClbRegionsRichDataArrayOutputWithContext(context.Background())
}

func (i GetUserClbRegionsRichDataArray) ToGetUserClbRegionsRichDataArrayOutputWithContext(ctx context.Context) GetUserClbRegionsRichDataArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserClbRegionsRichDataArrayOutput)
}

type GetUserClbRegionsRichDataOutput struct{ *pulumi.OutputState }

func (GetUserClbRegionsRichDataOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserClbRegionsRichData)(nil)).Elem()
}

func (o GetUserClbRegionsRichDataOutput) ToGetUserClbRegionsRichDataOutput() GetUserClbRegionsRichDataOutput {
	return o
}

func (o GetUserClbRegionsRichDataOutput) ToGetUserClbRegionsRichDataOutputWithContext(ctx context.Context) GetUserClbRegionsRichDataOutput {
	return o
}

func (o GetUserClbRegionsRichDataOutput) Code() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserClbRegionsRichData) string { return v.Code }).(pulumi.StringOutput)
}

func (o GetUserClbRegionsRichDataOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserClbRegionsRichData) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetUserClbRegionsRichDataOutput) Text() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserClbRegionsRichData) string { return v.Text }).(pulumi.StringOutput)
}

func (o GetUserClbRegionsRichDataOutput) Value() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserClbRegionsRichData) string { return v.Value }).(pulumi.StringOutput)
}

type GetUserClbRegionsRichDataArrayOutput struct{ *pulumi.OutputState }

func (GetUserClbRegionsRichDataArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserClbRegionsRichData)(nil)).Elem()
}

func (o GetUserClbRegionsRichDataArrayOutput) ToGetUserClbRegionsRichDataArrayOutput() GetUserClbRegionsRichDataArrayOutput {
	return o
}

func (o GetUserClbRegionsRichDataArrayOutput) ToGetUserClbRegionsRichDataArrayOutputWithContext(ctx context.Context) GetUserClbRegionsRichDataArrayOutput {
	return o
}

func (o GetUserClbRegionsRichDataArrayOutput) Index(i pulumi.IntInput) GetUserClbRegionsRichDataOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserClbRegionsRichData {
		return vs[0].([]GetUserClbRegionsRichData)[vs[1].(int)]
	}).(GetUserClbRegionsRichDataOutput)
}

type GetUserDomainsUsersInfo struct {
	Appid        int    `pulumi:"appid"`
	Cls          int    `pulumi:"cls"`
	Domain       string `pulumi:"domain"`
	DomainId     string `pulumi:"domainId"`
	Edition      string `pulumi:"edition"`
	InstanceId   string `pulumi:"instanceId"`
	InstanceName string `pulumi:"instanceName"`
	Level        string `pulumi:"level"`
	WriteConfig  string `pulumi:"writeConfig"`
}

// GetUserDomainsUsersInfoInput is an input type that accepts GetUserDomainsUsersInfoArgs and GetUserDomainsUsersInfoOutput values.
// You can construct a concrete instance of `GetUserDomainsUsersInfoInput` via:
//
//	GetUserDomainsUsersInfoArgs{...}
type GetUserDomainsUsersInfoInput interface {
	pulumi.Input

	ToGetUserDomainsUsersInfoOutput() GetUserDomainsUsersInfoOutput
	ToGetUserDomainsUsersInfoOutputWithContext(context.Context) GetUserDomainsUsersInfoOutput
}

type GetUserDomainsUsersInfoArgs struct {
	Appid        pulumi.IntInput    `pulumi:"appid"`
	Cls          pulumi.IntInput    `pulumi:"cls"`
	Domain       pulumi.StringInput `pulumi:"domain"`
	DomainId     pulumi.StringInput `pulumi:"domainId"`
	Edition      pulumi.StringInput `pulumi:"edition"`
	InstanceId   pulumi.StringInput `pulumi:"instanceId"`
	InstanceName pulumi.StringInput `pulumi:"instanceName"`
	Level        pulumi.StringInput `pulumi:"level"`
	WriteConfig  pulumi.StringInput `pulumi:"writeConfig"`
}

func (GetUserDomainsUsersInfoArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDomainsUsersInfo)(nil)).Elem()
}

func (i GetUserDomainsUsersInfoArgs) ToGetUserDomainsUsersInfoOutput() GetUserDomainsUsersInfoOutput {
	return i.ToGetUserDomainsUsersInfoOutputWithContext(context.Background())
}

func (i GetUserDomainsUsersInfoArgs) ToGetUserDomainsUsersInfoOutputWithContext(ctx context.Context) GetUserDomainsUsersInfoOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDomainsUsersInfoOutput)
}

// GetUserDomainsUsersInfoArrayInput is an input type that accepts GetUserDomainsUsersInfoArray and GetUserDomainsUsersInfoArrayOutput values.
// You can construct a concrete instance of `GetUserDomainsUsersInfoArrayInput` via:
//
//	GetUserDomainsUsersInfoArray{ GetUserDomainsUsersInfoArgs{...} }
type GetUserDomainsUsersInfoArrayInput interface {
	pulumi.Input

	ToGetUserDomainsUsersInfoArrayOutput() GetUserDomainsUsersInfoArrayOutput
	ToGetUserDomainsUsersInfoArrayOutputWithContext(context.Context) GetUserDomainsUsersInfoArrayOutput
}

type GetUserDomainsUsersInfoArray []GetUserDomainsUsersInfoInput

func (GetUserDomainsUsersInfoArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDomainsUsersInfo)(nil)).Elem()
}

func (i GetUserDomainsUsersInfoArray) ToGetUserDomainsUsersInfoArrayOutput() GetUserDomainsUsersInfoArrayOutput {
	return i.ToGetUserDomainsUsersInfoArrayOutputWithContext(context.Background())
}

func (i GetUserDomainsUsersInfoArray) ToGetUserDomainsUsersInfoArrayOutputWithContext(ctx context.Context) GetUserDomainsUsersInfoArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetUserDomainsUsersInfoArrayOutput)
}

type GetUserDomainsUsersInfoOutput struct{ *pulumi.OutputState }

func (GetUserDomainsUsersInfoOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetUserDomainsUsersInfo)(nil)).Elem()
}

func (o GetUserDomainsUsersInfoOutput) ToGetUserDomainsUsersInfoOutput() GetUserDomainsUsersInfoOutput {
	return o
}

func (o GetUserDomainsUsersInfoOutput) ToGetUserDomainsUsersInfoOutputWithContext(ctx context.Context) GetUserDomainsUsersInfoOutput {
	return o
}

func (o GetUserDomainsUsersInfoOutput) Appid() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) int { return v.Appid }).(pulumi.IntOutput)
}

func (o GetUserDomainsUsersInfoOutput) Cls() pulumi.IntOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) int { return v.Cls }).(pulumi.IntOutput)
}

func (o GetUserDomainsUsersInfoOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.DomainId }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) Edition() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.Edition }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) Level() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.Level }).(pulumi.StringOutput)
}

func (o GetUserDomainsUsersInfoOutput) WriteConfig() pulumi.StringOutput {
	return o.ApplyT(func(v GetUserDomainsUsersInfo) string { return v.WriteConfig }).(pulumi.StringOutput)
}

type GetUserDomainsUsersInfoArrayOutput struct{ *pulumi.OutputState }

func (GetUserDomainsUsersInfoArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetUserDomainsUsersInfo)(nil)).Elem()
}

func (o GetUserDomainsUsersInfoArrayOutput) ToGetUserDomainsUsersInfoArrayOutput() GetUserDomainsUsersInfoArrayOutput {
	return o
}

func (o GetUserDomainsUsersInfoArrayOutput) ToGetUserDomainsUsersInfoArrayOutputWithContext(ctx context.Context) GetUserDomainsUsersInfoArrayOutput {
	return o
}

func (o GetUserDomainsUsersInfoArrayOutput) Index(i pulumi.IntInput) GetUserDomainsUsersInfoOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetUserDomainsUsersInfo {
		return vs[0].([]GetUserDomainsUsersInfo)[vs[1].(int)]
	}).(GetUserDomainsUsersInfoOutput)
}

type GetWafInfosHostList struct {
	Domain        string                            `pulumi:"domain"`
	DomainId      string                            `pulumi:"domainId"`
	FlowMode      int                               `pulumi:"flowMode"`
	LoadBalancers []GetWafInfosHostListLoadBalancer `pulumi:"loadBalancers"`
	Status        int                               `pulumi:"status"`
}

// GetWafInfosHostListInput is an input type that accepts GetWafInfosHostListArgs and GetWafInfosHostListOutput values.
// You can construct a concrete instance of `GetWafInfosHostListInput` via:
//
//	GetWafInfosHostListArgs{...}
type GetWafInfosHostListInput interface {
	pulumi.Input

	ToGetWafInfosHostListOutput() GetWafInfosHostListOutput
	ToGetWafInfosHostListOutputWithContext(context.Context) GetWafInfosHostListOutput
}

type GetWafInfosHostListArgs struct {
	Domain        pulumi.StringInput                        `pulumi:"domain"`
	DomainId      pulumi.StringInput                        `pulumi:"domainId"`
	FlowMode      pulumi.IntInput                           `pulumi:"flowMode"`
	LoadBalancers GetWafInfosHostListLoadBalancerArrayInput `pulumi:"loadBalancers"`
	Status        pulumi.IntInput                           `pulumi:"status"`
}

func (GetWafInfosHostListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosHostList)(nil)).Elem()
}

func (i GetWafInfosHostListArgs) ToGetWafInfosHostListOutput() GetWafInfosHostListOutput {
	return i.ToGetWafInfosHostListOutputWithContext(context.Background())
}

func (i GetWafInfosHostListArgs) ToGetWafInfosHostListOutputWithContext(ctx context.Context) GetWafInfosHostListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosHostListOutput)
}

// GetWafInfosHostListArrayInput is an input type that accepts GetWafInfosHostListArray and GetWafInfosHostListArrayOutput values.
// You can construct a concrete instance of `GetWafInfosHostListArrayInput` via:
//
//	GetWafInfosHostListArray{ GetWafInfosHostListArgs{...} }
type GetWafInfosHostListArrayInput interface {
	pulumi.Input

	ToGetWafInfosHostListArrayOutput() GetWafInfosHostListArrayOutput
	ToGetWafInfosHostListArrayOutputWithContext(context.Context) GetWafInfosHostListArrayOutput
}

type GetWafInfosHostListArray []GetWafInfosHostListInput

func (GetWafInfosHostListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosHostList)(nil)).Elem()
}

func (i GetWafInfosHostListArray) ToGetWafInfosHostListArrayOutput() GetWafInfosHostListArrayOutput {
	return i.ToGetWafInfosHostListArrayOutputWithContext(context.Background())
}

func (i GetWafInfosHostListArray) ToGetWafInfosHostListArrayOutputWithContext(ctx context.Context) GetWafInfosHostListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosHostListArrayOutput)
}

type GetWafInfosHostListOutput struct{ *pulumi.OutputState }

func (GetWafInfosHostListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosHostList)(nil)).Elem()
}

func (o GetWafInfosHostListOutput) ToGetWafInfosHostListOutput() GetWafInfosHostListOutput {
	return o
}

func (o GetWafInfosHostListOutput) ToGetWafInfosHostListOutputWithContext(ctx context.Context) GetWafInfosHostListOutput {
	return o
}

func (o GetWafInfosHostListOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostList) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListOutput) DomainId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostList) string { return v.DomainId }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListOutput) FlowMode() pulumi.IntOutput {
	return o.ApplyT(func(v GetWafInfosHostList) int { return v.FlowMode }).(pulumi.IntOutput)
}

func (o GetWafInfosHostListOutput) LoadBalancers() GetWafInfosHostListLoadBalancerArrayOutput {
	return o.ApplyT(func(v GetWafInfosHostList) []GetWafInfosHostListLoadBalancer { return v.LoadBalancers }).(GetWafInfosHostListLoadBalancerArrayOutput)
}

func (o GetWafInfosHostListOutput) Status() pulumi.IntOutput {
	return o.ApplyT(func(v GetWafInfosHostList) int { return v.Status }).(pulumi.IntOutput)
}

type GetWafInfosHostListArrayOutput struct{ *pulumi.OutputState }

func (GetWafInfosHostListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosHostList)(nil)).Elem()
}

func (o GetWafInfosHostListArrayOutput) ToGetWafInfosHostListArrayOutput() GetWafInfosHostListArrayOutput {
	return o
}

func (o GetWafInfosHostListArrayOutput) ToGetWafInfosHostListArrayOutputWithContext(ctx context.Context) GetWafInfosHostListArrayOutput {
	return o
}

func (o GetWafInfosHostListArrayOutput) Index(i pulumi.IntInput) GetWafInfosHostListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafInfosHostList {
		return vs[0].([]GetWafInfosHostList)[vs[1].(int)]
	}).(GetWafInfosHostListOutput)
}

type GetWafInfosHostListLoadBalancer struct {
	ListenerId       string `pulumi:"listenerId"`
	ListenerName     string `pulumi:"listenerName"`
	LoadBalancerId   string `pulumi:"loadBalancerId"`
	LoadBalancerName string `pulumi:"loadBalancerName"`
	LoadBalancerType string `pulumi:"loadBalancerType"`
	NumericalVpcId   int    `pulumi:"numericalVpcId"`
	Protocol         string `pulumi:"protocol"`
	Region           string `pulumi:"region"`
	Vip              string `pulumi:"vip"`
	Vport            int    `pulumi:"vport"`
	Zone             string `pulumi:"zone"`
}

// GetWafInfosHostListLoadBalancerInput is an input type that accepts GetWafInfosHostListLoadBalancerArgs and GetWafInfosHostListLoadBalancerOutput values.
// You can construct a concrete instance of `GetWafInfosHostListLoadBalancerInput` via:
//
//	GetWafInfosHostListLoadBalancerArgs{...}
type GetWafInfosHostListLoadBalancerInput interface {
	pulumi.Input

	ToGetWafInfosHostListLoadBalancerOutput() GetWafInfosHostListLoadBalancerOutput
	ToGetWafInfosHostListLoadBalancerOutputWithContext(context.Context) GetWafInfosHostListLoadBalancerOutput
}

type GetWafInfosHostListLoadBalancerArgs struct {
	ListenerId       pulumi.StringInput `pulumi:"listenerId"`
	ListenerName     pulumi.StringInput `pulumi:"listenerName"`
	LoadBalancerId   pulumi.StringInput `pulumi:"loadBalancerId"`
	LoadBalancerName pulumi.StringInput `pulumi:"loadBalancerName"`
	LoadBalancerType pulumi.StringInput `pulumi:"loadBalancerType"`
	NumericalVpcId   pulumi.IntInput    `pulumi:"numericalVpcId"`
	Protocol         pulumi.StringInput `pulumi:"protocol"`
	Region           pulumi.StringInput `pulumi:"region"`
	Vip              pulumi.StringInput `pulumi:"vip"`
	Vport            pulumi.IntInput    `pulumi:"vport"`
	Zone             pulumi.StringInput `pulumi:"zone"`
}

func (GetWafInfosHostListLoadBalancerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosHostListLoadBalancer)(nil)).Elem()
}

func (i GetWafInfosHostListLoadBalancerArgs) ToGetWafInfosHostListLoadBalancerOutput() GetWafInfosHostListLoadBalancerOutput {
	return i.ToGetWafInfosHostListLoadBalancerOutputWithContext(context.Background())
}

func (i GetWafInfosHostListLoadBalancerArgs) ToGetWafInfosHostListLoadBalancerOutputWithContext(ctx context.Context) GetWafInfosHostListLoadBalancerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosHostListLoadBalancerOutput)
}

// GetWafInfosHostListLoadBalancerArrayInput is an input type that accepts GetWafInfosHostListLoadBalancerArray and GetWafInfosHostListLoadBalancerArrayOutput values.
// You can construct a concrete instance of `GetWafInfosHostListLoadBalancerArrayInput` via:
//
//	GetWafInfosHostListLoadBalancerArray{ GetWafInfosHostListLoadBalancerArgs{...} }
type GetWafInfosHostListLoadBalancerArrayInput interface {
	pulumi.Input

	ToGetWafInfosHostListLoadBalancerArrayOutput() GetWafInfosHostListLoadBalancerArrayOutput
	ToGetWafInfosHostListLoadBalancerArrayOutputWithContext(context.Context) GetWafInfosHostListLoadBalancerArrayOutput
}

type GetWafInfosHostListLoadBalancerArray []GetWafInfosHostListLoadBalancerInput

func (GetWafInfosHostListLoadBalancerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosHostListLoadBalancer)(nil)).Elem()
}

func (i GetWafInfosHostListLoadBalancerArray) ToGetWafInfosHostListLoadBalancerArrayOutput() GetWafInfosHostListLoadBalancerArrayOutput {
	return i.ToGetWafInfosHostListLoadBalancerArrayOutputWithContext(context.Background())
}

func (i GetWafInfosHostListLoadBalancerArray) ToGetWafInfosHostListLoadBalancerArrayOutputWithContext(ctx context.Context) GetWafInfosHostListLoadBalancerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosHostListLoadBalancerArrayOutput)
}

type GetWafInfosHostListLoadBalancerOutput struct{ *pulumi.OutputState }

func (GetWafInfosHostListLoadBalancerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosHostListLoadBalancer)(nil)).Elem()
}

func (o GetWafInfosHostListLoadBalancerOutput) ToGetWafInfosHostListLoadBalancerOutput() GetWafInfosHostListLoadBalancerOutput {
	return o
}

func (o GetWafInfosHostListLoadBalancerOutput) ToGetWafInfosHostListLoadBalancerOutputWithContext(ctx context.Context) GetWafInfosHostListLoadBalancerOutput {
	return o
}

func (o GetWafInfosHostListLoadBalancerOutput) ListenerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.ListenerId }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) ListenerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.ListenerName }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) LoadBalancerName() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.LoadBalancerName }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) LoadBalancerType() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.LoadBalancerType }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) NumericalVpcId() pulumi.IntOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) int { return v.NumericalVpcId }).(pulumi.IntOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) Protocol() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.Protocol }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) Vip() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.Vip }).(pulumi.StringOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) Vport() pulumi.IntOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) int { return v.Vport }).(pulumi.IntOutput)
}

func (o GetWafInfosHostListLoadBalancerOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosHostListLoadBalancer) string { return v.Zone }).(pulumi.StringOutput)
}

type GetWafInfosHostListLoadBalancerArrayOutput struct{ *pulumi.OutputState }

func (GetWafInfosHostListLoadBalancerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosHostListLoadBalancer)(nil)).Elem()
}

func (o GetWafInfosHostListLoadBalancerArrayOutput) ToGetWafInfosHostListLoadBalancerArrayOutput() GetWafInfosHostListLoadBalancerArrayOutput {
	return o
}

func (o GetWafInfosHostListLoadBalancerArrayOutput) ToGetWafInfosHostListLoadBalancerArrayOutputWithContext(ctx context.Context) GetWafInfosHostListLoadBalancerArrayOutput {
	return o
}

func (o GetWafInfosHostListLoadBalancerArrayOutput) Index(i pulumi.IntInput) GetWafInfosHostListLoadBalancerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafInfosHostListLoadBalancer {
		return vs[0].([]GetWafInfosHostListLoadBalancer)[vs[1].(int)]
	}).(GetWafInfosHostListLoadBalancerOutput)
}

type GetWafInfosParam struct {
	DomainId       *string `pulumi:"domainId"`
	ListenerId     *string `pulumi:"listenerId"`
	LoadBalancerId string  `pulumi:"loadBalancerId"`
}

// GetWafInfosParamInput is an input type that accepts GetWafInfosParamArgs and GetWafInfosParamOutput values.
// You can construct a concrete instance of `GetWafInfosParamInput` via:
//
//	GetWafInfosParamArgs{...}
type GetWafInfosParamInput interface {
	pulumi.Input

	ToGetWafInfosParamOutput() GetWafInfosParamOutput
	ToGetWafInfosParamOutputWithContext(context.Context) GetWafInfosParamOutput
}

type GetWafInfosParamArgs struct {
	DomainId       pulumi.StringPtrInput `pulumi:"domainId"`
	ListenerId     pulumi.StringPtrInput `pulumi:"listenerId"`
	LoadBalancerId pulumi.StringInput    `pulumi:"loadBalancerId"`
}

func (GetWafInfosParamArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosParam)(nil)).Elem()
}

func (i GetWafInfosParamArgs) ToGetWafInfosParamOutput() GetWafInfosParamOutput {
	return i.ToGetWafInfosParamOutputWithContext(context.Background())
}

func (i GetWafInfosParamArgs) ToGetWafInfosParamOutputWithContext(ctx context.Context) GetWafInfosParamOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosParamOutput)
}

// GetWafInfosParamArrayInput is an input type that accepts GetWafInfosParamArray and GetWafInfosParamArrayOutput values.
// You can construct a concrete instance of `GetWafInfosParamArrayInput` via:
//
//	GetWafInfosParamArray{ GetWafInfosParamArgs{...} }
type GetWafInfosParamArrayInput interface {
	pulumi.Input

	ToGetWafInfosParamArrayOutput() GetWafInfosParamArrayOutput
	ToGetWafInfosParamArrayOutputWithContext(context.Context) GetWafInfosParamArrayOutput
}

type GetWafInfosParamArray []GetWafInfosParamInput

func (GetWafInfosParamArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosParam)(nil)).Elem()
}

func (i GetWafInfosParamArray) ToGetWafInfosParamArrayOutput() GetWafInfosParamArrayOutput {
	return i.ToGetWafInfosParamArrayOutputWithContext(context.Background())
}

func (i GetWafInfosParamArray) ToGetWafInfosParamArrayOutputWithContext(ctx context.Context) GetWafInfosParamArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetWafInfosParamArrayOutput)
}

type GetWafInfosParamOutput struct{ *pulumi.OutputState }

func (GetWafInfosParamOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetWafInfosParam)(nil)).Elem()
}

func (o GetWafInfosParamOutput) ToGetWafInfosParamOutput() GetWafInfosParamOutput {
	return o
}

func (o GetWafInfosParamOutput) ToGetWafInfosParamOutputWithContext(ctx context.Context) GetWafInfosParamOutput {
	return o
}

func (o GetWafInfosParamOutput) DomainId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafInfosParam) *string { return v.DomainId }).(pulumi.StringPtrOutput)
}

func (o GetWafInfosParamOutput) ListenerId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetWafInfosParam) *string { return v.ListenerId }).(pulumi.StringPtrOutput)
}

func (o GetWafInfosParamOutput) LoadBalancerId() pulumi.StringOutput {
	return o.ApplyT(func(v GetWafInfosParam) string { return v.LoadBalancerId }).(pulumi.StringOutput)
}

type GetWafInfosParamArrayOutput struct{ *pulumi.OutputState }

func (GetWafInfosParamArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetWafInfosParam)(nil)).Elem()
}

func (o GetWafInfosParamArrayOutput) ToGetWafInfosParamArrayOutput() GetWafInfosParamArrayOutput {
	return o
}

func (o GetWafInfosParamArrayOutput) ToGetWafInfosParamArrayOutputWithContext(ctx context.Context) GetWafInfosParamArrayOutput {
	return o
}

func (o GetWafInfosParamArrayOutput) Index(i pulumi.IntInput) GetWafInfosParamOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetWafInfosParam {
		return vs[0].([]GetWafInfosParam)[vs[1].(int)]
	}).(GetWafInfosParamOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*AntiInfoLeakStrategyInput)(nil)).Elem(), AntiInfoLeakStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*AntiInfoLeakStrategyArrayInput)(nil)).Elem(), AntiInfoLeakStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbDomainLoadBalancerSetInput)(nil)).Elem(), ClbDomainLoadBalancerSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ClbDomainLoadBalancerSetArrayInput)(nil)).Elem(), ClbDomainLoadBalancerSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRuleStrategyInput)(nil)).Elem(), CustomRuleStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomRuleStrategyArrayInput)(nil)).Elem(), CustomRuleStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomWhiteRuleStrategyInput)(nil)).Elem(), CustomWhiteRuleStrategyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomWhiteRuleStrategyArrayInput)(nil)).Elem(), CustomWhiteRuleStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessControlItemInput)(nil)).Elem(), IpAccessControlItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*IpAccessControlItemArrayInput)(nil)).Elem(), IpAccessControlItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*SaasDomainPortInput)(nil)).Elem(), SaasDomainPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*SaasDomainPortArrayInput)(nil)).Elem(), SaasDomainPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogHistogramDataInput)(nil)).Elem(), GetAttackLogHistogramDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogHistogramDataArrayInput)(nil)).Elem(), GetAttackLogHistogramDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogListDataInput)(nil)).Elem(), GetAttackLogListDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetAttackLogListDataArrayInput)(nil)).Elem(), GetAttackLogListDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCiphersCipherInput)(nil)).Elem(), GetCiphersCipherArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetCiphersCipherArrayInput)(nil)).Elem(), GetCiphersCipherArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainInput)(nil)).Elem(), GetDomainsDomainArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainArrayInput)(nil)).Elem(), GetDomainsDomainArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainLoadBalancerSetInput)(nil)).Elem(), GetDomainsDomainLoadBalancerSetArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainLoadBalancerSetArrayInput)(nil)).Elem(), GetDomainsDomainLoadBalancerSetArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainPortInput)(nil)).Elem(), GetDomainsDomainPortArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetDomainsDomainPortArrayInput)(nil)).Elem(), GetDomainsDomainPortArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFindDomainsListInput)(nil)).Elem(), GetFindDomainsListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetFindDomainsListArrayInput)(nil)).Elem(), GetFindDomainsListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceQpsLimitQpsDataInput)(nil)).Elem(), GetInstanceQpsLimitQpsDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstanceQpsLimitQpsDataArrayInput)(nil)).Elem(), GetInstanceQpsLimitQpsDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeakPointsPointInput)(nil)).Elem(), GetPeakPointsPointArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetPeakPointsPointArrayInput)(nil)).Elem(), GetPeakPointsPointArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsVersionsTlInput)(nil)).Elem(), GetTlsVersionsTlArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetTlsVersionsTlArrayInput)(nil)).Elem(), GetTlsVersionsTlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserClbRegionsRichDataInput)(nil)).Elem(), GetUserClbRegionsRichDataArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserClbRegionsRichDataArrayInput)(nil)).Elem(), GetUserClbRegionsRichDataArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDomainsUsersInfoInput)(nil)).Elem(), GetUserDomainsUsersInfoArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetUserDomainsUsersInfoArrayInput)(nil)).Elem(), GetUserDomainsUsersInfoArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosHostListInput)(nil)).Elem(), GetWafInfosHostListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosHostListArrayInput)(nil)).Elem(), GetWafInfosHostListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosHostListLoadBalancerInput)(nil)).Elem(), GetWafInfosHostListLoadBalancerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosHostListLoadBalancerArrayInput)(nil)).Elem(), GetWafInfosHostListLoadBalancerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosParamInput)(nil)).Elem(), GetWafInfosParamArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetWafInfosParamArrayInput)(nil)).Elem(), GetWafInfosParamArray{})
	pulumi.RegisterOutputType(AntiInfoLeakStrategyOutput{})
	pulumi.RegisterOutputType(AntiInfoLeakStrategyArrayOutput{})
	pulumi.RegisterOutputType(ClbDomainLoadBalancerSetOutput{})
	pulumi.RegisterOutputType(ClbDomainLoadBalancerSetArrayOutput{})
	pulumi.RegisterOutputType(CustomRuleStrategyOutput{})
	pulumi.RegisterOutputType(CustomRuleStrategyArrayOutput{})
	pulumi.RegisterOutputType(CustomWhiteRuleStrategyOutput{})
	pulumi.RegisterOutputType(CustomWhiteRuleStrategyArrayOutput{})
	pulumi.RegisterOutputType(IpAccessControlItemOutput{})
	pulumi.RegisterOutputType(IpAccessControlItemArrayOutput{})
	pulumi.RegisterOutputType(SaasDomainPortOutput{})
	pulumi.RegisterOutputType(SaasDomainPortArrayOutput{})
	pulumi.RegisterOutputType(GetAttackLogHistogramDataOutput{})
	pulumi.RegisterOutputType(GetAttackLogHistogramDataArrayOutput{})
	pulumi.RegisterOutputType(GetAttackLogListDataOutput{})
	pulumi.RegisterOutputType(GetAttackLogListDataArrayOutput{})
	pulumi.RegisterOutputType(GetCiphersCipherOutput{})
	pulumi.RegisterOutputType(GetCiphersCipherArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainLoadBalancerSetOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainLoadBalancerSetArrayOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainPortOutput{})
	pulumi.RegisterOutputType(GetDomainsDomainPortArrayOutput{})
	pulumi.RegisterOutputType(GetFindDomainsListOutput{})
	pulumi.RegisterOutputType(GetFindDomainsListArrayOutput{})
	pulumi.RegisterOutputType(GetInstanceQpsLimitQpsDataOutput{})
	pulumi.RegisterOutputType(GetInstanceQpsLimitQpsDataArrayOutput{})
	pulumi.RegisterOutputType(GetPeakPointsPointOutput{})
	pulumi.RegisterOutputType(GetPeakPointsPointArrayOutput{})
	pulumi.RegisterOutputType(GetTlsVersionsTlOutput{})
	pulumi.RegisterOutputType(GetTlsVersionsTlArrayOutput{})
	pulumi.RegisterOutputType(GetUserClbRegionsRichDataOutput{})
	pulumi.RegisterOutputType(GetUserClbRegionsRichDataArrayOutput{})
	pulumi.RegisterOutputType(GetUserDomainsUsersInfoOutput{})
	pulumi.RegisterOutputType(GetUserDomainsUsersInfoArrayOutput{})
	pulumi.RegisterOutputType(GetWafInfosHostListOutput{})
	pulumi.RegisterOutputType(GetWafInfosHostListArrayOutput{})
	pulumi.RegisterOutputType(GetWafInfosHostListLoadBalancerOutput{})
	pulumi.RegisterOutputType(GetWafInfosHostListLoadBalancerArrayOutput{})
	pulumi.RegisterOutputType(GetWafInfosParamOutput{})
	pulumi.RegisterOutputType(GetWafInfosParamArrayOutput{})
}
