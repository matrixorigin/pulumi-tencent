// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package mysql

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type DrInstance struct {
	pulumi.CustomResourceState

	// Auto renew flag. NOTES: Only supported prepaid instance.
	AutoRenewFlag pulumi.IntPtrOutput `pulumi:"autoRenewFlag"`
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringOutput `pulumi:"availabilityZone"`
	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	ChargeType pulumi.StringPtrOutput `pulumi:"chargeType"`
	// CPU cores.
	Cpu pulumi.IntOutput `pulumi:"cpu"`
	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	DeviceType pulumi.StringOutput `pulumi:"deviceType"`
	// Zone information about first slave instance.
	FirstSlaveZone pulumi.StringOutput `pulumi:"firstSlaveZone"`
	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
	// instead of staying recycle bin. Note: only works for `PREPAID` instance.
	ForceDelete pulumi.BoolPtrOutput `pulumi:"forceDelete"`
	// The name of a mysql instance.
	InstanceName pulumi.StringOutput `pulumi:"instanceName"`
	// instance intranet IP.
	IntranetIp pulumi.StringOutput `pulumi:"intranetIp"`
	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	IntranetPort pulumi.IntPtrOutput `pulumi:"intranetPort"`
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId pulumi.StringOutput `pulumi:"masterInstanceId"`
	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	MasterRegion pulumi.StringOutput `pulumi:"masterRegion"`
	// Memory size (in MB).
	MemSize pulumi.IntOutput `pulumi:"memSize"`
	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType pulumi.IntPtrOutput `pulumi:"payType"`
	// Period of instance. NOTES: Only supported prepaid instance.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
	Period pulumi.IntPtrOutput `pulumi:"period"`
	// Period of instance. NOTES: Only supported prepaid instance.
	PrepaidPeriod pulumi.IntPtrOutput `pulumi:"prepaidPeriod"`
	// Project ID, default value is 0.
	ProjectId pulumi.IntPtrOutput `pulumi:"projectId"`
	// Zone information about second slave instance.
	SecondSlaveZone pulumi.StringPtrOutput `pulumi:"secondSlaveZone"`
	// Security groups to use.
	SecurityGroups pulumi.StringArrayOutput `pulumi:"securityGroups"`
	// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
	SlaveDeployMode pulumi.IntPtrOutput `pulumi:"slaveDeployMode"`
	// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
	SlaveSyncMode pulumi.IntPtrOutput `pulumi:"slaveSyncMode"`
	// Private network ID. If `vpc_id` is set, this value is required.
	SubnetId pulumi.StringOutput `pulumi:"subnetId"`
	// Instance tags.
	Tags pulumi.MapOutput `pulumi:"tags"`
	// Disk size (in GB).
	VolumeSize pulumi.IntOutput `pulumi:"volumeSize"`
	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	VpcId pulumi.StringOutput `pulumi:"vpcId"`
}

// NewDrInstance registers a new resource with the given unique name, arguments, and options.
func NewDrInstance(ctx *pulumi.Context,
	name string, args *DrInstanceArgs, opts ...pulumi.ResourceOption) (*DrInstance, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceName == nil {
		return nil, errors.New("invalid value for required argument 'InstanceName'")
	}
	if args.MasterInstanceId == nil {
		return nil, errors.New("invalid value for required argument 'MasterInstanceId'")
	}
	if args.MasterRegion == nil {
		return nil, errors.New("invalid value for required argument 'MasterRegion'")
	}
	if args.MemSize == nil {
		return nil, errors.New("invalid value for required argument 'MemSize'")
	}
	if args.VolumeSize == nil {
		return nil, errors.New("invalid value for required argument 'VolumeSize'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource DrInstance
	err := ctx.RegisterResource("tencentcloud:Mysql/drInstance:DrInstance", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDrInstance gets an existing DrInstance resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDrInstance(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DrInstanceState, opts ...pulumi.ResourceOption) (*DrInstance, error) {
	var resource DrInstance
	err := ctx.ReadResource("tencentcloud:Mysql/drInstance:DrInstance", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DrInstance resources.
type drInstanceState struct {
	// Auto renew flag. NOTES: Only supported prepaid instance.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// Indicates which availability zone will be used.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	ChargeType *string `pulumi:"chargeType"`
	// CPU cores.
	Cpu *int `pulumi:"cpu"`
	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	DeviceType *string `pulumi:"deviceType"`
	// Zone information about first slave instance.
	FirstSlaveZone *string `pulumi:"firstSlaveZone"`
	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
	// instead of staying recycle bin. Note: only works for `PREPAID` instance.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The name of a mysql instance.
	InstanceName *string `pulumi:"instanceName"`
	// instance intranet IP.
	IntranetIp *string `pulumi:"intranetIp"`
	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	IntranetPort *int `pulumi:"intranetPort"`
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId *string `pulumi:"masterInstanceId"`
	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	MasterRegion *string `pulumi:"masterRegion"`
	// Memory size (in MB).
	MemSize *int `pulumi:"memSize"`
	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType *int `pulumi:"payType"`
	// Period of instance. NOTES: Only supported prepaid instance.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
	Period *int `pulumi:"period"`
	// Period of instance. NOTES: Only supported prepaid instance.
	PrepaidPeriod *int `pulumi:"prepaidPeriod"`
	// Project ID, default value is 0.
	ProjectId *int `pulumi:"projectId"`
	// Zone information about second slave instance.
	SecondSlaveZone *string `pulumi:"secondSlaveZone"`
	// Security groups to use.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
	SlaveDeployMode *int `pulumi:"slaveDeployMode"`
	// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
	SlaveSyncMode *int `pulumi:"slaveSyncMode"`
	// Private network ID. If `vpc_id` is set, this value is required.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// Disk size (in GB).
	VolumeSize *int `pulumi:"volumeSize"`
	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	VpcId *string `pulumi:"vpcId"`
}

type DrInstanceState struct {
	// Auto renew flag. NOTES: Only supported prepaid instance.
	AutoRenewFlag pulumi.IntPtrInput
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringPtrInput
	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	ChargeType pulumi.StringPtrInput
	// CPU cores.
	Cpu pulumi.IntPtrInput
	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	DeviceType pulumi.StringPtrInput
	// Zone information about first slave instance.
	FirstSlaveZone pulumi.StringPtrInput
	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
	// instead of staying recycle bin. Note: only works for `PREPAID` instance.
	ForceDelete pulumi.BoolPtrInput
	// The name of a mysql instance.
	InstanceName pulumi.StringPtrInput
	// instance intranet IP.
	IntranetIp pulumi.StringPtrInput
	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	IntranetPort pulumi.IntPtrInput
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId pulumi.StringPtrInput
	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	MasterRegion pulumi.StringPtrInput
	// Memory size (in MB).
	MemSize pulumi.IntPtrInput
	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType pulumi.IntPtrInput
	// Period of instance. NOTES: Only supported prepaid instance.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
	Period pulumi.IntPtrInput
	// Period of instance. NOTES: Only supported prepaid instance.
	PrepaidPeriod pulumi.IntPtrInput
	// Project ID, default value is 0.
	ProjectId pulumi.IntPtrInput
	// Zone information about second slave instance.
	SecondSlaveZone pulumi.StringPtrInput
	// Security groups to use.
	SecurityGroups pulumi.StringArrayInput
	// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
	SlaveDeployMode pulumi.IntPtrInput
	// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
	SlaveSyncMode pulumi.IntPtrInput
	// Private network ID. If `vpc_id` is set, this value is required.
	SubnetId pulumi.StringPtrInput
	// Instance tags.
	Tags pulumi.MapInput
	// Disk size (in GB).
	VolumeSize pulumi.IntPtrInput
	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	VpcId pulumi.StringPtrInput
}

func (DrInstanceState) ElementType() reflect.Type {
	return reflect.TypeOf((*drInstanceState)(nil)).Elem()
}

type drInstanceArgs struct {
	// Auto renew flag. NOTES: Only supported prepaid instance.
	AutoRenewFlag *int `pulumi:"autoRenewFlag"`
	// Indicates which availability zone will be used.
	AvailabilityZone *string `pulumi:"availabilityZone"`
	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	ChargeType *string `pulumi:"chargeType"`
	// CPU cores.
	Cpu *int `pulumi:"cpu"`
	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	DeviceType *string `pulumi:"deviceType"`
	// Zone information about first slave instance.
	FirstSlaveZone *string `pulumi:"firstSlaveZone"`
	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
	// instead of staying recycle bin. Note: only works for `PREPAID` instance.
	ForceDelete *bool `pulumi:"forceDelete"`
	// The name of a mysql instance.
	InstanceName string `pulumi:"instanceName"`
	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	IntranetPort *int `pulumi:"intranetPort"`
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId string `pulumi:"masterInstanceId"`
	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	MasterRegion string `pulumi:"masterRegion"`
	// Memory size (in MB).
	MemSize int `pulumi:"memSize"`
	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType *int `pulumi:"payType"`
	// Period of instance. NOTES: Only supported prepaid instance.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
	Period *int `pulumi:"period"`
	// Period of instance. NOTES: Only supported prepaid instance.
	PrepaidPeriod *int `pulumi:"prepaidPeriod"`
	// Project ID, default value is 0.
	ProjectId *int `pulumi:"projectId"`
	// Zone information about second slave instance.
	SecondSlaveZone *string `pulumi:"secondSlaveZone"`
	// Security groups to use.
	SecurityGroups []string `pulumi:"securityGroups"`
	// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
	SlaveDeployMode *int `pulumi:"slaveDeployMode"`
	// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
	SlaveSyncMode *int `pulumi:"slaveSyncMode"`
	// Private network ID. If `vpc_id` is set, this value is required.
	SubnetId *string `pulumi:"subnetId"`
	// Instance tags.
	Tags map[string]interface{} `pulumi:"tags"`
	// Disk size (in GB).
	VolumeSize int `pulumi:"volumeSize"`
	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	VpcId *string `pulumi:"vpcId"`
}

// The set of arguments for constructing a DrInstance resource.
type DrInstanceArgs struct {
	// Auto renew flag. NOTES: Only supported prepaid instance.
	AutoRenewFlag pulumi.IntPtrInput
	// Indicates which availability zone will be used.
	AvailabilityZone pulumi.StringPtrInput
	// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
	ChargeType pulumi.StringPtrInput
	// CPU cores.
	Cpu pulumi.IntPtrInput
	// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
	DeviceType pulumi.StringPtrInput
	// Zone information about first slave instance.
	FirstSlaveZone pulumi.StringPtrInput
	// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
	// instead of staying recycle bin. Note: only works for `PREPAID` instance.
	ForceDelete pulumi.BoolPtrInput
	// The name of a mysql instance.
	InstanceName pulumi.StringInput
	// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
	IntranetPort pulumi.IntPtrInput
	// Indicates the master instance ID of recovery instances.
	MasterInstanceId pulumi.StringInput
	// The zone information of the primary instance is required when you purchase a disaster recovery instance.
	MasterRegion pulumi.StringInput
	// Memory size (in MB).
	MemSize pulumi.IntInput
	// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
	PayType pulumi.IntPtrInput
	// Period of instance. NOTES: Only supported prepaid instance.
	//
	// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
	Period pulumi.IntPtrInput
	// Period of instance. NOTES: Only supported prepaid instance.
	PrepaidPeriod pulumi.IntPtrInput
	// Project ID, default value is 0.
	ProjectId pulumi.IntPtrInput
	// Zone information about second slave instance.
	SecondSlaveZone pulumi.StringPtrInput
	// Security groups to use.
	SecurityGroups pulumi.StringArrayInput
	// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
	SlaveDeployMode pulumi.IntPtrInput
	// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
	SlaveSyncMode pulumi.IntPtrInput
	// Private network ID. If `vpc_id` is set, this value is required.
	SubnetId pulumi.StringPtrInput
	// Instance tags.
	Tags pulumi.MapInput
	// Disk size (in GB).
	VolumeSize pulumi.IntInput
	// ID of VPC, which can be modified once every 24 hours and can't be removed.
	VpcId pulumi.StringPtrInput
}

func (DrInstanceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*drInstanceArgs)(nil)).Elem()
}

type DrInstanceInput interface {
	pulumi.Input

	ToDrInstanceOutput() DrInstanceOutput
	ToDrInstanceOutputWithContext(ctx context.Context) DrInstanceOutput
}

func (*DrInstance) ElementType() reflect.Type {
	return reflect.TypeOf((**DrInstance)(nil)).Elem()
}

func (i *DrInstance) ToDrInstanceOutput() DrInstanceOutput {
	return i.ToDrInstanceOutputWithContext(context.Background())
}

func (i *DrInstance) ToDrInstanceOutputWithContext(ctx context.Context) DrInstanceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrInstanceOutput)
}

// DrInstanceArrayInput is an input type that accepts DrInstanceArray and DrInstanceArrayOutput values.
// You can construct a concrete instance of `DrInstanceArrayInput` via:
//
//	DrInstanceArray{ DrInstanceArgs{...} }
type DrInstanceArrayInput interface {
	pulumi.Input

	ToDrInstanceArrayOutput() DrInstanceArrayOutput
	ToDrInstanceArrayOutputWithContext(context.Context) DrInstanceArrayOutput
}

type DrInstanceArray []DrInstanceInput

func (DrInstanceArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrInstance)(nil)).Elem()
}

func (i DrInstanceArray) ToDrInstanceArrayOutput() DrInstanceArrayOutput {
	return i.ToDrInstanceArrayOutputWithContext(context.Background())
}

func (i DrInstanceArray) ToDrInstanceArrayOutputWithContext(ctx context.Context) DrInstanceArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrInstanceArrayOutput)
}

// DrInstanceMapInput is an input type that accepts DrInstanceMap and DrInstanceMapOutput values.
// You can construct a concrete instance of `DrInstanceMapInput` via:
//
//	DrInstanceMap{ "key": DrInstanceArgs{...} }
type DrInstanceMapInput interface {
	pulumi.Input

	ToDrInstanceMapOutput() DrInstanceMapOutput
	ToDrInstanceMapOutputWithContext(context.Context) DrInstanceMapOutput
}

type DrInstanceMap map[string]DrInstanceInput

func (DrInstanceMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrInstance)(nil)).Elem()
}

func (i DrInstanceMap) ToDrInstanceMapOutput() DrInstanceMapOutput {
	return i.ToDrInstanceMapOutputWithContext(context.Background())
}

func (i DrInstanceMap) ToDrInstanceMapOutputWithContext(ctx context.Context) DrInstanceMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DrInstanceMapOutput)
}

type DrInstanceOutput struct{ *pulumi.OutputState }

func (DrInstanceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DrInstance)(nil)).Elem()
}

func (o DrInstanceOutput) ToDrInstanceOutput() DrInstanceOutput {
	return o
}

func (o DrInstanceOutput) ToDrInstanceOutputWithContext(ctx context.Context) DrInstanceOutput {
	return o
}

// Auto renew flag. NOTES: Only supported prepaid instance.
func (o DrInstanceOutput) AutoRenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.AutoRenewFlag }).(pulumi.IntPtrOutput)
}

// Indicates which availability zone will be used.
func (o DrInstanceOutput) AvailabilityZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.AvailabilityZone }).(pulumi.StringOutput)
}

// Pay type of instance. Valid values:`PREPAID`, `POSTPAID`. Default is `POSTPAID`.
func (o DrInstanceOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringPtrOutput { return v.ChargeType }).(pulumi.StringPtrOutput)
}

// CPU cores.
func (o DrInstanceOutput) Cpu() pulumi.IntOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntOutput { return v.Cpu }).(pulumi.IntOutput)
}

// Specify device type, available values: `UNIVERSAL` (default), `EXCLUSIVE`, `BASIC`.
func (o DrInstanceOutput) DeviceType() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.DeviceType }).(pulumi.StringOutput)
}

// Zone information about first slave instance.
func (o DrInstanceOutput) FirstSlaveZone() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.FirstSlaveZone }).(pulumi.StringOutput)
}

// Indicate whether to delete instance directly or not. Default is `false`. If set true, the instance will be deleted
// instead of staying recycle bin. Note: only works for `PREPAID` instance.
func (o DrInstanceOutput) ForceDelete() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.BoolPtrOutput { return v.ForceDelete }).(pulumi.BoolPtrOutput)
}

// The name of a mysql instance.
func (o DrInstanceOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.InstanceName }).(pulumi.StringOutput)
}

// instance intranet IP.
func (o DrInstanceOutput) IntranetIp() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.IntranetIp }).(pulumi.StringOutput)
}

// Public access port. Valid value ranges: [1024~65535]. The default value is `3306`.
func (o DrInstanceOutput) IntranetPort() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.IntranetPort }).(pulumi.IntPtrOutput)
}

// Indicates the master instance ID of recovery instances.
func (o DrInstanceOutput) MasterInstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.MasterInstanceId }).(pulumi.StringOutput)
}

// The zone information of the primary instance is required when you purchase a disaster recovery instance.
func (o DrInstanceOutput) MasterRegion() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.MasterRegion }).(pulumi.StringOutput)
}

// Memory size (in MB).
func (o DrInstanceOutput) MemSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntOutput { return v.MemSize }).(pulumi.IntOutput)
}

// Pay type of instance. Valid values: `0`, `1`. `0`: prepaid, `1`: postpaid.
//
// Deprecated: It has been deprecated from version 1.36.0. Please use `charge_type` instead.
func (o DrInstanceOutput) PayType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.PayType }).(pulumi.IntPtrOutput)
}

// Period of instance. NOTES: Only supported prepaid instance.
//
// Deprecated: It has been deprecated from version 1.36.0. Please use `prepaid_period` instead.
func (o DrInstanceOutput) Period() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.Period }).(pulumi.IntPtrOutput)
}

// Period of instance. NOTES: Only supported prepaid instance.
func (o DrInstanceOutput) PrepaidPeriod() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.PrepaidPeriod }).(pulumi.IntPtrOutput)
}

// Project ID, default value is 0.
func (o DrInstanceOutput) ProjectId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.ProjectId }).(pulumi.IntPtrOutput)
}

// Zone information about second slave instance.
func (o DrInstanceOutput) SecondSlaveZone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringPtrOutput { return v.SecondSlaveZone }).(pulumi.StringPtrOutput)
}

// Security groups to use.
func (o DrInstanceOutput) SecurityGroups() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringArrayOutput { return v.SecurityGroups }).(pulumi.StringArrayOutput)
}

// Availability zone deployment method. Available values: 0 - Single availability zone; 1 - Multiple availability zones.
func (o DrInstanceOutput) SlaveDeployMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.SlaveDeployMode }).(pulumi.IntPtrOutput)
}

// Data replication mode. 0 - Async replication; 1 - Semisync replication; 2 - Strongsync replication.
func (o DrInstanceOutput) SlaveSyncMode() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntPtrOutput { return v.SlaveSyncMode }).(pulumi.IntPtrOutput)
}

// Private network ID. If `vpc_id` is set, this value is required.
func (o DrInstanceOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.SubnetId }).(pulumi.StringOutput)
}

// Instance tags.
func (o DrInstanceOutput) Tags() pulumi.MapOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.MapOutput { return v.Tags }).(pulumi.MapOutput)
}

// Disk size (in GB).
func (o DrInstanceOutput) VolumeSize() pulumi.IntOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.IntOutput { return v.VolumeSize }).(pulumi.IntOutput)
}

// ID of VPC, which can be modified once every 24 hours and can't be removed.
func (o DrInstanceOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v *DrInstance) pulumi.StringOutput { return v.VpcId }).(pulumi.StringOutput)
}

type DrInstanceArrayOutput struct{ *pulumi.OutputState }

func (DrInstanceArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DrInstance)(nil)).Elem()
}

func (o DrInstanceArrayOutput) ToDrInstanceArrayOutput() DrInstanceArrayOutput {
	return o
}

func (o DrInstanceArrayOutput) ToDrInstanceArrayOutputWithContext(ctx context.Context) DrInstanceArrayOutput {
	return o
}

func (o DrInstanceArrayOutput) Index(i pulumi.IntInput) DrInstanceOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DrInstance {
		return vs[0].([]*DrInstance)[vs[1].(int)]
	}).(DrInstanceOutput)
}

type DrInstanceMapOutput struct{ *pulumi.OutputState }

func (DrInstanceMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DrInstance)(nil)).Elem()
}

func (o DrInstanceMapOutput) ToDrInstanceMapOutput() DrInstanceMapOutput {
	return o
}

func (o DrInstanceMapOutput) ToDrInstanceMapOutputWithContext(ctx context.Context) DrInstanceMapOutput {
	return o
}

func (o DrInstanceMapOutput) MapIndex(k pulumi.StringInput) DrInstanceOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DrInstance {
		return vs[0].(map[string]*DrInstance)[vs[1].(string)]
	}).(DrInstanceOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DrInstanceInput)(nil)).Elem(), &DrInstance{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrInstanceArrayInput)(nil)).Elem(), DrInstanceArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DrInstanceMapInput)(nil)).Elem(), DrInstanceMap{})
	pulumi.RegisterOutputType(DrInstanceOutput{})
	pulumi.RegisterOutputType(DrInstanceArrayOutput{})
	pulumi.RegisterOutputType(DrInstanceMapOutput{})
}
