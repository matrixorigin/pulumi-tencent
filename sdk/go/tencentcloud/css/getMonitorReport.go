// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package css

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMonitorReport(ctx *pulumi.Context, args *GetMonitorReportArgs, opts ...pulumi.InvokeOption) (*GetMonitorReportResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMonitorReportResult
	err := ctx.Invoke("tencentcloud:Css/getMonitorReport:getMonitorReport", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMonitorReport.
type GetMonitorReportArgs struct {
	MonitorId        string  `pulumi:"monitorId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getMonitorReport.
type GetMonitorReportResult struct {
	DiagnoseResults []GetMonitorReportDiagnoseResult `pulumi:"diagnoseResults"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                      `pulumi:"id"`
	MonitorId        string                      `pulumi:"monitorId"`
	MpsResults       []GetMonitorReportMpsResult `pulumi:"mpsResults"`
	ResultOutputFile *string                     `pulumi:"resultOutputFile"`
}

func GetMonitorReportOutput(ctx *pulumi.Context, args GetMonitorReportOutputArgs, opts ...pulumi.InvokeOption) GetMonitorReportResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMonitorReportResult, error) {
			args := v.(GetMonitorReportArgs)
			r, err := GetMonitorReport(ctx, &args, opts...)
			var s GetMonitorReportResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMonitorReportResultOutput)
}

// A collection of arguments for invoking getMonitorReport.
type GetMonitorReportOutputArgs struct {
	MonitorId        pulumi.StringInput    `pulumi:"monitorId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetMonitorReportOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorReportArgs)(nil)).Elem()
}

// A collection of values returned by getMonitorReport.
type GetMonitorReportResultOutput struct{ *pulumi.OutputState }

func (GetMonitorReportResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMonitorReportResult)(nil)).Elem()
}

func (o GetMonitorReportResultOutput) ToGetMonitorReportResultOutput() GetMonitorReportResultOutput {
	return o
}

func (o GetMonitorReportResultOutput) ToGetMonitorReportResultOutputWithContext(ctx context.Context) GetMonitorReportResultOutput {
	return o
}

func (o GetMonitorReportResultOutput) DiagnoseResults() GetMonitorReportDiagnoseResultArrayOutput {
	return o.ApplyT(func(v GetMonitorReportResult) []GetMonitorReportDiagnoseResult { return v.DiagnoseResults }).(GetMonitorReportDiagnoseResultArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMonitorReportResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorReportResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMonitorReportResultOutput) MonitorId() pulumi.StringOutput {
	return o.ApplyT(func(v GetMonitorReportResult) string { return v.MonitorId }).(pulumi.StringOutput)
}

func (o GetMonitorReportResultOutput) MpsResults() GetMonitorReportMpsResultArrayOutput {
	return o.ApplyT(func(v GetMonitorReportResult) []GetMonitorReportMpsResult { return v.MpsResults }).(GetMonitorReportMpsResultArrayOutput)
}

func (o GetMonitorReportResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMonitorReportResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMonitorReportResultOutput{})
}
