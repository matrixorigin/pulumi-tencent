// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package apigateway

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func LookupServiceEnvironmentList(ctx *pulumi.Context, args *LookupServiceEnvironmentListArgs, opts ...pulumi.InvokeOption) (*LookupServiceEnvironmentListResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupServiceEnvironmentListResult
	err := ctx.Invoke("tencentcloud:ApiGateway/getServiceEnvironmentList:getServiceEnvironmentList", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getServiceEnvironmentList.
type LookupServiceEnvironmentListArgs struct {
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	ServiceId        string  `pulumi:"serviceId"`
}

// A collection of values returned by getServiceEnvironmentList.
type LookupServiceEnvironmentListResult struct {
	// The provider-assigned unique ID for this managed resource.
	Id               string                            `pulumi:"id"`
	ResultOutputFile *string                           `pulumi:"resultOutputFile"`
	Results          []GetServiceEnvironmentListResult `pulumi:"results"`
	ServiceId        string                            `pulumi:"serviceId"`
}

func LookupServiceEnvironmentListOutput(ctx *pulumi.Context, args LookupServiceEnvironmentListOutputArgs, opts ...pulumi.InvokeOption) LookupServiceEnvironmentListResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (LookupServiceEnvironmentListResult, error) {
			args := v.(LookupServiceEnvironmentListArgs)
			r, err := LookupServiceEnvironmentList(ctx, &args, opts...)
			var s LookupServiceEnvironmentListResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(LookupServiceEnvironmentListResultOutput)
}

// A collection of arguments for invoking getServiceEnvironmentList.
type LookupServiceEnvironmentListOutputArgs struct {
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	ServiceId        pulumi.StringInput    `pulumi:"serviceId"`
}

func (LookupServiceEnvironmentListOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceEnvironmentListArgs)(nil)).Elem()
}

// A collection of values returned by getServiceEnvironmentList.
type LookupServiceEnvironmentListResultOutput struct{ *pulumi.OutputState }

func (LookupServiceEnvironmentListResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupServiceEnvironmentListResult)(nil)).Elem()
}

func (o LookupServiceEnvironmentListResultOutput) ToLookupServiceEnvironmentListResultOutput() LookupServiceEnvironmentListResultOutput {
	return o
}

func (o LookupServiceEnvironmentListResultOutput) ToLookupServiceEnvironmentListResultOutputWithContext(ctx context.Context) LookupServiceEnvironmentListResultOutput {
	return o
}

// The provider-assigned unique ID for this managed resource.
func (o LookupServiceEnvironmentListResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentListResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o LookupServiceEnvironmentListResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentListResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o LookupServiceEnvironmentListResultOutput) Results() GetServiceEnvironmentListResultArrayOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentListResult) []GetServiceEnvironmentListResult { return v.Results }).(GetServiceEnvironmentListResultArrayOutput)
}

func (o LookupServiceEnvironmentListResultOutput) ServiceId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupServiceEnvironmentListResult) string { return v.ServiceId }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupServiceEnvironmentListResultOutput{})
}
