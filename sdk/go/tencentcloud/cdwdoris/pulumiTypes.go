// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cdwdoris

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceBeSpec struct {
	Count    int    `pulumi:"count"`
	DiskSize int    `pulumi:"diskSize"`
	SpecName string `pulumi:"specName"`
}

// InstanceBeSpecInput is an input type that accepts InstanceBeSpecArgs and InstanceBeSpecOutput values.
// You can construct a concrete instance of `InstanceBeSpecInput` via:
//
//	InstanceBeSpecArgs{...}
type InstanceBeSpecInput interface {
	pulumi.Input

	ToInstanceBeSpecOutput() InstanceBeSpecOutput
	ToInstanceBeSpecOutputWithContext(context.Context) InstanceBeSpecOutput
}

type InstanceBeSpecArgs struct {
	Count    pulumi.IntInput    `pulumi:"count"`
	DiskSize pulumi.IntInput    `pulumi:"diskSize"`
	SpecName pulumi.StringInput `pulumi:"specName"`
}

func (InstanceBeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBeSpec)(nil)).Elem()
}

func (i InstanceBeSpecArgs) ToInstanceBeSpecOutput() InstanceBeSpecOutput {
	return i.ToInstanceBeSpecOutputWithContext(context.Background())
}

func (i InstanceBeSpecArgs) ToInstanceBeSpecOutputWithContext(ctx context.Context) InstanceBeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBeSpecOutput)
}

func (i InstanceBeSpecArgs) ToInstanceBeSpecPtrOutput() InstanceBeSpecPtrOutput {
	return i.ToInstanceBeSpecPtrOutputWithContext(context.Background())
}

func (i InstanceBeSpecArgs) ToInstanceBeSpecPtrOutputWithContext(ctx context.Context) InstanceBeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBeSpecOutput).ToInstanceBeSpecPtrOutputWithContext(ctx)
}

// InstanceBeSpecPtrInput is an input type that accepts InstanceBeSpecArgs, InstanceBeSpecPtr and InstanceBeSpecPtrOutput values.
// You can construct a concrete instance of `InstanceBeSpecPtrInput` via:
//
//	        InstanceBeSpecArgs{...}
//
//	or:
//
//	        nil
type InstanceBeSpecPtrInput interface {
	pulumi.Input

	ToInstanceBeSpecPtrOutput() InstanceBeSpecPtrOutput
	ToInstanceBeSpecPtrOutputWithContext(context.Context) InstanceBeSpecPtrOutput
}

type instanceBeSpecPtrType InstanceBeSpecArgs

func InstanceBeSpecPtr(v *InstanceBeSpecArgs) InstanceBeSpecPtrInput {
	return (*instanceBeSpecPtrType)(v)
}

func (*instanceBeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBeSpec)(nil)).Elem()
}

func (i *instanceBeSpecPtrType) ToInstanceBeSpecPtrOutput() InstanceBeSpecPtrOutput {
	return i.ToInstanceBeSpecPtrOutputWithContext(context.Background())
}

func (i *instanceBeSpecPtrType) ToInstanceBeSpecPtrOutputWithContext(ctx context.Context) InstanceBeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceBeSpecPtrOutput)
}

type InstanceBeSpecOutput struct{ *pulumi.OutputState }

func (InstanceBeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceBeSpec)(nil)).Elem()
}

func (o InstanceBeSpecOutput) ToInstanceBeSpecOutput() InstanceBeSpecOutput {
	return o
}

func (o InstanceBeSpecOutput) ToInstanceBeSpecOutputWithContext(ctx context.Context) InstanceBeSpecOutput {
	return o
}

func (o InstanceBeSpecOutput) ToInstanceBeSpecPtrOutput() InstanceBeSpecPtrOutput {
	return o.ToInstanceBeSpecPtrOutputWithContext(context.Background())
}

func (o InstanceBeSpecOutput) ToInstanceBeSpecPtrOutputWithContext(ctx context.Context) InstanceBeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceBeSpec) *InstanceBeSpec {
		return &v
	}).(InstanceBeSpecPtrOutput)
}

func (o InstanceBeSpecOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceBeSpec) int { return v.Count }).(pulumi.IntOutput)
}

func (o InstanceBeSpecOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceBeSpec) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o InstanceBeSpecOutput) SpecName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceBeSpec) string { return v.SpecName }).(pulumi.StringOutput)
}

type InstanceBeSpecPtrOutput struct{ *pulumi.OutputState }

func (InstanceBeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceBeSpec)(nil)).Elem()
}

func (o InstanceBeSpecPtrOutput) ToInstanceBeSpecPtrOutput() InstanceBeSpecPtrOutput {
	return o
}

func (o InstanceBeSpecPtrOutput) ToInstanceBeSpecPtrOutputWithContext(ctx context.Context) InstanceBeSpecPtrOutput {
	return o
}

func (o InstanceBeSpecPtrOutput) Elem() InstanceBeSpecOutput {
	return o.ApplyT(func(v *InstanceBeSpec) InstanceBeSpec {
		if v != nil {
			return *v
		}
		var ret InstanceBeSpec
		return ret
	}).(InstanceBeSpecOutput)
}

func (o InstanceBeSpecPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceBeSpec) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

func (o InstanceBeSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceBeSpec) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o InstanceBeSpecPtrOutput) SpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceBeSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SpecName
	}).(pulumi.StringPtrOutput)
}

type InstanceChargeProperties struct {
	ChargeType *string `pulumi:"chargeType"`
	RenewFlag  *int    `pulumi:"renewFlag"`
	TimeSpan   *int    `pulumi:"timeSpan"`
	TimeUnit   *string `pulumi:"timeUnit"`
}

// InstanceChargePropertiesInput is an input type that accepts InstanceChargePropertiesArgs and InstanceChargePropertiesOutput values.
// You can construct a concrete instance of `InstanceChargePropertiesInput` via:
//
//	InstanceChargePropertiesArgs{...}
type InstanceChargePropertiesInput interface {
	pulumi.Input

	ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput
	ToInstanceChargePropertiesOutputWithContext(context.Context) InstanceChargePropertiesOutput
}

type InstanceChargePropertiesArgs struct {
	ChargeType pulumi.StringPtrInput `pulumi:"chargeType"`
	RenewFlag  pulumi.IntPtrInput    `pulumi:"renewFlag"`
	TimeSpan   pulumi.IntPtrInput    `pulumi:"timeSpan"`
	TimeUnit   pulumi.StringPtrInput `pulumi:"timeUnit"`
}

func (InstanceChargePropertiesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceChargeProperties)(nil)).Elem()
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput {
	return i.ToInstanceChargePropertiesOutputWithContext(context.Background())
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesOutputWithContext(ctx context.Context) InstanceChargePropertiesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesOutput)
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return i.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (i InstanceChargePropertiesArgs) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesOutput).ToInstanceChargePropertiesPtrOutputWithContext(ctx)
}

// InstanceChargePropertiesPtrInput is an input type that accepts InstanceChargePropertiesArgs, InstanceChargePropertiesPtr and InstanceChargePropertiesPtrOutput values.
// You can construct a concrete instance of `InstanceChargePropertiesPtrInput` via:
//
//	        InstanceChargePropertiesArgs{...}
//
//	or:
//
//	        nil
type InstanceChargePropertiesPtrInput interface {
	pulumi.Input

	ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput
	ToInstanceChargePropertiesPtrOutputWithContext(context.Context) InstanceChargePropertiesPtrOutput
}

type instanceChargePropertiesPtrType InstanceChargePropertiesArgs

func InstanceChargePropertiesPtr(v *InstanceChargePropertiesArgs) InstanceChargePropertiesPtrInput {
	return (*instanceChargePropertiesPtrType)(v)
}

func (*instanceChargePropertiesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceChargeProperties)(nil)).Elem()
}

func (i *instanceChargePropertiesPtrType) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return i.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (i *instanceChargePropertiesPtrType) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceChargePropertiesPtrOutput)
}

type InstanceChargePropertiesOutput struct{ *pulumi.OutputState }

func (InstanceChargePropertiesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceChargeProperties)(nil)).Elem()
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesOutput() InstanceChargePropertiesOutput {
	return o
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesOutputWithContext(ctx context.Context) InstanceChargePropertiesOutput {
	return o
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return o.ToInstanceChargePropertiesPtrOutputWithContext(context.Background())
}

func (o InstanceChargePropertiesOutput) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceChargeProperties) *InstanceChargeProperties {
		return &v
	}).(InstanceChargePropertiesPtrOutput)
}

func (o InstanceChargePropertiesOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceChargeProperties) *string { return v.ChargeType }).(pulumi.StringPtrOutput)
}

func (o InstanceChargePropertiesOutput) RenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceChargeProperties) *int { return v.RenewFlag }).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesOutput) TimeSpan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceChargeProperties) *int { return v.TimeSpan }).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceChargeProperties) *string { return v.TimeUnit }).(pulumi.StringPtrOutput)
}

type InstanceChargePropertiesPtrOutput struct{ *pulumi.OutputState }

func (InstanceChargePropertiesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceChargeProperties)(nil)).Elem()
}

func (o InstanceChargePropertiesPtrOutput) ToInstanceChargePropertiesPtrOutput() InstanceChargePropertiesPtrOutput {
	return o
}

func (o InstanceChargePropertiesPtrOutput) ToInstanceChargePropertiesPtrOutputWithContext(ctx context.Context) InstanceChargePropertiesPtrOutput {
	return o
}

func (o InstanceChargePropertiesPtrOutput) Elem() InstanceChargePropertiesOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) InstanceChargeProperties {
		if v != nil {
			return *v
		}
		var ret InstanceChargeProperties
		return ret
	}).(InstanceChargePropertiesOutput)
}

func (o InstanceChargePropertiesPtrOutput) ChargeType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *string {
		if v == nil {
			return nil
		}
		return v.ChargeType
	}).(pulumi.StringPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) RenewFlag() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *int {
		if v == nil {
			return nil
		}
		return v.RenewFlag
	}).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) TimeSpan() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *int {
		if v == nil {
			return nil
		}
		return v.TimeSpan
	}).(pulumi.IntPtrOutput)
}

func (o InstanceChargePropertiesPtrOutput) TimeUnit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceChargeProperties) *string {
		if v == nil {
			return nil
		}
		return v.TimeUnit
	}).(pulumi.StringPtrOutput)
}

type InstanceFeSpec struct {
	Count    int    `pulumi:"count"`
	DiskSize int    `pulumi:"diskSize"`
	SpecName string `pulumi:"specName"`
}

// InstanceFeSpecInput is an input type that accepts InstanceFeSpecArgs and InstanceFeSpecOutput values.
// You can construct a concrete instance of `InstanceFeSpecInput` via:
//
//	InstanceFeSpecArgs{...}
type InstanceFeSpecInput interface {
	pulumi.Input

	ToInstanceFeSpecOutput() InstanceFeSpecOutput
	ToInstanceFeSpecOutputWithContext(context.Context) InstanceFeSpecOutput
}

type InstanceFeSpecArgs struct {
	Count    pulumi.IntInput    `pulumi:"count"`
	DiskSize pulumi.IntInput    `pulumi:"diskSize"`
	SpecName pulumi.StringInput `pulumi:"specName"`
}

func (InstanceFeSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFeSpec)(nil)).Elem()
}

func (i InstanceFeSpecArgs) ToInstanceFeSpecOutput() InstanceFeSpecOutput {
	return i.ToInstanceFeSpecOutputWithContext(context.Background())
}

func (i InstanceFeSpecArgs) ToInstanceFeSpecOutputWithContext(ctx context.Context) InstanceFeSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFeSpecOutput)
}

func (i InstanceFeSpecArgs) ToInstanceFeSpecPtrOutput() InstanceFeSpecPtrOutput {
	return i.ToInstanceFeSpecPtrOutputWithContext(context.Background())
}

func (i InstanceFeSpecArgs) ToInstanceFeSpecPtrOutputWithContext(ctx context.Context) InstanceFeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFeSpecOutput).ToInstanceFeSpecPtrOutputWithContext(ctx)
}

// InstanceFeSpecPtrInput is an input type that accepts InstanceFeSpecArgs, InstanceFeSpecPtr and InstanceFeSpecPtrOutput values.
// You can construct a concrete instance of `InstanceFeSpecPtrInput` via:
//
//	        InstanceFeSpecArgs{...}
//
//	or:
//
//	        nil
type InstanceFeSpecPtrInput interface {
	pulumi.Input

	ToInstanceFeSpecPtrOutput() InstanceFeSpecPtrOutput
	ToInstanceFeSpecPtrOutputWithContext(context.Context) InstanceFeSpecPtrOutput
}

type instanceFeSpecPtrType InstanceFeSpecArgs

func InstanceFeSpecPtr(v *InstanceFeSpecArgs) InstanceFeSpecPtrInput {
	return (*instanceFeSpecPtrType)(v)
}

func (*instanceFeSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceFeSpec)(nil)).Elem()
}

func (i *instanceFeSpecPtrType) ToInstanceFeSpecPtrOutput() InstanceFeSpecPtrOutput {
	return i.ToInstanceFeSpecPtrOutputWithContext(context.Background())
}

func (i *instanceFeSpecPtrType) ToInstanceFeSpecPtrOutputWithContext(ctx context.Context) InstanceFeSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceFeSpecPtrOutput)
}

type InstanceFeSpecOutput struct{ *pulumi.OutputState }

func (InstanceFeSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceFeSpec)(nil)).Elem()
}

func (o InstanceFeSpecOutput) ToInstanceFeSpecOutput() InstanceFeSpecOutput {
	return o
}

func (o InstanceFeSpecOutput) ToInstanceFeSpecOutputWithContext(ctx context.Context) InstanceFeSpecOutput {
	return o
}

func (o InstanceFeSpecOutput) ToInstanceFeSpecPtrOutput() InstanceFeSpecPtrOutput {
	return o.ToInstanceFeSpecPtrOutputWithContext(context.Background())
}

func (o InstanceFeSpecOutput) ToInstanceFeSpecPtrOutputWithContext(ctx context.Context) InstanceFeSpecPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceFeSpec) *InstanceFeSpec {
		return &v
	}).(InstanceFeSpecPtrOutput)
}

func (o InstanceFeSpecOutput) Count() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceFeSpec) int { return v.Count }).(pulumi.IntOutput)
}

func (o InstanceFeSpecOutput) DiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v InstanceFeSpec) int { return v.DiskSize }).(pulumi.IntOutput)
}

func (o InstanceFeSpecOutput) SpecName() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceFeSpec) string { return v.SpecName }).(pulumi.StringOutput)
}

type InstanceFeSpecPtrOutput struct{ *pulumi.OutputState }

func (InstanceFeSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceFeSpec)(nil)).Elem()
}

func (o InstanceFeSpecPtrOutput) ToInstanceFeSpecPtrOutput() InstanceFeSpecPtrOutput {
	return o
}

func (o InstanceFeSpecPtrOutput) ToInstanceFeSpecPtrOutputWithContext(ctx context.Context) InstanceFeSpecPtrOutput {
	return o
}

func (o InstanceFeSpecPtrOutput) Elem() InstanceFeSpecOutput {
	return o.ApplyT(func(v *InstanceFeSpec) InstanceFeSpec {
		if v != nil {
			return *v
		}
		var ret InstanceFeSpec
		return ret
	}).(InstanceFeSpecOutput)
}

func (o InstanceFeSpecPtrOutput) Count() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceFeSpec) *int {
		if v == nil {
			return nil
		}
		return &v.Count
	}).(pulumi.IntPtrOutput)
}

func (o InstanceFeSpecPtrOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceFeSpec) *int {
		if v == nil {
			return nil
		}
		return &v.DiskSize
	}).(pulumi.IntPtrOutput)
}

func (o InstanceFeSpecPtrOutput) SpecName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceFeSpec) *string {
		if v == nil {
			return nil
		}
		return &v.SpecName
	}).(pulumi.StringPtrOutput)
}

type InstanceTag struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// InstanceTagInput is an input type that accepts InstanceTagArgs and InstanceTagOutput values.
// You can construct a concrete instance of `InstanceTagInput` via:
//
//	InstanceTagArgs{...}
type InstanceTagInput interface {
	pulumi.Input

	ToInstanceTagOutput() InstanceTagOutput
	ToInstanceTagOutputWithContext(context.Context) InstanceTagOutput
}

type InstanceTagArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (InstanceTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (i InstanceTagArgs) ToInstanceTagOutput() InstanceTagOutput {
	return i.ToInstanceTagOutputWithContext(context.Background())
}

func (i InstanceTagArgs) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagOutput)
}

// InstanceTagArrayInput is an input type that accepts InstanceTagArray and InstanceTagArrayOutput values.
// You can construct a concrete instance of `InstanceTagArrayInput` via:
//
//	InstanceTagArray{ InstanceTagArgs{...} }
type InstanceTagArrayInput interface {
	pulumi.Input

	ToInstanceTagArrayOutput() InstanceTagArrayOutput
	ToInstanceTagArrayOutputWithContext(context.Context) InstanceTagArrayOutput
}

type InstanceTagArray []InstanceTagInput

func (InstanceTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (i InstanceTagArray) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return i.ToInstanceTagArrayOutputWithContext(context.Background())
}

func (i InstanceTagArray) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceTagArrayOutput)
}

type InstanceTagOutput struct{ *pulumi.OutputState }

func (InstanceTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceTag)(nil)).Elem()
}

func (o InstanceTagOutput) ToInstanceTagOutput() InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) ToInstanceTagOutputWithContext(ctx context.Context) InstanceTagOutput {
	return o
}

func (o InstanceTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o InstanceTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v InstanceTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type InstanceTagArrayOutput struct{ *pulumi.OutputState }

func (InstanceTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceTag)(nil)).Elem()
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutput() InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) ToInstanceTagArrayOutputWithContext(ctx context.Context) InstanceTagArrayOutput {
	return o
}

func (o InstanceTagArrayOutput) Index(i pulumi.IntInput) InstanceTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceTag {
		return vs[0].([]InstanceTag)[vs[1].(int)]
	}).(InstanceTagOutput)
}

type InstanceUserMultiZoneInfos struct {
	SubnetId    *string `pulumi:"subnetId"`
	SubnetIpNum *int    `pulumi:"subnetIpNum"`
	Zone        *string `pulumi:"zone"`
}

// InstanceUserMultiZoneInfosInput is an input type that accepts InstanceUserMultiZoneInfosArgs and InstanceUserMultiZoneInfosOutput values.
// You can construct a concrete instance of `InstanceUserMultiZoneInfosInput` via:
//
//	InstanceUserMultiZoneInfosArgs{...}
type InstanceUserMultiZoneInfosInput interface {
	pulumi.Input

	ToInstanceUserMultiZoneInfosOutput() InstanceUserMultiZoneInfosOutput
	ToInstanceUserMultiZoneInfosOutputWithContext(context.Context) InstanceUserMultiZoneInfosOutput
}

type InstanceUserMultiZoneInfosArgs struct {
	SubnetId    pulumi.StringPtrInput `pulumi:"subnetId"`
	SubnetIpNum pulumi.IntPtrInput    `pulumi:"subnetIpNum"`
	Zone        pulumi.StringPtrInput `pulumi:"zone"`
}

func (InstanceUserMultiZoneInfosArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUserMultiZoneInfos)(nil)).Elem()
}

func (i InstanceUserMultiZoneInfosArgs) ToInstanceUserMultiZoneInfosOutput() InstanceUserMultiZoneInfosOutput {
	return i.ToInstanceUserMultiZoneInfosOutputWithContext(context.Background())
}

func (i InstanceUserMultiZoneInfosArgs) ToInstanceUserMultiZoneInfosOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMultiZoneInfosOutput)
}

func (i InstanceUserMultiZoneInfosArgs) ToInstanceUserMultiZoneInfosPtrOutput() InstanceUserMultiZoneInfosPtrOutput {
	return i.ToInstanceUserMultiZoneInfosPtrOutputWithContext(context.Background())
}

func (i InstanceUserMultiZoneInfosArgs) ToInstanceUserMultiZoneInfosPtrOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMultiZoneInfosOutput).ToInstanceUserMultiZoneInfosPtrOutputWithContext(ctx)
}

// InstanceUserMultiZoneInfosPtrInput is an input type that accepts InstanceUserMultiZoneInfosArgs, InstanceUserMultiZoneInfosPtr and InstanceUserMultiZoneInfosPtrOutput values.
// You can construct a concrete instance of `InstanceUserMultiZoneInfosPtrInput` via:
//
//	        InstanceUserMultiZoneInfosArgs{...}
//
//	or:
//
//	        nil
type InstanceUserMultiZoneInfosPtrInput interface {
	pulumi.Input

	ToInstanceUserMultiZoneInfosPtrOutput() InstanceUserMultiZoneInfosPtrOutput
	ToInstanceUserMultiZoneInfosPtrOutputWithContext(context.Context) InstanceUserMultiZoneInfosPtrOutput
}

type instanceUserMultiZoneInfosPtrType InstanceUserMultiZoneInfosArgs

func InstanceUserMultiZoneInfosPtr(v *InstanceUserMultiZoneInfosArgs) InstanceUserMultiZoneInfosPtrInput {
	return (*instanceUserMultiZoneInfosPtrType)(v)
}

func (*instanceUserMultiZoneInfosPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceUserMultiZoneInfos)(nil)).Elem()
}

func (i *instanceUserMultiZoneInfosPtrType) ToInstanceUserMultiZoneInfosPtrOutput() InstanceUserMultiZoneInfosPtrOutput {
	return i.ToInstanceUserMultiZoneInfosPtrOutputWithContext(context.Background())
}

func (i *instanceUserMultiZoneInfosPtrType) ToInstanceUserMultiZoneInfosPtrOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceUserMultiZoneInfosPtrOutput)
}

type InstanceUserMultiZoneInfosOutput struct{ *pulumi.OutputState }

func (InstanceUserMultiZoneInfosOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceUserMultiZoneInfos)(nil)).Elem()
}

func (o InstanceUserMultiZoneInfosOutput) ToInstanceUserMultiZoneInfosOutput() InstanceUserMultiZoneInfosOutput {
	return o
}

func (o InstanceUserMultiZoneInfosOutput) ToInstanceUserMultiZoneInfosOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosOutput {
	return o
}

func (o InstanceUserMultiZoneInfosOutput) ToInstanceUserMultiZoneInfosPtrOutput() InstanceUserMultiZoneInfosPtrOutput {
	return o.ToInstanceUserMultiZoneInfosPtrOutputWithContext(context.Background())
}

func (o InstanceUserMultiZoneInfosOutput) ToInstanceUserMultiZoneInfosPtrOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v InstanceUserMultiZoneInfos) *InstanceUserMultiZoneInfos {
		return &v
	}).(InstanceUserMultiZoneInfosPtrOutput)
}

func (o InstanceUserMultiZoneInfosOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUserMultiZoneInfos) *string { return v.SubnetId }).(pulumi.StringPtrOutput)
}

func (o InstanceUserMultiZoneInfosOutput) SubnetIpNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceUserMultiZoneInfos) *int { return v.SubnetIpNum }).(pulumi.IntPtrOutput)
}

func (o InstanceUserMultiZoneInfosOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceUserMultiZoneInfos) *string { return v.Zone }).(pulumi.StringPtrOutput)
}

type InstanceUserMultiZoneInfosPtrOutput struct{ *pulumi.OutputState }

func (InstanceUserMultiZoneInfosPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**InstanceUserMultiZoneInfos)(nil)).Elem()
}

func (o InstanceUserMultiZoneInfosPtrOutput) ToInstanceUserMultiZoneInfosPtrOutput() InstanceUserMultiZoneInfosPtrOutput {
	return o
}

func (o InstanceUserMultiZoneInfosPtrOutput) ToInstanceUserMultiZoneInfosPtrOutputWithContext(ctx context.Context) InstanceUserMultiZoneInfosPtrOutput {
	return o
}

func (o InstanceUserMultiZoneInfosPtrOutput) Elem() InstanceUserMultiZoneInfosOutput {
	return o.ApplyT(func(v *InstanceUserMultiZoneInfos) InstanceUserMultiZoneInfos {
		if v != nil {
			return *v
		}
		var ret InstanceUserMultiZoneInfos
		return ret
	}).(InstanceUserMultiZoneInfosOutput)
}

func (o InstanceUserMultiZoneInfosPtrOutput) SubnetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceUserMultiZoneInfos) *string {
		if v == nil {
			return nil
		}
		return v.SubnetId
	}).(pulumi.StringPtrOutput)
}

func (o InstanceUserMultiZoneInfosPtrOutput) SubnetIpNum() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *InstanceUserMultiZoneInfos) *int {
		if v == nil {
			return nil
		}
		return v.SubnetIpNum
	}).(pulumi.IntPtrOutput)
}

func (o InstanceUserMultiZoneInfosPtrOutput) Zone() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *InstanceUserMultiZoneInfos) *string {
		if v == nil {
			return nil
		}
		return v.Zone
	}).(pulumi.StringPtrOutput)
}

type WorkloadGroupWorkloadGroup struct {
	CpuHardLimit           *string `pulumi:"cpuHardLimit"`
	CpuShare               *int    `pulumi:"cpuShare"`
	EnableMemoryOverCommit *bool   `pulumi:"enableMemoryOverCommit"`
	MemoryLimit            *int    `pulumi:"memoryLimit"`
	WorkloadGroupName      *string `pulumi:"workloadGroupName"`
}

// WorkloadGroupWorkloadGroupInput is an input type that accepts WorkloadGroupWorkloadGroupArgs and WorkloadGroupWorkloadGroupOutput values.
// You can construct a concrete instance of `WorkloadGroupWorkloadGroupInput` via:
//
//	WorkloadGroupWorkloadGroupArgs{...}
type WorkloadGroupWorkloadGroupInput interface {
	pulumi.Input

	ToWorkloadGroupWorkloadGroupOutput() WorkloadGroupWorkloadGroupOutput
	ToWorkloadGroupWorkloadGroupOutputWithContext(context.Context) WorkloadGroupWorkloadGroupOutput
}

type WorkloadGroupWorkloadGroupArgs struct {
	CpuHardLimit           pulumi.StringPtrInput `pulumi:"cpuHardLimit"`
	CpuShare               pulumi.IntPtrInput    `pulumi:"cpuShare"`
	EnableMemoryOverCommit pulumi.BoolPtrInput   `pulumi:"enableMemoryOverCommit"`
	MemoryLimit            pulumi.IntPtrInput    `pulumi:"memoryLimit"`
	WorkloadGroupName      pulumi.StringPtrInput `pulumi:"workloadGroupName"`
}

func (WorkloadGroupWorkloadGroupArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupWorkloadGroup)(nil)).Elem()
}

func (i WorkloadGroupWorkloadGroupArgs) ToWorkloadGroupWorkloadGroupOutput() WorkloadGroupWorkloadGroupOutput {
	return i.ToWorkloadGroupWorkloadGroupOutputWithContext(context.Background())
}

func (i WorkloadGroupWorkloadGroupArgs) ToWorkloadGroupWorkloadGroupOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupWorkloadGroupOutput)
}

func (i WorkloadGroupWorkloadGroupArgs) ToWorkloadGroupWorkloadGroupPtrOutput() WorkloadGroupWorkloadGroupPtrOutput {
	return i.ToWorkloadGroupWorkloadGroupPtrOutputWithContext(context.Background())
}

func (i WorkloadGroupWorkloadGroupArgs) ToWorkloadGroupWorkloadGroupPtrOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupWorkloadGroupOutput).ToWorkloadGroupWorkloadGroupPtrOutputWithContext(ctx)
}

// WorkloadGroupWorkloadGroupPtrInput is an input type that accepts WorkloadGroupWorkloadGroupArgs, WorkloadGroupWorkloadGroupPtr and WorkloadGroupWorkloadGroupPtrOutput values.
// You can construct a concrete instance of `WorkloadGroupWorkloadGroupPtrInput` via:
//
//	        WorkloadGroupWorkloadGroupArgs{...}
//
//	or:
//
//	        nil
type WorkloadGroupWorkloadGroupPtrInput interface {
	pulumi.Input

	ToWorkloadGroupWorkloadGroupPtrOutput() WorkloadGroupWorkloadGroupPtrOutput
	ToWorkloadGroupWorkloadGroupPtrOutputWithContext(context.Context) WorkloadGroupWorkloadGroupPtrOutput
}

type workloadGroupWorkloadGroupPtrType WorkloadGroupWorkloadGroupArgs

func WorkloadGroupWorkloadGroupPtr(v *WorkloadGroupWorkloadGroupArgs) WorkloadGroupWorkloadGroupPtrInput {
	return (*workloadGroupWorkloadGroupPtrType)(v)
}

func (*workloadGroupWorkloadGroupPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupWorkloadGroup)(nil)).Elem()
}

func (i *workloadGroupWorkloadGroupPtrType) ToWorkloadGroupWorkloadGroupPtrOutput() WorkloadGroupWorkloadGroupPtrOutput {
	return i.ToWorkloadGroupWorkloadGroupPtrOutputWithContext(context.Background())
}

func (i *workloadGroupWorkloadGroupPtrType) ToWorkloadGroupWorkloadGroupPtrOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WorkloadGroupWorkloadGroupPtrOutput)
}

type WorkloadGroupWorkloadGroupOutput struct{ *pulumi.OutputState }

func (WorkloadGroupWorkloadGroupOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WorkloadGroupWorkloadGroup)(nil)).Elem()
}

func (o WorkloadGroupWorkloadGroupOutput) ToWorkloadGroupWorkloadGroupOutput() WorkloadGroupWorkloadGroupOutput {
	return o
}

func (o WorkloadGroupWorkloadGroupOutput) ToWorkloadGroupWorkloadGroupOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupOutput {
	return o
}

func (o WorkloadGroupWorkloadGroupOutput) ToWorkloadGroupWorkloadGroupPtrOutput() WorkloadGroupWorkloadGroupPtrOutput {
	return o.ToWorkloadGroupWorkloadGroupPtrOutputWithContext(context.Background())
}

func (o WorkloadGroupWorkloadGroupOutput) ToWorkloadGroupWorkloadGroupPtrOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WorkloadGroupWorkloadGroup) *WorkloadGroupWorkloadGroup {
		return &v
	}).(WorkloadGroupWorkloadGroupPtrOutput)
}

func (o WorkloadGroupWorkloadGroupOutput) CpuHardLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupWorkloadGroup) *string { return v.CpuHardLimit }).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupWorkloadGroupOutput) CpuShare() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupWorkloadGroup) *int { return v.CpuShare }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupWorkloadGroupOutput) EnableMemoryOverCommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v WorkloadGroupWorkloadGroup) *bool { return v.EnableMemoryOverCommit }).(pulumi.BoolPtrOutput)
}

func (o WorkloadGroupWorkloadGroupOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v WorkloadGroupWorkloadGroup) *int { return v.MemoryLimit }).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupWorkloadGroupOutput) WorkloadGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WorkloadGroupWorkloadGroup) *string { return v.WorkloadGroupName }).(pulumi.StringPtrOutput)
}

type WorkloadGroupWorkloadGroupPtrOutput struct{ *pulumi.OutputState }

func (WorkloadGroupWorkloadGroupPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WorkloadGroupWorkloadGroup)(nil)).Elem()
}

func (o WorkloadGroupWorkloadGroupPtrOutput) ToWorkloadGroupWorkloadGroupPtrOutput() WorkloadGroupWorkloadGroupPtrOutput {
	return o
}

func (o WorkloadGroupWorkloadGroupPtrOutput) ToWorkloadGroupWorkloadGroupPtrOutputWithContext(ctx context.Context) WorkloadGroupWorkloadGroupPtrOutput {
	return o
}

func (o WorkloadGroupWorkloadGroupPtrOutput) Elem() WorkloadGroupWorkloadGroupOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) WorkloadGroupWorkloadGroup {
		if v != nil {
			return *v
		}
		var ret WorkloadGroupWorkloadGroup
		return ret
	}).(WorkloadGroupWorkloadGroupOutput)
}

func (o WorkloadGroupWorkloadGroupPtrOutput) CpuHardLimit() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) *string {
		if v == nil {
			return nil
		}
		return v.CpuHardLimit
	}).(pulumi.StringPtrOutput)
}

func (o WorkloadGroupWorkloadGroupPtrOutput) CpuShare() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) *int {
		if v == nil {
			return nil
		}
		return v.CpuShare
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupWorkloadGroupPtrOutput) EnableMemoryOverCommit() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) *bool {
		if v == nil {
			return nil
		}
		return v.EnableMemoryOverCommit
	}).(pulumi.BoolPtrOutput)
}

func (o WorkloadGroupWorkloadGroupPtrOutput) MemoryLimit() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) *int {
		if v == nil {
			return nil
		}
		return v.MemoryLimit
	}).(pulumi.IntPtrOutput)
}

func (o WorkloadGroupWorkloadGroupPtrOutput) WorkloadGroupName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WorkloadGroupWorkloadGroup) *string {
		if v == nil {
			return nil
		}
		return v.WorkloadGroupName
	}).(pulumi.StringPtrOutput)
}

type GetInstancesInstancesList struct {
	AccessInfo               string                                 `pulumi:"accessInfo"`
	BindSGs                  []string                               `pulumi:"bindSGs"`
	BuildVersion             string                                 `pulumi:"buildVersion"`
	CanAttachCbs             bool                                   `pulumi:"canAttachCbs"`
	CaseSensitive            int                                    `pulumi:"caseSensitive"`
	Characteristics          []string                               `pulumi:"characteristics"`
	ClsLogSetId              string                                 `pulumi:"clsLogSetId"`
	ClsTopicId               string                                 `pulumi:"clsTopicId"`
	Components               string                                 `pulumi:"components"`
	CoolDownBucket           string                                 `pulumi:"coolDownBucket"`
	CoreSummary              GetInstancesInstancesListCoreSummary   `pulumi:"coreSummary"`
	CosBucketName            string                                 `pulumi:"cosBucketName"`
	CosMoveFactor            int                                    `pulumi:"cosMoveFactor"`
	CreateTime               string                                 `pulumi:"createTime"`
	Eip                      string                                 `pulumi:"eip"`
	EnableCoolDown           int                                    `pulumi:"enableCoolDown"`
	EnableMultiZones         bool                                   `pulumi:"enableMultiZones"`
	EnableXmlConfig          int                                    `pulumi:"enableXmlConfig"`
	ExpireTime               string                                 `pulumi:"expireTime"`
	FlowMsg                  string                                 `pulumi:"flowMsg"`
	GraceShutdownWaitSeconds string                                 `pulumi:"graceShutdownWaitSeconds"`
	Ha                       string                                 `pulumi:"ha"`
	HaType                   int                                    `pulumi:"haType"`
	HasClsTopic              bool                                   `pulumi:"hasClsTopic"`
	Id                       int                                    `pulumi:"id"`
	InstanceId               string                                 `pulumi:"instanceId"`
	InstanceName             string                                 `pulumi:"instanceName"`
	IsWhiteSGs               bool                                   `pulumi:"isWhiteSGs"`
	Kind                     string                                 `pulumi:"kind"`
	MasterSummary            GetInstancesInstancesListMasterSummary `pulumi:"masterSummary"`
	Monitor                  string                                 `pulumi:"monitor"`
	PayMode                  string                                 `pulumi:"payMode"`
	Region                   string                                 `pulumi:"region"`
	RegionDesc               string                                 `pulumi:"regionDesc"`
	RegionId                 int                                    `pulumi:"regionId"`
	RenewFlag                bool                                   `pulumi:"renewFlag"`
	RestartTimeout           string                                 `pulumi:"restartTimeout"`
	Status                   string                                 `pulumi:"status"`
	StatusDesc               string                                 `pulumi:"statusDesc"`
	SubnetId                 string                                 `pulumi:"subnetId"`
	Tags                     []GetInstancesInstancesListTag         `pulumi:"tags"`
	UserNetworkInfos         string                                 `pulumi:"userNetworkInfos"`
	Version                  string                                 `pulumi:"version"`
	VpcId                    string                                 `pulumi:"vpcId"`
	Zone                     string                                 `pulumi:"zone"`
	ZoneDesc                 string                                 `pulumi:"zoneDesc"`
}

// GetInstancesInstancesListInput is an input type that accepts GetInstancesInstancesListArgs and GetInstancesInstancesListOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListInput` via:
//
//	GetInstancesInstancesListArgs{...}
type GetInstancesInstancesListInput interface {
	pulumi.Input

	ToGetInstancesInstancesListOutput() GetInstancesInstancesListOutput
	ToGetInstancesInstancesListOutputWithContext(context.Context) GetInstancesInstancesListOutput
}

type GetInstancesInstancesListArgs struct {
	AccessInfo               pulumi.StringInput                          `pulumi:"accessInfo"`
	BindSGs                  pulumi.StringArrayInput                     `pulumi:"bindSGs"`
	BuildVersion             pulumi.StringInput                          `pulumi:"buildVersion"`
	CanAttachCbs             pulumi.BoolInput                            `pulumi:"canAttachCbs"`
	CaseSensitive            pulumi.IntInput                             `pulumi:"caseSensitive"`
	Characteristics          pulumi.StringArrayInput                     `pulumi:"characteristics"`
	ClsLogSetId              pulumi.StringInput                          `pulumi:"clsLogSetId"`
	ClsTopicId               pulumi.StringInput                          `pulumi:"clsTopicId"`
	Components               pulumi.StringInput                          `pulumi:"components"`
	CoolDownBucket           pulumi.StringInput                          `pulumi:"coolDownBucket"`
	CoreSummary              GetInstancesInstancesListCoreSummaryInput   `pulumi:"coreSummary"`
	CosBucketName            pulumi.StringInput                          `pulumi:"cosBucketName"`
	CosMoveFactor            pulumi.IntInput                             `pulumi:"cosMoveFactor"`
	CreateTime               pulumi.StringInput                          `pulumi:"createTime"`
	Eip                      pulumi.StringInput                          `pulumi:"eip"`
	EnableCoolDown           pulumi.IntInput                             `pulumi:"enableCoolDown"`
	EnableMultiZones         pulumi.BoolInput                            `pulumi:"enableMultiZones"`
	EnableXmlConfig          pulumi.IntInput                             `pulumi:"enableXmlConfig"`
	ExpireTime               pulumi.StringInput                          `pulumi:"expireTime"`
	FlowMsg                  pulumi.StringInput                          `pulumi:"flowMsg"`
	GraceShutdownWaitSeconds pulumi.StringInput                          `pulumi:"graceShutdownWaitSeconds"`
	Ha                       pulumi.StringInput                          `pulumi:"ha"`
	HaType                   pulumi.IntInput                             `pulumi:"haType"`
	HasClsTopic              pulumi.BoolInput                            `pulumi:"hasClsTopic"`
	Id                       pulumi.IntInput                             `pulumi:"id"`
	InstanceId               pulumi.StringInput                          `pulumi:"instanceId"`
	InstanceName             pulumi.StringInput                          `pulumi:"instanceName"`
	IsWhiteSGs               pulumi.BoolInput                            `pulumi:"isWhiteSGs"`
	Kind                     pulumi.StringInput                          `pulumi:"kind"`
	MasterSummary            GetInstancesInstancesListMasterSummaryInput `pulumi:"masterSummary"`
	Monitor                  pulumi.StringInput                          `pulumi:"monitor"`
	PayMode                  pulumi.StringInput                          `pulumi:"payMode"`
	Region                   pulumi.StringInput                          `pulumi:"region"`
	RegionDesc               pulumi.StringInput                          `pulumi:"regionDesc"`
	RegionId                 pulumi.IntInput                             `pulumi:"regionId"`
	RenewFlag                pulumi.BoolInput                            `pulumi:"renewFlag"`
	RestartTimeout           pulumi.StringInput                          `pulumi:"restartTimeout"`
	Status                   pulumi.StringInput                          `pulumi:"status"`
	StatusDesc               pulumi.StringInput                          `pulumi:"statusDesc"`
	SubnetId                 pulumi.StringInput                          `pulumi:"subnetId"`
	Tags                     GetInstancesInstancesListTagArrayInput      `pulumi:"tags"`
	UserNetworkInfos         pulumi.StringInput                          `pulumi:"userNetworkInfos"`
	Version                  pulumi.StringInput                          `pulumi:"version"`
	VpcId                    pulumi.StringInput                          `pulumi:"vpcId"`
	Zone                     pulumi.StringInput                          `pulumi:"zone"`
	ZoneDesc                 pulumi.StringInput                          `pulumi:"zoneDesc"`
}

func (GetInstancesInstancesListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesList)(nil)).Elem()
}

func (i GetInstancesInstancesListArgs) ToGetInstancesInstancesListOutput() GetInstancesInstancesListOutput {
	return i.ToGetInstancesInstancesListOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListArgs) ToGetInstancesInstancesListOutputWithContext(ctx context.Context) GetInstancesInstancesListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListOutput)
}

// GetInstancesInstancesListArrayInput is an input type that accepts GetInstancesInstancesListArray and GetInstancesInstancesListArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListArrayInput` via:
//
//	GetInstancesInstancesListArray{ GetInstancesInstancesListArgs{...} }
type GetInstancesInstancesListArrayInput interface {
	pulumi.Input

	ToGetInstancesInstancesListArrayOutput() GetInstancesInstancesListArrayOutput
	ToGetInstancesInstancesListArrayOutputWithContext(context.Context) GetInstancesInstancesListArrayOutput
}

type GetInstancesInstancesListArray []GetInstancesInstancesListInput

func (GetInstancesInstancesListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstancesList)(nil)).Elem()
}

func (i GetInstancesInstancesListArray) ToGetInstancesInstancesListArrayOutput() GetInstancesInstancesListArrayOutput {
	return i.ToGetInstancesInstancesListArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListArray) ToGetInstancesInstancesListArrayOutputWithContext(ctx context.Context) GetInstancesInstancesListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListArrayOutput)
}

type GetInstancesInstancesListOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesList)(nil)).Elem()
}

func (o GetInstancesInstancesListOutput) ToGetInstancesInstancesListOutput() GetInstancesInstancesListOutput {
	return o
}

func (o GetInstancesInstancesListOutput) ToGetInstancesInstancesListOutputWithContext(ctx context.Context) GetInstancesInstancesListOutput {
	return o
}

func (o GetInstancesInstancesListOutput) AccessInfo() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.AccessInfo }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) BindSGs() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) []string { return v.BindSGs }).(pulumi.StringArrayOutput)
}

func (o GetInstancesInstancesListOutput) BuildVersion() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.BuildVersion }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) CanAttachCbs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) bool { return v.CanAttachCbs }).(pulumi.BoolOutput)
}

func (o GetInstancesInstancesListOutput) CaseSensitive() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.CaseSensitive }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) Characteristics() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) []string { return v.Characteristics }).(pulumi.StringArrayOutput)
}

func (o GetInstancesInstancesListOutput) ClsLogSetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.ClsLogSetId }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) ClsTopicId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.ClsTopicId }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Components() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Components }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) CoolDownBucket() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.CoolDownBucket }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) CoreSummary() GetInstancesInstancesListCoreSummaryOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) GetInstancesInstancesListCoreSummary { return v.CoreSummary }).(GetInstancesInstancesListCoreSummaryOutput)
}

func (o GetInstancesInstancesListOutput) CosBucketName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.CosBucketName }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) CosMoveFactor() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.CosMoveFactor }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Eip() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Eip }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) EnableCoolDown() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.EnableCoolDown }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) EnableMultiZones() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) bool { return v.EnableMultiZones }).(pulumi.BoolOutput)
}

func (o GetInstancesInstancesListOutput) EnableXmlConfig() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.EnableXmlConfig }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) ExpireTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.ExpireTime }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) FlowMsg() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.FlowMsg }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) GraceShutdownWaitSeconds() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.GraceShutdownWaitSeconds }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Ha() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Ha }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) HaType() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.HaType }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) HasClsTopic() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) bool { return v.HasClsTopic }).(pulumi.BoolOutput)
}

func (o GetInstancesInstancesListOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.InstanceId }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) InstanceName() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.InstanceName }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) IsWhiteSGs() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) bool { return v.IsWhiteSGs }).(pulumi.BoolOutput)
}

func (o GetInstancesInstancesListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Kind }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) MasterSummary() GetInstancesInstancesListMasterSummaryOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) GetInstancesInstancesListMasterSummary { return v.MasterSummary }).(GetInstancesInstancesListMasterSummaryOutput)
}

func (o GetInstancesInstancesListOutput) Monitor() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Monitor }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) PayMode() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.PayMode }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Region() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Region }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) RegionDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.RegionDesc }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) RegionId() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) int { return v.RegionId }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListOutput) RenewFlag() pulumi.BoolOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) bool { return v.RenewFlag }).(pulumi.BoolOutput)
}

func (o GetInstancesInstancesListOutput) RestartTimeout() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.RestartTimeout }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Status }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) StatusDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.StatusDesc }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) SubnetId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.SubnetId }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Tags() GetInstancesInstancesListTagArrayOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) []GetInstancesInstancesListTag { return v.Tags }).(GetInstancesInstancesListTagArrayOutput)
}

func (o GetInstancesInstancesListOutput) UserNetworkInfos() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.UserNetworkInfos }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Version() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Version }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) VpcId() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.VpcId }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) Zone() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.Zone }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListOutput) ZoneDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesList) string { return v.ZoneDesc }).(pulumi.StringOutput)
}

type GetInstancesInstancesListArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstancesList)(nil)).Elem()
}

func (o GetInstancesInstancesListArrayOutput) ToGetInstancesInstancesListArrayOutput() GetInstancesInstancesListArrayOutput {
	return o
}

func (o GetInstancesInstancesListArrayOutput) ToGetInstancesInstancesListArrayOutputWithContext(ctx context.Context) GetInstancesInstancesListArrayOutput {
	return o
}

func (o GetInstancesInstancesListArrayOutput) Index(i pulumi.IntInput) GetInstancesInstancesListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstancesList {
		return vs[0].([]GetInstancesInstancesList)[vs[1].(int)]
	}).(GetInstancesInstancesListOutput)
}

type GetInstancesInstancesListCoreSummary struct {
	AttachCbsSpec  GetInstancesInstancesListCoreSummaryAttachCbsSpec `pulumi:"attachCbsSpec"`
	Core           int                                               `pulumi:"core"`
	Disk           int                                               `pulumi:"disk"`
	DiskCount      int                                               `pulumi:"diskCount"`
	DiskDesc       string                                            `pulumi:"diskDesc"`
	DiskType       string                                            `pulumi:"diskType"`
	Encrypt        int                                               `pulumi:"encrypt"`
	MaxDiskSize    int                                               `pulumi:"maxDiskSize"`
	Memory         int                                               `pulumi:"memory"`
	NodeSize       int                                               `pulumi:"nodeSize"`
	Spec           string                                            `pulumi:"spec"`
	SpecCore       int                                               `pulumi:"specCore"`
	SpecMemory     int                                               `pulumi:"specMemory"`
	SubProductType string                                            `pulumi:"subProductType"`
}

// GetInstancesInstancesListCoreSummaryInput is an input type that accepts GetInstancesInstancesListCoreSummaryArgs and GetInstancesInstancesListCoreSummaryOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListCoreSummaryInput` via:
//
//	GetInstancesInstancesListCoreSummaryArgs{...}
type GetInstancesInstancesListCoreSummaryInput interface {
	pulumi.Input

	ToGetInstancesInstancesListCoreSummaryOutput() GetInstancesInstancesListCoreSummaryOutput
	ToGetInstancesInstancesListCoreSummaryOutputWithContext(context.Context) GetInstancesInstancesListCoreSummaryOutput
}

type GetInstancesInstancesListCoreSummaryArgs struct {
	AttachCbsSpec  GetInstancesInstancesListCoreSummaryAttachCbsSpecInput `pulumi:"attachCbsSpec"`
	Core           pulumi.IntInput                                        `pulumi:"core"`
	Disk           pulumi.IntInput                                        `pulumi:"disk"`
	DiskCount      pulumi.IntInput                                        `pulumi:"diskCount"`
	DiskDesc       pulumi.StringInput                                     `pulumi:"diskDesc"`
	DiskType       pulumi.StringInput                                     `pulumi:"diskType"`
	Encrypt        pulumi.IntInput                                        `pulumi:"encrypt"`
	MaxDiskSize    pulumi.IntInput                                        `pulumi:"maxDiskSize"`
	Memory         pulumi.IntInput                                        `pulumi:"memory"`
	NodeSize       pulumi.IntInput                                        `pulumi:"nodeSize"`
	Spec           pulumi.StringInput                                     `pulumi:"spec"`
	SpecCore       pulumi.IntInput                                        `pulumi:"specCore"`
	SpecMemory     pulumi.IntInput                                        `pulumi:"specMemory"`
	SubProductType pulumi.StringInput                                     `pulumi:"subProductType"`
}

func (GetInstancesInstancesListCoreSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListCoreSummary)(nil)).Elem()
}

func (i GetInstancesInstancesListCoreSummaryArgs) ToGetInstancesInstancesListCoreSummaryOutput() GetInstancesInstancesListCoreSummaryOutput {
	return i.ToGetInstancesInstancesListCoreSummaryOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListCoreSummaryArgs) ToGetInstancesInstancesListCoreSummaryOutputWithContext(ctx context.Context) GetInstancesInstancesListCoreSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListCoreSummaryOutput)
}

type GetInstancesInstancesListCoreSummaryOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListCoreSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListCoreSummary)(nil)).Elem()
}

func (o GetInstancesInstancesListCoreSummaryOutput) ToGetInstancesInstancesListCoreSummaryOutput() GetInstancesInstancesListCoreSummaryOutput {
	return o
}

func (o GetInstancesInstancesListCoreSummaryOutput) ToGetInstancesInstancesListCoreSummaryOutputWithContext(ctx context.Context) GetInstancesInstancesListCoreSummaryOutput {
	return o
}

func (o GetInstancesInstancesListCoreSummaryOutput) AttachCbsSpec() GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) GetInstancesInstancesListCoreSummaryAttachCbsSpec {
		return v.AttachCbsSpec
	}).(GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) Core() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.Core }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.DiskCount }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) DiskDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) string { return v.DiskDesc }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) Encrypt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.Encrypt }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) MaxDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.MaxDiskSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) NodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.NodeSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) string { return v.Spec }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) SpecCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.SpecCore }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) SpecMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) int { return v.SpecMemory }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListCoreSummaryOutput) SubProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummary) string { return v.SubProductType }).(pulumi.StringOutput)
}

type GetInstancesInstancesListCoreSummaryAttachCbsSpec struct {
	DiskCount *int    `pulumi:"diskCount"`
	DiskDesc  *string `pulumi:"diskDesc"`
	DiskSize  *int    `pulumi:"diskSize"`
	DiskType  *string `pulumi:"diskType"`
}

// GetInstancesInstancesListCoreSummaryAttachCbsSpecInput is an input type that accepts GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs and GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListCoreSummaryAttachCbsSpecInput` via:
//
//	GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs{...}
type GetInstancesInstancesListCoreSummaryAttachCbsSpecInput interface {
	pulumi.Input

	ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutput() GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput
	ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutputWithContext(context.Context) GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput
}

type GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs struct {
	DiskCount pulumi.IntPtrInput    `pulumi:"diskCount"`
	DiskDesc  pulumi.StringPtrInput `pulumi:"diskDesc"`
	DiskSize  pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType  pulumi.StringPtrInput `pulumi:"diskType"`
}

func (GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListCoreSummaryAttachCbsSpec)(nil)).Elem()
}

func (i GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs) ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutput() GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput {
	return i.ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs) ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutputWithContext(ctx context.Context) GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput)
}

type GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListCoreSummaryAttachCbsSpec)(nil)).Elem()
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutput() GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput {
	return o
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) ToGetInstancesInstancesListCoreSummaryAttachCbsSpecOutputWithContext(ctx context.Context) GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput {
	return o
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummaryAttachCbsSpec) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) DiskDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummaryAttachCbsSpec) *string { return v.DiskDesc }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummaryAttachCbsSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListCoreSummaryAttachCbsSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

type GetInstancesInstancesListMasterSummary struct {
	AttachCbsSpec  GetInstancesInstancesListMasterSummaryAttachCbsSpec `pulumi:"attachCbsSpec"`
	Core           int                                                 `pulumi:"core"`
	Disk           int                                                 `pulumi:"disk"`
	DiskCount      int                                                 `pulumi:"diskCount"`
	DiskDesc       string                                              `pulumi:"diskDesc"`
	DiskType       string                                              `pulumi:"diskType"`
	Encrypt        int                                                 `pulumi:"encrypt"`
	MaxDiskSize    int                                                 `pulumi:"maxDiskSize"`
	Memory         int                                                 `pulumi:"memory"`
	NodeSize       int                                                 `pulumi:"nodeSize"`
	Spec           string                                              `pulumi:"spec"`
	SpecCore       int                                                 `pulumi:"specCore"`
	SpecMemory     int                                                 `pulumi:"specMemory"`
	SubProductType string                                              `pulumi:"subProductType"`
}

// GetInstancesInstancesListMasterSummaryInput is an input type that accepts GetInstancesInstancesListMasterSummaryArgs and GetInstancesInstancesListMasterSummaryOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListMasterSummaryInput` via:
//
//	GetInstancesInstancesListMasterSummaryArgs{...}
type GetInstancesInstancesListMasterSummaryInput interface {
	pulumi.Input

	ToGetInstancesInstancesListMasterSummaryOutput() GetInstancesInstancesListMasterSummaryOutput
	ToGetInstancesInstancesListMasterSummaryOutputWithContext(context.Context) GetInstancesInstancesListMasterSummaryOutput
}

type GetInstancesInstancesListMasterSummaryArgs struct {
	AttachCbsSpec  GetInstancesInstancesListMasterSummaryAttachCbsSpecInput `pulumi:"attachCbsSpec"`
	Core           pulumi.IntInput                                          `pulumi:"core"`
	Disk           pulumi.IntInput                                          `pulumi:"disk"`
	DiskCount      pulumi.IntInput                                          `pulumi:"diskCount"`
	DiskDesc       pulumi.StringInput                                       `pulumi:"diskDesc"`
	DiskType       pulumi.StringInput                                       `pulumi:"diskType"`
	Encrypt        pulumi.IntInput                                          `pulumi:"encrypt"`
	MaxDiskSize    pulumi.IntInput                                          `pulumi:"maxDiskSize"`
	Memory         pulumi.IntInput                                          `pulumi:"memory"`
	NodeSize       pulumi.IntInput                                          `pulumi:"nodeSize"`
	Spec           pulumi.StringInput                                       `pulumi:"spec"`
	SpecCore       pulumi.IntInput                                          `pulumi:"specCore"`
	SpecMemory     pulumi.IntInput                                          `pulumi:"specMemory"`
	SubProductType pulumi.StringInput                                       `pulumi:"subProductType"`
}

func (GetInstancesInstancesListMasterSummaryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListMasterSummary)(nil)).Elem()
}

func (i GetInstancesInstancesListMasterSummaryArgs) ToGetInstancesInstancesListMasterSummaryOutput() GetInstancesInstancesListMasterSummaryOutput {
	return i.ToGetInstancesInstancesListMasterSummaryOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListMasterSummaryArgs) ToGetInstancesInstancesListMasterSummaryOutputWithContext(ctx context.Context) GetInstancesInstancesListMasterSummaryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListMasterSummaryOutput)
}

type GetInstancesInstancesListMasterSummaryOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListMasterSummaryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListMasterSummary)(nil)).Elem()
}

func (o GetInstancesInstancesListMasterSummaryOutput) ToGetInstancesInstancesListMasterSummaryOutput() GetInstancesInstancesListMasterSummaryOutput {
	return o
}

func (o GetInstancesInstancesListMasterSummaryOutput) ToGetInstancesInstancesListMasterSummaryOutputWithContext(ctx context.Context) GetInstancesInstancesListMasterSummaryOutput {
	return o
}

func (o GetInstancesInstancesListMasterSummaryOutput) AttachCbsSpec() GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) GetInstancesInstancesListMasterSummaryAttachCbsSpec {
		return v.AttachCbsSpec
	}).(GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) Core() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.Core }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) Disk() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.Disk }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) DiskCount() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.DiskCount }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) DiskDesc() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) string { return v.DiskDesc }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) DiskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) string { return v.DiskType }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) Encrypt() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.Encrypt }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) MaxDiskSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.MaxDiskSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) Memory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.Memory }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) NodeSize() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.NodeSize }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) Spec() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) string { return v.Spec }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) SpecCore() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.SpecCore }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) SpecMemory() pulumi.IntOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) int { return v.SpecMemory }).(pulumi.IntOutput)
}

func (o GetInstancesInstancesListMasterSummaryOutput) SubProductType() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummary) string { return v.SubProductType }).(pulumi.StringOutput)
}

type GetInstancesInstancesListMasterSummaryAttachCbsSpec struct {
	DiskCount *int    `pulumi:"diskCount"`
	DiskDesc  *string `pulumi:"diskDesc"`
	DiskSize  *int    `pulumi:"diskSize"`
	DiskType  *string `pulumi:"diskType"`
}

// GetInstancesInstancesListMasterSummaryAttachCbsSpecInput is an input type that accepts GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs and GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListMasterSummaryAttachCbsSpecInput` via:
//
//	GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs{...}
type GetInstancesInstancesListMasterSummaryAttachCbsSpecInput interface {
	pulumi.Input

	ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutput() GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput
	ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutputWithContext(context.Context) GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput
}

type GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs struct {
	DiskCount pulumi.IntPtrInput    `pulumi:"diskCount"`
	DiskDesc  pulumi.StringPtrInput `pulumi:"diskDesc"`
	DiskSize  pulumi.IntPtrInput    `pulumi:"diskSize"`
	DiskType  pulumi.StringPtrInput `pulumi:"diskType"`
}

func (GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListMasterSummaryAttachCbsSpec)(nil)).Elem()
}

func (i GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs) ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutput() GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput {
	return i.ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs) ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutputWithContext(ctx context.Context) GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput)
}

type GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListMasterSummaryAttachCbsSpec)(nil)).Elem()
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutput() GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput {
	return o
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) ToGetInstancesInstancesListMasterSummaryAttachCbsSpecOutputWithContext(ctx context.Context) GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput {
	return o
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) DiskCount() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummaryAttachCbsSpec) *int { return v.DiskCount }).(pulumi.IntPtrOutput)
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) DiskDesc() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummaryAttachCbsSpec) *string { return v.DiskDesc }).(pulumi.StringPtrOutput)
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) DiskSize() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummaryAttachCbsSpec) *int { return v.DiskSize }).(pulumi.IntPtrOutput)
}

func (o GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput) DiskType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesInstancesListMasterSummaryAttachCbsSpec) *string { return v.DiskType }).(pulumi.StringPtrOutput)
}

type GetInstancesInstancesListTag struct {
	TagKey   string `pulumi:"tagKey"`
	TagValue string `pulumi:"tagValue"`
}

// GetInstancesInstancesListTagInput is an input type that accepts GetInstancesInstancesListTagArgs and GetInstancesInstancesListTagOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListTagInput` via:
//
//	GetInstancesInstancesListTagArgs{...}
type GetInstancesInstancesListTagInput interface {
	pulumi.Input

	ToGetInstancesInstancesListTagOutput() GetInstancesInstancesListTagOutput
	ToGetInstancesInstancesListTagOutputWithContext(context.Context) GetInstancesInstancesListTagOutput
}

type GetInstancesInstancesListTagArgs struct {
	TagKey   pulumi.StringInput `pulumi:"tagKey"`
	TagValue pulumi.StringInput `pulumi:"tagValue"`
}

func (GetInstancesInstancesListTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListTag)(nil)).Elem()
}

func (i GetInstancesInstancesListTagArgs) ToGetInstancesInstancesListTagOutput() GetInstancesInstancesListTagOutput {
	return i.ToGetInstancesInstancesListTagOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListTagArgs) ToGetInstancesInstancesListTagOutputWithContext(ctx context.Context) GetInstancesInstancesListTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListTagOutput)
}

// GetInstancesInstancesListTagArrayInput is an input type that accepts GetInstancesInstancesListTagArray and GetInstancesInstancesListTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesInstancesListTagArrayInput` via:
//
//	GetInstancesInstancesListTagArray{ GetInstancesInstancesListTagArgs{...} }
type GetInstancesInstancesListTagArrayInput interface {
	pulumi.Input

	ToGetInstancesInstancesListTagArrayOutput() GetInstancesInstancesListTagArrayOutput
	ToGetInstancesInstancesListTagArrayOutputWithContext(context.Context) GetInstancesInstancesListTagArrayOutput
}

type GetInstancesInstancesListTagArray []GetInstancesInstancesListTagInput

func (GetInstancesInstancesListTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstancesListTag)(nil)).Elem()
}

func (i GetInstancesInstancesListTagArray) ToGetInstancesInstancesListTagArrayOutput() GetInstancesInstancesListTagArrayOutput {
	return i.ToGetInstancesInstancesListTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesInstancesListTagArray) ToGetInstancesInstancesListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstancesListTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesInstancesListTagArrayOutput)
}

type GetInstancesInstancesListTagOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesInstancesListTag)(nil)).Elem()
}

func (o GetInstancesInstancesListTagOutput) ToGetInstancesInstancesListTagOutput() GetInstancesInstancesListTagOutput {
	return o
}

func (o GetInstancesInstancesListTagOutput) ToGetInstancesInstancesListTagOutputWithContext(ctx context.Context) GetInstancesInstancesListTagOutput {
	return o
}

func (o GetInstancesInstancesListTagOutput) TagKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListTag) string { return v.TagKey }).(pulumi.StringOutput)
}

func (o GetInstancesInstancesListTagOutput) TagValue() pulumi.StringOutput {
	return o.ApplyT(func(v GetInstancesInstancesListTag) string { return v.TagValue }).(pulumi.StringOutput)
}

type GetInstancesInstancesListTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesInstancesListTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesInstancesListTag)(nil)).Elem()
}

func (o GetInstancesInstancesListTagArrayOutput) ToGetInstancesInstancesListTagArrayOutput() GetInstancesInstancesListTagArrayOutput {
	return o
}

func (o GetInstancesInstancesListTagArrayOutput) ToGetInstancesInstancesListTagArrayOutputWithContext(ctx context.Context) GetInstancesInstancesListTagArrayOutput {
	return o
}

func (o GetInstancesInstancesListTagArrayOutput) Index(i pulumi.IntInput) GetInstancesInstancesListTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesInstancesListTag {
		return vs[0].([]GetInstancesInstancesListTag)[vs[1].(int)]
	}).(GetInstancesInstancesListTagOutput)
}

type GetInstancesSearchTag struct {
	AllValue *int    `pulumi:"allValue"`
	TagKey   *string `pulumi:"tagKey"`
	TagValue *string `pulumi:"tagValue"`
}

// GetInstancesSearchTagInput is an input type that accepts GetInstancesSearchTagArgs and GetInstancesSearchTagOutput values.
// You can construct a concrete instance of `GetInstancesSearchTagInput` via:
//
//	GetInstancesSearchTagArgs{...}
type GetInstancesSearchTagInput interface {
	pulumi.Input

	ToGetInstancesSearchTagOutput() GetInstancesSearchTagOutput
	ToGetInstancesSearchTagOutputWithContext(context.Context) GetInstancesSearchTagOutput
}

type GetInstancesSearchTagArgs struct {
	AllValue pulumi.IntPtrInput    `pulumi:"allValue"`
	TagKey   pulumi.StringPtrInput `pulumi:"tagKey"`
	TagValue pulumi.StringPtrInput `pulumi:"tagValue"`
}

func (GetInstancesSearchTagArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSearchTag)(nil)).Elem()
}

func (i GetInstancesSearchTagArgs) ToGetInstancesSearchTagOutput() GetInstancesSearchTagOutput {
	return i.ToGetInstancesSearchTagOutputWithContext(context.Background())
}

func (i GetInstancesSearchTagArgs) ToGetInstancesSearchTagOutputWithContext(ctx context.Context) GetInstancesSearchTagOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSearchTagOutput)
}

// GetInstancesSearchTagArrayInput is an input type that accepts GetInstancesSearchTagArray and GetInstancesSearchTagArrayOutput values.
// You can construct a concrete instance of `GetInstancesSearchTagArrayInput` via:
//
//	GetInstancesSearchTagArray{ GetInstancesSearchTagArgs{...} }
type GetInstancesSearchTagArrayInput interface {
	pulumi.Input

	ToGetInstancesSearchTagArrayOutput() GetInstancesSearchTagArrayOutput
	ToGetInstancesSearchTagArrayOutputWithContext(context.Context) GetInstancesSearchTagArrayOutput
}

type GetInstancesSearchTagArray []GetInstancesSearchTagInput

func (GetInstancesSearchTagArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSearchTag)(nil)).Elem()
}

func (i GetInstancesSearchTagArray) ToGetInstancesSearchTagArrayOutput() GetInstancesSearchTagArrayOutput {
	return i.ToGetInstancesSearchTagArrayOutputWithContext(context.Background())
}

func (i GetInstancesSearchTagArray) ToGetInstancesSearchTagArrayOutputWithContext(ctx context.Context) GetInstancesSearchTagArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetInstancesSearchTagArrayOutput)
}

type GetInstancesSearchTagOutput struct{ *pulumi.OutputState }

func (GetInstancesSearchTagOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetInstancesSearchTag)(nil)).Elem()
}

func (o GetInstancesSearchTagOutput) ToGetInstancesSearchTagOutput() GetInstancesSearchTagOutput {
	return o
}

func (o GetInstancesSearchTagOutput) ToGetInstancesSearchTagOutputWithContext(ctx context.Context) GetInstancesSearchTagOutput {
	return o
}

func (o GetInstancesSearchTagOutput) AllValue() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetInstancesSearchTag) *int { return v.AllValue }).(pulumi.IntPtrOutput)
}

func (o GetInstancesSearchTagOutput) TagKey() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSearchTag) *string { return v.TagKey }).(pulumi.StringPtrOutput)
}

func (o GetInstancesSearchTagOutput) TagValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetInstancesSearchTag) *string { return v.TagValue }).(pulumi.StringPtrOutput)
}

type GetInstancesSearchTagArrayOutput struct{ *pulumi.OutputState }

func (GetInstancesSearchTagArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetInstancesSearchTag)(nil)).Elem()
}

func (o GetInstancesSearchTagArrayOutput) ToGetInstancesSearchTagArrayOutput() GetInstancesSearchTagArrayOutput {
	return o
}

func (o GetInstancesSearchTagArrayOutput) ToGetInstancesSearchTagArrayOutputWithContext(ctx context.Context) GetInstancesSearchTagArrayOutput {
	return o
}

func (o GetInstancesSearchTagArrayOutput) Index(i pulumi.IntInput) GetInstancesSearchTagOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetInstancesSearchTag {
		return vs[0].([]GetInstancesSearchTag)[vs[1].(int)]
	}).(GetInstancesSearchTagOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBeSpecInput)(nil)).Elem(), InstanceBeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceBeSpecPtrInput)(nil)).Elem(), InstanceBeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceChargePropertiesInput)(nil)).Elem(), InstanceChargePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceChargePropertiesPtrInput)(nil)).Elem(), InstanceChargePropertiesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceFeSpecInput)(nil)).Elem(), InstanceFeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceFeSpecPtrInput)(nil)).Elem(), InstanceFeSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagInput)(nil)).Elem(), InstanceTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceTagArrayInput)(nil)).Elem(), InstanceTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUserMultiZoneInfosInput)(nil)).Elem(), InstanceUserMultiZoneInfosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceUserMultiZoneInfosPtrInput)(nil)).Elem(), InstanceUserMultiZoneInfosArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupWorkloadGroupInput)(nil)).Elem(), WorkloadGroupWorkloadGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WorkloadGroupWorkloadGroupPtrInput)(nil)).Elem(), WorkloadGroupWorkloadGroupArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListInput)(nil)).Elem(), GetInstancesInstancesListArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListArrayInput)(nil)).Elem(), GetInstancesInstancesListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListCoreSummaryInput)(nil)).Elem(), GetInstancesInstancesListCoreSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListCoreSummaryAttachCbsSpecInput)(nil)).Elem(), GetInstancesInstancesListCoreSummaryAttachCbsSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListMasterSummaryInput)(nil)).Elem(), GetInstancesInstancesListMasterSummaryArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListMasterSummaryAttachCbsSpecInput)(nil)).Elem(), GetInstancesInstancesListMasterSummaryAttachCbsSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListTagInput)(nil)).Elem(), GetInstancesInstancesListTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesInstancesListTagArrayInput)(nil)).Elem(), GetInstancesInstancesListTagArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSearchTagInput)(nil)).Elem(), GetInstancesSearchTagArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetInstancesSearchTagArrayInput)(nil)).Elem(), GetInstancesSearchTagArray{})
	pulumi.RegisterOutputType(InstanceBeSpecOutput{})
	pulumi.RegisterOutputType(InstanceBeSpecPtrOutput{})
	pulumi.RegisterOutputType(InstanceChargePropertiesOutput{})
	pulumi.RegisterOutputType(InstanceChargePropertiesPtrOutput{})
	pulumi.RegisterOutputType(InstanceFeSpecOutput{})
	pulumi.RegisterOutputType(InstanceFeSpecPtrOutput{})
	pulumi.RegisterOutputType(InstanceTagOutput{})
	pulumi.RegisterOutputType(InstanceTagArrayOutput{})
	pulumi.RegisterOutputType(InstanceUserMultiZoneInfosOutput{})
	pulumi.RegisterOutputType(InstanceUserMultiZoneInfosPtrOutput{})
	pulumi.RegisterOutputType(WorkloadGroupWorkloadGroupOutput{})
	pulumi.RegisterOutputType(WorkloadGroupWorkloadGroupPtrOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListCoreSummaryOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListCoreSummaryAttachCbsSpecOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListMasterSummaryOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListMasterSummaryAttachCbsSpecOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListTagOutput{})
	pulumi.RegisterOutputType(GetInstancesInstancesListTagArrayOutput{})
	pulumi.RegisterOutputType(GetInstancesSearchTagOutput{})
	pulumi.RegisterOutputType(GetInstancesSearchTagArrayOutput{})
}
