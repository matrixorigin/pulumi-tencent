// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dnspod

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetDomainAnalytics(ctx *pulumi.Context, args *GetDomainAnalyticsArgs, opts ...pulumi.InvokeOption) (*GetDomainAnalyticsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDomainAnalyticsResult
	err := ctx.Invoke("tencentcloud:Dnspod/getDomainAnalytics:getDomainAnalytics", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDomainAnalytics.
type GetDomainAnalyticsArgs struct {
	DnsFormat        *string `pulumi:"dnsFormat"`
	Domain           string  `pulumi:"domain"`
	DomainId         *int    `pulumi:"domainId"`
	EndDate          string  `pulumi:"endDate"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	StartDate        string  `pulumi:"startDate"`
}

// A collection of values returned by getDomainAnalytics.
type GetDomainAnalyticsResult struct {
	AliasDatas []GetDomainAnalyticsAliasData `pulumi:"aliasDatas"`
	Datas      []GetDomainAnalyticsData      `pulumi:"datas"`
	DnsFormat  *string                       `pulumi:"dnsFormat"`
	Domain     string                        `pulumi:"domain"`
	DomainId   *int                          `pulumi:"domainId"`
	EndDate    string                        `pulumi:"endDate"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                   `pulumi:"id"`
	Infos            []GetDomainAnalyticsInfo `pulumi:"infos"`
	ResultOutputFile *string                  `pulumi:"resultOutputFile"`
	StartDate        string                   `pulumi:"startDate"`
}

func GetDomainAnalyticsOutput(ctx *pulumi.Context, args GetDomainAnalyticsOutputArgs, opts ...pulumi.InvokeOption) GetDomainAnalyticsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetDomainAnalyticsResult, error) {
			args := v.(GetDomainAnalyticsArgs)
			r, err := GetDomainAnalytics(ctx, &args, opts...)
			var s GetDomainAnalyticsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetDomainAnalyticsResultOutput)
}

// A collection of arguments for invoking getDomainAnalytics.
type GetDomainAnalyticsOutputArgs struct {
	DnsFormat        pulumi.StringPtrInput `pulumi:"dnsFormat"`
	Domain           pulumi.StringInput    `pulumi:"domain"`
	DomainId         pulumi.IntPtrInput    `pulumi:"domainId"`
	EndDate          pulumi.StringInput    `pulumi:"endDate"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
	StartDate        pulumi.StringInput    `pulumi:"startDate"`
}

func (GetDomainAnalyticsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAnalyticsArgs)(nil)).Elem()
}

// A collection of values returned by getDomainAnalytics.
type GetDomainAnalyticsResultOutput struct{ *pulumi.OutputState }

func (GetDomainAnalyticsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDomainAnalyticsResult)(nil)).Elem()
}

func (o GetDomainAnalyticsResultOutput) ToGetDomainAnalyticsResultOutput() GetDomainAnalyticsResultOutput {
	return o
}

func (o GetDomainAnalyticsResultOutput) ToGetDomainAnalyticsResultOutputWithContext(ctx context.Context) GetDomainAnalyticsResultOutput {
	return o
}

func (o GetDomainAnalyticsResultOutput) AliasDatas() GetDomainAnalyticsAliasDataArrayOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) []GetDomainAnalyticsAliasData { return v.AliasDatas }).(GetDomainAnalyticsAliasDataArrayOutput)
}

func (o GetDomainAnalyticsResultOutput) Datas() GetDomainAnalyticsDataArrayOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) []GetDomainAnalyticsData { return v.Datas }).(GetDomainAnalyticsDataArrayOutput)
}

func (o GetDomainAnalyticsResultOutput) DnsFormat() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) *string { return v.DnsFormat }).(pulumi.StringPtrOutput)
}

func (o GetDomainAnalyticsResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) string { return v.Domain }).(pulumi.StringOutput)
}

func (o GetDomainAnalyticsResultOutput) DomainId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) *int { return v.DomainId }).(pulumi.IntPtrOutput)
}

func (o GetDomainAnalyticsResultOutput) EndDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) string { return v.EndDate }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDomainAnalyticsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDomainAnalyticsResultOutput) Infos() GetDomainAnalyticsInfoArrayOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) []GetDomainAnalyticsInfo { return v.Infos }).(GetDomainAnalyticsInfoArrayOutput)
}

func (o GetDomainAnalyticsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetDomainAnalyticsResultOutput) StartDate() pulumi.StringOutput {
	return o.ApplyT(func(v GetDomainAnalyticsResult) string { return v.StartDate }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDomainAnalyticsResultOutput{})
}
