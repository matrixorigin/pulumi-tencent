// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package redis

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetClusters(ctx *pulumi.Context, args *GetClustersArgs, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("tencentcloud:Redis/getClusters:getClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusters.
type GetClustersArgs struct {
	AutoRenewFlags     []int    `pulumi:"autoRenewFlags"`
	ClusterName        *string  `pulumi:"clusterName"`
	DedicatedClusterId *string  `pulumi:"dedicatedClusterId"`
	ProjectIds         []int    `pulumi:"projectIds"`
	RedisClusterIds    []string `pulumi:"redisClusterIds"`
	ResultOutputFile   *string  `pulumi:"resultOutputFile"`
	Statuses           []int    `pulumi:"statuses"`
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	AutoRenewFlags     []int   `pulumi:"autoRenewFlags"`
	ClusterName        *string `pulumi:"clusterName"`
	DedicatedClusterId *string `pulumi:"dedicatedClusterId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string                `pulumi:"id"`
	ProjectIds       []int                 `pulumi:"projectIds"`
	RedisClusterIds  []string              `pulumi:"redisClusterIds"`
	Resources        []GetClustersResource `pulumi:"resources"`
	ResultOutputFile *string               `pulumi:"resultOutputFile"`
	Statuses         []int                 `pulumi:"statuses"`
}

func GetClustersOutput(ctx *pulumi.Context, args GetClustersOutputArgs, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClustersResult, error) {
			args := v.(GetClustersArgs)
			r, err := GetClusters(ctx, &args, opts...)
			var s GetClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClustersResultOutput)
}

// A collection of arguments for invoking getClusters.
type GetClustersOutputArgs struct {
	AutoRenewFlags     pulumi.IntArrayInput    `pulumi:"autoRenewFlags"`
	ClusterName        pulumi.StringPtrInput   `pulumi:"clusterName"`
	DedicatedClusterId pulumi.StringPtrInput   `pulumi:"dedicatedClusterId"`
	ProjectIds         pulumi.IntArrayInput    `pulumi:"projectIds"`
	RedisClusterIds    pulumi.StringArrayInput `pulumi:"redisClusterIds"`
	ResultOutputFile   pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	Statuses           pulumi.IntArrayInput    `pulumi:"statuses"`
}

func (GetClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersArgs)(nil)).Elem()
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) AutoRenewFlags() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []int { return v.AutoRenewFlags }).(pulumi.IntArrayOutput)
}

func (o GetClustersResultOutput) ClusterName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ClusterName }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) DedicatedClusterId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.DedicatedClusterId }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) ProjectIds() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []int { return v.ProjectIds }).(pulumi.IntArrayOutput)
}

func (o GetClustersResultOutput) RedisClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.RedisClusterIds }).(pulumi.StringArrayOutput)
}

func (o GetClustersResultOutput) Resources() GetClustersResourceArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersResource { return v.Resources }).(GetClustersResourceArrayOutput)
}

func (o GetClustersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) Statuses() pulumi.IntArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []int { return v.Statuses }).(pulumi.IntArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
