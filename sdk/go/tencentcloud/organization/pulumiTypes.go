// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package organization

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = internal.GetEnvOrDefault

type InstanceOrgPermission struct {
	Id   *int    `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// InstanceOrgPermissionInput is an input type that accepts InstanceOrgPermissionArgs and InstanceOrgPermissionOutput values.
// You can construct a concrete instance of `InstanceOrgPermissionInput` via:
//
//	InstanceOrgPermissionArgs{...}
type InstanceOrgPermissionInput interface {
	pulumi.Input

	ToInstanceOrgPermissionOutput() InstanceOrgPermissionOutput
	ToInstanceOrgPermissionOutputWithContext(context.Context) InstanceOrgPermissionOutput
}

type InstanceOrgPermissionArgs struct {
	Id   pulumi.IntPtrInput    `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (InstanceOrgPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceOrgPermission)(nil)).Elem()
}

func (i InstanceOrgPermissionArgs) ToInstanceOrgPermissionOutput() InstanceOrgPermissionOutput {
	return i.ToInstanceOrgPermissionOutputWithContext(context.Background())
}

func (i InstanceOrgPermissionArgs) ToInstanceOrgPermissionOutputWithContext(ctx context.Context) InstanceOrgPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOrgPermissionOutput)
}

// InstanceOrgPermissionArrayInput is an input type that accepts InstanceOrgPermissionArray and InstanceOrgPermissionArrayOutput values.
// You can construct a concrete instance of `InstanceOrgPermissionArrayInput` via:
//
//	InstanceOrgPermissionArray{ InstanceOrgPermissionArgs{...} }
type InstanceOrgPermissionArrayInput interface {
	pulumi.Input

	ToInstanceOrgPermissionArrayOutput() InstanceOrgPermissionArrayOutput
	ToInstanceOrgPermissionArrayOutputWithContext(context.Context) InstanceOrgPermissionArrayOutput
}

type InstanceOrgPermissionArray []InstanceOrgPermissionInput

func (InstanceOrgPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceOrgPermission)(nil)).Elem()
}

func (i InstanceOrgPermissionArray) ToInstanceOrgPermissionArrayOutput() InstanceOrgPermissionArrayOutput {
	return i.ToInstanceOrgPermissionArrayOutputWithContext(context.Background())
}

func (i InstanceOrgPermissionArray) ToInstanceOrgPermissionArrayOutputWithContext(ctx context.Context) InstanceOrgPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(InstanceOrgPermissionArrayOutput)
}

type InstanceOrgPermissionOutput struct{ *pulumi.OutputState }

func (InstanceOrgPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*InstanceOrgPermission)(nil)).Elem()
}

func (o InstanceOrgPermissionOutput) ToInstanceOrgPermissionOutput() InstanceOrgPermissionOutput {
	return o
}

func (o InstanceOrgPermissionOutput) ToInstanceOrgPermissionOutputWithContext(ctx context.Context) InstanceOrgPermissionOutput {
	return o
}

func (o InstanceOrgPermissionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v InstanceOrgPermission) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o InstanceOrgPermissionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v InstanceOrgPermission) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type InstanceOrgPermissionArrayOutput struct{ *pulumi.OutputState }

func (InstanceOrgPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]InstanceOrgPermission)(nil)).Elem()
}

func (o InstanceOrgPermissionArrayOutput) ToInstanceOrgPermissionArrayOutput() InstanceOrgPermissionArrayOutput {
	return o
}

func (o InstanceOrgPermissionArrayOutput) ToInstanceOrgPermissionArrayOutputWithContext(ctx context.Context) InstanceOrgPermissionArrayOutput {
	return o
}

func (o InstanceOrgPermissionArrayOutput) Index(i pulumi.IntInput) InstanceOrgPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) InstanceOrgPermission {
		return vs[0].([]InstanceOrgPermission)[vs[1].(int)]
	}).(InstanceOrgPermissionOutput)
}

type OrgIdentityIdentityPolicy struct {
	PolicyDocument *string `pulumi:"policyDocument"`
	PolicyId       *int    `pulumi:"policyId"`
	PolicyName     *string `pulumi:"policyName"`
	PolicyType     *int    `pulumi:"policyType"`
}

// OrgIdentityIdentityPolicyInput is an input type that accepts OrgIdentityIdentityPolicyArgs and OrgIdentityIdentityPolicyOutput values.
// You can construct a concrete instance of `OrgIdentityIdentityPolicyInput` via:
//
//	OrgIdentityIdentityPolicyArgs{...}
type OrgIdentityIdentityPolicyInput interface {
	pulumi.Input

	ToOrgIdentityIdentityPolicyOutput() OrgIdentityIdentityPolicyOutput
	ToOrgIdentityIdentityPolicyOutputWithContext(context.Context) OrgIdentityIdentityPolicyOutput
}

type OrgIdentityIdentityPolicyArgs struct {
	PolicyDocument pulumi.StringPtrInput `pulumi:"policyDocument"`
	PolicyId       pulumi.IntPtrInput    `pulumi:"policyId"`
	PolicyName     pulumi.StringPtrInput `pulumi:"policyName"`
	PolicyType     pulumi.IntPtrInput    `pulumi:"policyType"`
}

func (OrgIdentityIdentityPolicyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgIdentityIdentityPolicy)(nil)).Elem()
}

func (i OrgIdentityIdentityPolicyArgs) ToOrgIdentityIdentityPolicyOutput() OrgIdentityIdentityPolicyOutput {
	return i.ToOrgIdentityIdentityPolicyOutputWithContext(context.Background())
}

func (i OrgIdentityIdentityPolicyArgs) ToOrgIdentityIdentityPolicyOutputWithContext(ctx context.Context) OrgIdentityIdentityPolicyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgIdentityIdentityPolicyOutput)
}

// OrgIdentityIdentityPolicyArrayInput is an input type that accepts OrgIdentityIdentityPolicyArray and OrgIdentityIdentityPolicyArrayOutput values.
// You can construct a concrete instance of `OrgIdentityIdentityPolicyArrayInput` via:
//
//	OrgIdentityIdentityPolicyArray{ OrgIdentityIdentityPolicyArgs{...} }
type OrgIdentityIdentityPolicyArrayInput interface {
	pulumi.Input

	ToOrgIdentityIdentityPolicyArrayOutput() OrgIdentityIdentityPolicyArrayOutput
	ToOrgIdentityIdentityPolicyArrayOutputWithContext(context.Context) OrgIdentityIdentityPolicyArrayOutput
}

type OrgIdentityIdentityPolicyArray []OrgIdentityIdentityPolicyInput

func (OrgIdentityIdentityPolicyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgIdentityIdentityPolicy)(nil)).Elem()
}

func (i OrgIdentityIdentityPolicyArray) ToOrgIdentityIdentityPolicyArrayOutput() OrgIdentityIdentityPolicyArrayOutput {
	return i.ToOrgIdentityIdentityPolicyArrayOutputWithContext(context.Background())
}

func (i OrgIdentityIdentityPolicyArray) ToOrgIdentityIdentityPolicyArrayOutputWithContext(ctx context.Context) OrgIdentityIdentityPolicyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgIdentityIdentityPolicyArrayOutput)
}

type OrgIdentityIdentityPolicyOutput struct{ *pulumi.OutputState }

func (OrgIdentityIdentityPolicyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgIdentityIdentityPolicy)(nil)).Elem()
}

func (o OrgIdentityIdentityPolicyOutput) ToOrgIdentityIdentityPolicyOutput() OrgIdentityIdentityPolicyOutput {
	return o
}

func (o OrgIdentityIdentityPolicyOutput) ToOrgIdentityIdentityPolicyOutputWithContext(ctx context.Context) OrgIdentityIdentityPolicyOutput {
	return o
}

func (o OrgIdentityIdentityPolicyOutput) PolicyDocument() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgIdentityIdentityPolicy) *string { return v.PolicyDocument }).(pulumi.StringPtrOutput)
}

func (o OrgIdentityIdentityPolicyOutput) PolicyId() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgIdentityIdentityPolicy) *int { return v.PolicyId }).(pulumi.IntPtrOutput)
}

func (o OrgIdentityIdentityPolicyOutput) PolicyName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgIdentityIdentityPolicy) *string { return v.PolicyName }).(pulumi.StringPtrOutput)
}

func (o OrgIdentityIdentityPolicyOutput) PolicyType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgIdentityIdentityPolicy) *int { return v.PolicyType }).(pulumi.IntPtrOutput)
}

type OrgIdentityIdentityPolicyArrayOutput struct{ *pulumi.OutputState }

func (OrgIdentityIdentityPolicyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgIdentityIdentityPolicy)(nil)).Elem()
}

func (o OrgIdentityIdentityPolicyArrayOutput) ToOrgIdentityIdentityPolicyArrayOutput() OrgIdentityIdentityPolicyArrayOutput {
	return o
}

func (o OrgIdentityIdentityPolicyArrayOutput) ToOrgIdentityIdentityPolicyArrayOutputWithContext(ctx context.Context) OrgIdentityIdentityPolicyArrayOutput {
	return o
}

func (o OrgIdentityIdentityPolicyArrayOutput) Index(i pulumi.IntInput) OrgIdentityIdentityPolicyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgIdentityIdentityPolicy {
		return vs[0].([]OrgIdentityIdentityPolicy)[vs[1].(int)]
	}).(OrgIdentityIdentityPolicyOutput)
}

type OrgMemberOrgPermission struct {
	Id   *int    `pulumi:"id"`
	Name *string `pulumi:"name"`
}

// OrgMemberOrgPermissionInput is an input type that accepts OrgMemberOrgPermissionArgs and OrgMemberOrgPermissionOutput values.
// You can construct a concrete instance of `OrgMemberOrgPermissionInput` via:
//
//	OrgMemberOrgPermissionArgs{...}
type OrgMemberOrgPermissionInput interface {
	pulumi.Input

	ToOrgMemberOrgPermissionOutput() OrgMemberOrgPermissionOutput
	ToOrgMemberOrgPermissionOutputWithContext(context.Context) OrgMemberOrgPermissionOutput
}

type OrgMemberOrgPermissionArgs struct {
	Id   pulumi.IntPtrInput    `pulumi:"id"`
	Name pulumi.StringPtrInput `pulumi:"name"`
}

func (OrgMemberOrgPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgMemberOrgPermission)(nil)).Elem()
}

func (i OrgMemberOrgPermissionArgs) ToOrgMemberOrgPermissionOutput() OrgMemberOrgPermissionOutput {
	return i.ToOrgMemberOrgPermissionOutputWithContext(context.Background())
}

func (i OrgMemberOrgPermissionArgs) ToOrgMemberOrgPermissionOutputWithContext(ctx context.Context) OrgMemberOrgPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMemberOrgPermissionOutput)
}

// OrgMemberOrgPermissionArrayInput is an input type that accepts OrgMemberOrgPermissionArray and OrgMemberOrgPermissionArrayOutput values.
// You can construct a concrete instance of `OrgMemberOrgPermissionArrayInput` via:
//
//	OrgMemberOrgPermissionArray{ OrgMemberOrgPermissionArgs{...} }
type OrgMemberOrgPermissionArrayInput interface {
	pulumi.Input

	ToOrgMemberOrgPermissionArrayOutput() OrgMemberOrgPermissionArrayOutput
	ToOrgMemberOrgPermissionArrayOutputWithContext(context.Context) OrgMemberOrgPermissionArrayOutput
}

type OrgMemberOrgPermissionArray []OrgMemberOrgPermissionInput

func (OrgMemberOrgPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgMemberOrgPermission)(nil)).Elem()
}

func (i OrgMemberOrgPermissionArray) ToOrgMemberOrgPermissionArrayOutput() OrgMemberOrgPermissionArrayOutput {
	return i.ToOrgMemberOrgPermissionArrayOutputWithContext(context.Background())
}

func (i OrgMemberOrgPermissionArray) ToOrgMemberOrgPermissionArrayOutputWithContext(ctx context.Context) OrgMemberOrgPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(OrgMemberOrgPermissionArrayOutput)
}

type OrgMemberOrgPermissionOutput struct{ *pulumi.OutputState }

func (OrgMemberOrgPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*OrgMemberOrgPermission)(nil)).Elem()
}

func (o OrgMemberOrgPermissionOutput) ToOrgMemberOrgPermissionOutput() OrgMemberOrgPermissionOutput {
	return o
}

func (o OrgMemberOrgPermissionOutput) ToOrgMemberOrgPermissionOutputWithContext(ctx context.Context) OrgMemberOrgPermissionOutput {
	return o
}

func (o OrgMemberOrgPermissionOutput) Id() pulumi.IntPtrOutput {
	return o.ApplyT(func(v OrgMemberOrgPermission) *int { return v.Id }).(pulumi.IntPtrOutput)
}

func (o OrgMemberOrgPermissionOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v OrgMemberOrgPermission) *string { return v.Name }).(pulumi.StringPtrOutput)
}

type OrgMemberOrgPermissionArrayOutput struct{ *pulumi.OutputState }

func (OrgMemberOrgPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]OrgMemberOrgPermission)(nil)).Elem()
}

func (o OrgMemberOrgPermissionArrayOutput) ToOrgMemberOrgPermissionArrayOutput() OrgMemberOrgPermissionArrayOutput {
	return o
}

func (o OrgMemberOrgPermissionArrayOutput) ToOrgMemberOrgPermissionArrayOutputWithContext(ctx context.Context) OrgMemberOrgPermissionArrayOutput {
	return o
}

func (o OrgMemberOrgPermissionArrayOutput) Index(i pulumi.IntInput) OrgMemberOrgPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) OrgMemberOrgPermission {
		return vs[0].([]OrgMemberOrgPermission)[vs[1].(int)]
	}).(OrgMemberOrgPermissionOutput)
}

type GetMembersItem struct {
	BindStatus       string                        `pulumi:"bindStatus"`
	CreateTime       string                        `pulumi:"createTime"`
	IsAllowQuit      string                        `pulumi:"isAllowQuit"`
	MemberType       string                        `pulumi:"memberType"`
	MemberUin        int                           `pulumi:"memberUin"`
	Name             string                        `pulumi:"name"`
	NodeId           int                           `pulumi:"nodeId"`
	NodeName         string                        `pulumi:"nodeName"`
	OrgIdentities    []GetMembersItemOrgIdentity   `pulumi:"orgIdentities"`
	OrgPermissions   []GetMembersItemOrgPermission `pulumi:"orgPermissions"`
	OrgPolicyName    string                        `pulumi:"orgPolicyName"`
	OrgPolicyType    string                        `pulumi:"orgPolicyType"`
	PayName          string                        `pulumi:"payName"`
	PayUin           string                        `pulumi:"payUin"`
	PermissionStatus string                        `pulumi:"permissionStatus"`
	Remark           string                        `pulumi:"remark"`
	UpdateTime       string                        `pulumi:"updateTime"`
}

// GetMembersItemInput is an input type that accepts GetMembersItemArgs and GetMembersItemOutput values.
// You can construct a concrete instance of `GetMembersItemInput` via:
//
//	GetMembersItemArgs{...}
type GetMembersItemInput interface {
	pulumi.Input

	ToGetMembersItemOutput() GetMembersItemOutput
	ToGetMembersItemOutputWithContext(context.Context) GetMembersItemOutput
}

type GetMembersItemArgs struct {
	BindStatus       pulumi.StringInput                    `pulumi:"bindStatus"`
	CreateTime       pulumi.StringInput                    `pulumi:"createTime"`
	IsAllowQuit      pulumi.StringInput                    `pulumi:"isAllowQuit"`
	MemberType       pulumi.StringInput                    `pulumi:"memberType"`
	MemberUin        pulumi.IntInput                       `pulumi:"memberUin"`
	Name             pulumi.StringInput                    `pulumi:"name"`
	NodeId           pulumi.IntInput                       `pulumi:"nodeId"`
	NodeName         pulumi.StringInput                    `pulumi:"nodeName"`
	OrgIdentities    GetMembersItemOrgIdentityArrayInput   `pulumi:"orgIdentities"`
	OrgPermissions   GetMembersItemOrgPermissionArrayInput `pulumi:"orgPermissions"`
	OrgPolicyName    pulumi.StringInput                    `pulumi:"orgPolicyName"`
	OrgPolicyType    pulumi.StringInput                    `pulumi:"orgPolicyType"`
	PayName          pulumi.StringInput                    `pulumi:"payName"`
	PayUin           pulumi.StringInput                    `pulumi:"payUin"`
	PermissionStatus pulumi.StringInput                    `pulumi:"permissionStatus"`
	Remark           pulumi.StringInput                    `pulumi:"remark"`
	UpdateTime       pulumi.StringInput                    `pulumi:"updateTime"`
}

func (GetMembersItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItem)(nil)).Elem()
}

func (i GetMembersItemArgs) ToGetMembersItemOutput() GetMembersItemOutput {
	return i.ToGetMembersItemOutputWithContext(context.Background())
}

func (i GetMembersItemArgs) ToGetMembersItemOutputWithContext(ctx context.Context) GetMembersItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemOutput)
}

// GetMembersItemArrayInput is an input type that accepts GetMembersItemArray and GetMembersItemArrayOutput values.
// You can construct a concrete instance of `GetMembersItemArrayInput` via:
//
//	GetMembersItemArray{ GetMembersItemArgs{...} }
type GetMembersItemArrayInput interface {
	pulumi.Input

	ToGetMembersItemArrayOutput() GetMembersItemArrayOutput
	ToGetMembersItemArrayOutputWithContext(context.Context) GetMembersItemArrayOutput
}

type GetMembersItemArray []GetMembersItemInput

func (GetMembersItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItem)(nil)).Elem()
}

func (i GetMembersItemArray) ToGetMembersItemArrayOutput() GetMembersItemArrayOutput {
	return i.ToGetMembersItemArrayOutputWithContext(context.Background())
}

func (i GetMembersItemArray) ToGetMembersItemArrayOutputWithContext(ctx context.Context) GetMembersItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemArrayOutput)
}

type GetMembersItemOutput struct{ *pulumi.OutputState }

func (GetMembersItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItem)(nil)).Elem()
}

func (o GetMembersItemOutput) ToGetMembersItemOutput() GetMembersItemOutput {
	return o
}

func (o GetMembersItemOutput) ToGetMembersItemOutputWithContext(ctx context.Context) GetMembersItemOutput {
	return o
}

func (o GetMembersItemOutput) BindStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.BindStatus }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) CreateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.CreateTime }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) IsAllowQuit() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.IsAllowQuit }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) MemberType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.MemberType }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) MemberUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetMembersItem) int { return v.MemberUin }).(pulumi.IntOutput)
}

func (o GetMembersItemOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) NodeId() pulumi.IntOutput {
	return o.ApplyT(func(v GetMembersItem) int { return v.NodeId }).(pulumi.IntOutput)
}

func (o GetMembersItemOutput) NodeName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.NodeName }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) OrgIdentities() GetMembersItemOrgIdentityArrayOutput {
	return o.ApplyT(func(v GetMembersItem) []GetMembersItemOrgIdentity { return v.OrgIdentities }).(GetMembersItemOrgIdentityArrayOutput)
}

func (o GetMembersItemOutput) OrgPermissions() GetMembersItemOrgPermissionArrayOutput {
	return o.ApplyT(func(v GetMembersItem) []GetMembersItemOrgPermission { return v.OrgPermissions }).(GetMembersItemOrgPermissionArrayOutput)
}

func (o GetMembersItemOutput) OrgPolicyName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.OrgPolicyName }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) OrgPolicyType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.OrgPolicyType }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) PayName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.PayName }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) PayUin() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.PayUin }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) PermissionStatus() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.PermissionStatus }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) Remark() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.Remark }).(pulumi.StringOutput)
}

func (o GetMembersItemOutput) UpdateTime() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItem) string { return v.UpdateTime }).(pulumi.StringOutput)
}

type GetMembersItemArrayOutput struct{ *pulumi.OutputState }

func (GetMembersItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItem)(nil)).Elem()
}

func (o GetMembersItemArrayOutput) ToGetMembersItemArrayOutput() GetMembersItemArrayOutput {
	return o
}

func (o GetMembersItemArrayOutput) ToGetMembersItemArrayOutputWithContext(ctx context.Context) GetMembersItemArrayOutput {
	return o
}

func (o GetMembersItemArrayOutput) Index(i pulumi.IntInput) GetMembersItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMembersItem {
		return vs[0].([]GetMembersItem)[vs[1].(int)]
	}).(GetMembersItemOutput)
}

type GetMembersItemOrgIdentity struct {
	IdentityAliasName string `pulumi:"identityAliasName"`
	IdentityId        int    `pulumi:"identityId"`
}

// GetMembersItemOrgIdentityInput is an input type that accepts GetMembersItemOrgIdentityArgs and GetMembersItemOrgIdentityOutput values.
// You can construct a concrete instance of `GetMembersItemOrgIdentityInput` via:
//
//	GetMembersItemOrgIdentityArgs{...}
type GetMembersItemOrgIdentityInput interface {
	pulumi.Input

	ToGetMembersItemOrgIdentityOutput() GetMembersItemOrgIdentityOutput
	ToGetMembersItemOrgIdentityOutputWithContext(context.Context) GetMembersItemOrgIdentityOutput
}

type GetMembersItemOrgIdentityArgs struct {
	IdentityAliasName pulumi.StringInput `pulumi:"identityAliasName"`
	IdentityId        pulumi.IntInput    `pulumi:"identityId"`
}

func (GetMembersItemOrgIdentityArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItemOrgIdentity)(nil)).Elem()
}

func (i GetMembersItemOrgIdentityArgs) ToGetMembersItemOrgIdentityOutput() GetMembersItemOrgIdentityOutput {
	return i.ToGetMembersItemOrgIdentityOutputWithContext(context.Background())
}

func (i GetMembersItemOrgIdentityArgs) ToGetMembersItemOrgIdentityOutputWithContext(ctx context.Context) GetMembersItemOrgIdentityOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemOrgIdentityOutput)
}

// GetMembersItemOrgIdentityArrayInput is an input type that accepts GetMembersItemOrgIdentityArray and GetMembersItemOrgIdentityArrayOutput values.
// You can construct a concrete instance of `GetMembersItemOrgIdentityArrayInput` via:
//
//	GetMembersItemOrgIdentityArray{ GetMembersItemOrgIdentityArgs{...} }
type GetMembersItemOrgIdentityArrayInput interface {
	pulumi.Input

	ToGetMembersItemOrgIdentityArrayOutput() GetMembersItemOrgIdentityArrayOutput
	ToGetMembersItemOrgIdentityArrayOutputWithContext(context.Context) GetMembersItemOrgIdentityArrayOutput
}

type GetMembersItemOrgIdentityArray []GetMembersItemOrgIdentityInput

func (GetMembersItemOrgIdentityArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItemOrgIdentity)(nil)).Elem()
}

func (i GetMembersItemOrgIdentityArray) ToGetMembersItemOrgIdentityArrayOutput() GetMembersItemOrgIdentityArrayOutput {
	return i.ToGetMembersItemOrgIdentityArrayOutputWithContext(context.Background())
}

func (i GetMembersItemOrgIdentityArray) ToGetMembersItemOrgIdentityArrayOutputWithContext(ctx context.Context) GetMembersItemOrgIdentityArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemOrgIdentityArrayOutput)
}

type GetMembersItemOrgIdentityOutput struct{ *pulumi.OutputState }

func (GetMembersItemOrgIdentityOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItemOrgIdentity)(nil)).Elem()
}

func (o GetMembersItemOrgIdentityOutput) ToGetMembersItemOrgIdentityOutput() GetMembersItemOrgIdentityOutput {
	return o
}

func (o GetMembersItemOrgIdentityOutput) ToGetMembersItemOrgIdentityOutputWithContext(ctx context.Context) GetMembersItemOrgIdentityOutput {
	return o
}

func (o GetMembersItemOrgIdentityOutput) IdentityAliasName() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItemOrgIdentity) string { return v.IdentityAliasName }).(pulumi.StringOutput)
}

func (o GetMembersItemOrgIdentityOutput) IdentityId() pulumi.IntOutput {
	return o.ApplyT(func(v GetMembersItemOrgIdentity) int { return v.IdentityId }).(pulumi.IntOutput)
}

type GetMembersItemOrgIdentityArrayOutput struct{ *pulumi.OutputState }

func (GetMembersItemOrgIdentityArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItemOrgIdentity)(nil)).Elem()
}

func (o GetMembersItemOrgIdentityArrayOutput) ToGetMembersItemOrgIdentityArrayOutput() GetMembersItemOrgIdentityArrayOutput {
	return o
}

func (o GetMembersItemOrgIdentityArrayOutput) ToGetMembersItemOrgIdentityArrayOutputWithContext(ctx context.Context) GetMembersItemOrgIdentityArrayOutput {
	return o
}

func (o GetMembersItemOrgIdentityArrayOutput) Index(i pulumi.IntInput) GetMembersItemOrgIdentityOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMembersItemOrgIdentity {
		return vs[0].([]GetMembersItemOrgIdentity)[vs[1].(int)]
	}).(GetMembersItemOrgIdentityOutput)
}

type GetMembersItemOrgPermission struct {
	Id   int    `pulumi:"id"`
	Name string `pulumi:"name"`
}

// GetMembersItemOrgPermissionInput is an input type that accepts GetMembersItemOrgPermissionArgs and GetMembersItemOrgPermissionOutput values.
// You can construct a concrete instance of `GetMembersItemOrgPermissionInput` via:
//
//	GetMembersItemOrgPermissionArgs{...}
type GetMembersItemOrgPermissionInput interface {
	pulumi.Input

	ToGetMembersItemOrgPermissionOutput() GetMembersItemOrgPermissionOutput
	ToGetMembersItemOrgPermissionOutputWithContext(context.Context) GetMembersItemOrgPermissionOutput
}

type GetMembersItemOrgPermissionArgs struct {
	Id   pulumi.IntInput    `pulumi:"id"`
	Name pulumi.StringInput `pulumi:"name"`
}

func (GetMembersItemOrgPermissionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItemOrgPermission)(nil)).Elem()
}

func (i GetMembersItemOrgPermissionArgs) ToGetMembersItemOrgPermissionOutput() GetMembersItemOrgPermissionOutput {
	return i.ToGetMembersItemOrgPermissionOutputWithContext(context.Background())
}

func (i GetMembersItemOrgPermissionArgs) ToGetMembersItemOrgPermissionOutputWithContext(ctx context.Context) GetMembersItemOrgPermissionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemOrgPermissionOutput)
}

// GetMembersItemOrgPermissionArrayInput is an input type that accepts GetMembersItemOrgPermissionArray and GetMembersItemOrgPermissionArrayOutput values.
// You can construct a concrete instance of `GetMembersItemOrgPermissionArrayInput` via:
//
//	GetMembersItemOrgPermissionArray{ GetMembersItemOrgPermissionArgs{...} }
type GetMembersItemOrgPermissionArrayInput interface {
	pulumi.Input

	ToGetMembersItemOrgPermissionArrayOutput() GetMembersItemOrgPermissionArrayOutput
	ToGetMembersItemOrgPermissionArrayOutputWithContext(context.Context) GetMembersItemOrgPermissionArrayOutput
}

type GetMembersItemOrgPermissionArray []GetMembersItemOrgPermissionInput

func (GetMembersItemOrgPermissionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItemOrgPermission)(nil)).Elem()
}

func (i GetMembersItemOrgPermissionArray) ToGetMembersItemOrgPermissionArrayOutput() GetMembersItemOrgPermissionArrayOutput {
	return i.ToGetMembersItemOrgPermissionArrayOutputWithContext(context.Background())
}

func (i GetMembersItemOrgPermissionArray) ToGetMembersItemOrgPermissionArrayOutputWithContext(ctx context.Context) GetMembersItemOrgPermissionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetMembersItemOrgPermissionArrayOutput)
}

type GetMembersItemOrgPermissionOutput struct{ *pulumi.OutputState }

func (GetMembersItemOrgPermissionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMembersItemOrgPermission)(nil)).Elem()
}

func (o GetMembersItemOrgPermissionOutput) ToGetMembersItemOrgPermissionOutput() GetMembersItemOrgPermissionOutput {
	return o
}

func (o GetMembersItemOrgPermissionOutput) ToGetMembersItemOrgPermissionOutputWithContext(ctx context.Context) GetMembersItemOrgPermissionOutput {
	return o
}

func (o GetMembersItemOrgPermissionOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetMembersItemOrgPermission) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetMembersItemOrgPermissionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetMembersItemOrgPermission) string { return v.Name }).(pulumi.StringOutput)
}

type GetMembersItemOrgPermissionArrayOutput struct{ *pulumi.OutputState }

func (GetMembersItemOrgPermissionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetMembersItemOrgPermission)(nil)).Elem()
}

func (o GetMembersItemOrgPermissionArrayOutput) ToGetMembersItemOrgPermissionArrayOutput() GetMembersItemOrgPermissionArrayOutput {
	return o
}

func (o GetMembersItemOrgPermissionArrayOutput) ToGetMembersItemOrgPermissionArrayOutputWithContext(ctx context.Context) GetMembersItemOrgPermissionArrayOutput {
	return o
}

func (o GetMembersItemOrgPermissionArrayOutput) Index(i pulumi.IntInput) GetMembersItemOrgPermissionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetMembersItemOrgPermission {
		return vs[0].([]GetMembersItemOrgPermission)[vs[1].(int)]
	}).(GetMembersItemOrgPermissionOutput)
}

type GetOrgAuthNodeItem struct {
	AuthName   string                      `pulumi:"authName"`
	Managers   []GetOrgAuthNodeItemManager `pulumi:"managers"`
	RelationId int                         `pulumi:"relationId"`
}

// GetOrgAuthNodeItemInput is an input type that accepts GetOrgAuthNodeItemArgs and GetOrgAuthNodeItemOutput values.
// You can construct a concrete instance of `GetOrgAuthNodeItemInput` via:
//
//	GetOrgAuthNodeItemArgs{...}
type GetOrgAuthNodeItemInput interface {
	pulumi.Input

	ToGetOrgAuthNodeItemOutput() GetOrgAuthNodeItemOutput
	ToGetOrgAuthNodeItemOutputWithContext(context.Context) GetOrgAuthNodeItemOutput
}

type GetOrgAuthNodeItemArgs struct {
	AuthName   pulumi.StringInput                  `pulumi:"authName"`
	Managers   GetOrgAuthNodeItemManagerArrayInput `pulumi:"managers"`
	RelationId pulumi.IntInput                     `pulumi:"relationId"`
}

func (GetOrgAuthNodeItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeItem)(nil)).Elem()
}

func (i GetOrgAuthNodeItemArgs) ToGetOrgAuthNodeItemOutput() GetOrgAuthNodeItemOutput {
	return i.ToGetOrgAuthNodeItemOutputWithContext(context.Background())
}

func (i GetOrgAuthNodeItemArgs) ToGetOrgAuthNodeItemOutputWithContext(ctx context.Context) GetOrgAuthNodeItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAuthNodeItemOutput)
}

// GetOrgAuthNodeItemArrayInput is an input type that accepts GetOrgAuthNodeItemArray and GetOrgAuthNodeItemArrayOutput values.
// You can construct a concrete instance of `GetOrgAuthNodeItemArrayInput` via:
//
//	GetOrgAuthNodeItemArray{ GetOrgAuthNodeItemArgs{...} }
type GetOrgAuthNodeItemArrayInput interface {
	pulumi.Input

	ToGetOrgAuthNodeItemArrayOutput() GetOrgAuthNodeItemArrayOutput
	ToGetOrgAuthNodeItemArrayOutputWithContext(context.Context) GetOrgAuthNodeItemArrayOutput
}

type GetOrgAuthNodeItemArray []GetOrgAuthNodeItemInput

func (GetOrgAuthNodeItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAuthNodeItem)(nil)).Elem()
}

func (i GetOrgAuthNodeItemArray) ToGetOrgAuthNodeItemArrayOutput() GetOrgAuthNodeItemArrayOutput {
	return i.ToGetOrgAuthNodeItemArrayOutputWithContext(context.Background())
}

func (i GetOrgAuthNodeItemArray) ToGetOrgAuthNodeItemArrayOutputWithContext(ctx context.Context) GetOrgAuthNodeItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAuthNodeItemArrayOutput)
}

type GetOrgAuthNodeItemOutput struct{ *pulumi.OutputState }

func (GetOrgAuthNodeItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeItem)(nil)).Elem()
}

func (o GetOrgAuthNodeItemOutput) ToGetOrgAuthNodeItemOutput() GetOrgAuthNodeItemOutput {
	return o
}

func (o GetOrgAuthNodeItemOutput) ToGetOrgAuthNodeItemOutputWithContext(ctx context.Context) GetOrgAuthNodeItemOutput {
	return o
}

func (o GetOrgAuthNodeItemOutput) AuthName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgAuthNodeItem) string { return v.AuthName }).(pulumi.StringOutput)
}

func (o GetOrgAuthNodeItemOutput) Managers() GetOrgAuthNodeItemManagerArrayOutput {
	return o.ApplyT(func(v GetOrgAuthNodeItem) []GetOrgAuthNodeItemManager { return v.Managers }).(GetOrgAuthNodeItemManagerArrayOutput)
}

func (o GetOrgAuthNodeItemOutput) RelationId() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgAuthNodeItem) int { return v.RelationId }).(pulumi.IntOutput)
}

type GetOrgAuthNodeItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrgAuthNodeItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAuthNodeItem)(nil)).Elem()
}

func (o GetOrgAuthNodeItemArrayOutput) ToGetOrgAuthNodeItemArrayOutput() GetOrgAuthNodeItemArrayOutput {
	return o
}

func (o GetOrgAuthNodeItemArrayOutput) ToGetOrgAuthNodeItemArrayOutputWithContext(ctx context.Context) GetOrgAuthNodeItemArrayOutput {
	return o
}

func (o GetOrgAuthNodeItemArrayOutput) Index(i pulumi.IntInput) GetOrgAuthNodeItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgAuthNodeItem {
		return vs[0].([]GetOrgAuthNodeItem)[vs[1].(int)]
	}).(GetOrgAuthNodeItemOutput)
}

type GetOrgAuthNodeItemManager struct {
	MemberName string `pulumi:"memberName"`
	MemberUin  int    `pulumi:"memberUin"`
}

// GetOrgAuthNodeItemManagerInput is an input type that accepts GetOrgAuthNodeItemManagerArgs and GetOrgAuthNodeItemManagerOutput values.
// You can construct a concrete instance of `GetOrgAuthNodeItemManagerInput` via:
//
//	GetOrgAuthNodeItemManagerArgs{...}
type GetOrgAuthNodeItemManagerInput interface {
	pulumi.Input

	ToGetOrgAuthNodeItemManagerOutput() GetOrgAuthNodeItemManagerOutput
	ToGetOrgAuthNodeItemManagerOutputWithContext(context.Context) GetOrgAuthNodeItemManagerOutput
}

type GetOrgAuthNodeItemManagerArgs struct {
	MemberName pulumi.StringInput `pulumi:"memberName"`
	MemberUin  pulumi.IntInput    `pulumi:"memberUin"`
}

func (GetOrgAuthNodeItemManagerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeItemManager)(nil)).Elem()
}

func (i GetOrgAuthNodeItemManagerArgs) ToGetOrgAuthNodeItemManagerOutput() GetOrgAuthNodeItemManagerOutput {
	return i.ToGetOrgAuthNodeItemManagerOutputWithContext(context.Background())
}

func (i GetOrgAuthNodeItemManagerArgs) ToGetOrgAuthNodeItemManagerOutputWithContext(ctx context.Context) GetOrgAuthNodeItemManagerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAuthNodeItemManagerOutput)
}

// GetOrgAuthNodeItemManagerArrayInput is an input type that accepts GetOrgAuthNodeItemManagerArray and GetOrgAuthNodeItemManagerArrayOutput values.
// You can construct a concrete instance of `GetOrgAuthNodeItemManagerArrayInput` via:
//
//	GetOrgAuthNodeItemManagerArray{ GetOrgAuthNodeItemManagerArgs{...} }
type GetOrgAuthNodeItemManagerArrayInput interface {
	pulumi.Input

	ToGetOrgAuthNodeItemManagerArrayOutput() GetOrgAuthNodeItemManagerArrayOutput
	ToGetOrgAuthNodeItemManagerArrayOutputWithContext(context.Context) GetOrgAuthNodeItemManagerArrayOutput
}

type GetOrgAuthNodeItemManagerArray []GetOrgAuthNodeItemManagerInput

func (GetOrgAuthNodeItemManagerArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAuthNodeItemManager)(nil)).Elem()
}

func (i GetOrgAuthNodeItemManagerArray) ToGetOrgAuthNodeItemManagerArrayOutput() GetOrgAuthNodeItemManagerArrayOutput {
	return i.ToGetOrgAuthNodeItemManagerArrayOutputWithContext(context.Background())
}

func (i GetOrgAuthNodeItemManagerArray) ToGetOrgAuthNodeItemManagerArrayOutputWithContext(ctx context.Context) GetOrgAuthNodeItemManagerArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgAuthNodeItemManagerArrayOutput)
}

type GetOrgAuthNodeItemManagerOutput struct{ *pulumi.OutputState }

func (GetOrgAuthNodeItemManagerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgAuthNodeItemManager)(nil)).Elem()
}

func (o GetOrgAuthNodeItemManagerOutput) ToGetOrgAuthNodeItemManagerOutput() GetOrgAuthNodeItemManagerOutput {
	return o
}

func (o GetOrgAuthNodeItemManagerOutput) ToGetOrgAuthNodeItemManagerOutputWithContext(ctx context.Context) GetOrgAuthNodeItemManagerOutput {
	return o
}

func (o GetOrgAuthNodeItemManagerOutput) MemberName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgAuthNodeItemManager) string { return v.MemberName }).(pulumi.StringOutput)
}

func (o GetOrgAuthNodeItemManagerOutput) MemberUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgAuthNodeItemManager) int { return v.MemberUin }).(pulumi.IntOutput)
}

type GetOrgAuthNodeItemManagerArrayOutput struct{ *pulumi.OutputState }

func (GetOrgAuthNodeItemManagerArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgAuthNodeItemManager)(nil)).Elem()
}

func (o GetOrgAuthNodeItemManagerArrayOutput) ToGetOrgAuthNodeItemManagerArrayOutput() GetOrgAuthNodeItemManagerArrayOutput {
	return o
}

func (o GetOrgAuthNodeItemManagerArrayOutput) ToGetOrgAuthNodeItemManagerArrayOutputWithContext(ctx context.Context) GetOrgAuthNodeItemManagerArrayOutput {
	return o
}

func (o GetOrgAuthNodeItemManagerArrayOutput) Index(i pulumi.IntInput) GetOrgAuthNodeItemManagerOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgAuthNodeItemManager {
		return vs[0].([]GetOrgAuthNodeItemManager)[vs[1].(int)]
	}).(GetOrgAuthNodeItemManagerOutput)
}

type GetOrgFinancialByMemberItem struct {
	MemberName string  `pulumi:"memberName"`
	MemberUin  int     `pulumi:"memberUin"`
	Ratio      string  `pulumi:"ratio"`
	TotalCost  float64 `pulumi:"totalCost"`
}

// GetOrgFinancialByMemberItemInput is an input type that accepts GetOrgFinancialByMemberItemArgs and GetOrgFinancialByMemberItemOutput values.
// You can construct a concrete instance of `GetOrgFinancialByMemberItemInput` via:
//
//	GetOrgFinancialByMemberItemArgs{...}
type GetOrgFinancialByMemberItemInput interface {
	pulumi.Input

	ToGetOrgFinancialByMemberItemOutput() GetOrgFinancialByMemberItemOutput
	ToGetOrgFinancialByMemberItemOutputWithContext(context.Context) GetOrgFinancialByMemberItemOutput
}

type GetOrgFinancialByMemberItemArgs struct {
	MemberName pulumi.StringInput  `pulumi:"memberName"`
	MemberUin  pulumi.IntInput     `pulumi:"memberUin"`
	Ratio      pulumi.StringInput  `pulumi:"ratio"`
	TotalCost  pulumi.Float64Input `pulumi:"totalCost"`
}

func (GetOrgFinancialByMemberItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByMemberItem)(nil)).Elem()
}

func (i GetOrgFinancialByMemberItemArgs) ToGetOrgFinancialByMemberItemOutput() GetOrgFinancialByMemberItemOutput {
	return i.ToGetOrgFinancialByMemberItemOutputWithContext(context.Background())
}

func (i GetOrgFinancialByMemberItemArgs) ToGetOrgFinancialByMemberItemOutputWithContext(ctx context.Context) GetOrgFinancialByMemberItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByMemberItemOutput)
}

// GetOrgFinancialByMemberItemArrayInput is an input type that accepts GetOrgFinancialByMemberItemArray and GetOrgFinancialByMemberItemArrayOutput values.
// You can construct a concrete instance of `GetOrgFinancialByMemberItemArrayInput` via:
//
//	GetOrgFinancialByMemberItemArray{ GetOrgFinancialByMemberItemArgs{...} }
type GetOrgFinancialByMemberItemArrayInput interface {
	pulumi.Input

	ToGetOrgFinancialByMemberItemArrayOutput() GetOrgFinancialByMemberItemArrayOutput
	ToGetOrgFinancialByMemberItemArrayOutputWithContext(context.Context) GetOrgFinancialByMemberItemArrayOutput
}

type GetOrgFinancialByMemberItemArray []GetOrgFinancialByMemberItemInput

func (GetOrgFinancialByMemberItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByMemberItem)(nil)).Elem()
}

func (i GetOrgFinancialByMemberItemArray) ToGetOrgFinancialByMemberItemArrayOutput() GetOrgFinancialByMemberItemArrayOutput {
	return i.ToGetOrgFinancialByMemberItemArrayOutputWithContext(context.Background())
}

func (i GetOrgFinancialByMemberItemArray) ToGetOrgFinancialByMemberItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByMemberItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByMemberItemArrayOutput)
}

type GetOrgFinancialByMemberItemOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByMemberItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByMemberItem)(nil)).Elem()
}

func (o GetOrgFinancialByMemberItemOutput) ToGetOrgFinancialByMemberItemOutput() GetOrgFinancialByMemberItemOutput {
	return o
}

func (o GetOrgFinancialByMemberItemOutput) ToGetOrgFinancialByMemberItemOutputWithContext(ctx context.Context) GetOrgFinancialByMemberItemOutput {
	return o
}

func (o GetOrgFinancialByMemberItemOutput) MemberName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByMemberItem) string { return v.MemberName }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByMemberItemOutput) MemberUin() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgFinancialByMemberItem) int { return v.MemberUin }).(pulumi.IntOutput)
}

func (o GetOrgFinancialByMemberItemOutput) Ratio() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByMemberItem) string { return v.Ratio }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByMemberItemOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrgFinancialByMemberItem) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

type GetOrgFinancialByMemberItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByMemberItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByMemberItem)(nil)).Elem()
}

func (o GetOrgFinancialByMemberItemArrayOutput) ToGetOrgFinancialByMemberItemArrayOutput() GetOrgFinancialByMemberItemArrayOutput {
	return o
}

func (o GetOrgFinancialByMemberItemArrayOutput) ToGetOrgFinancialByMemberItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByMemberItemArrayOutput {
	return o
}

func (o GetOrgFinancialByMemberItemArrayOutput) Index(i pulumi.IntInput) GetOrgFinancialByMemberItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgFinancialByMemberItem {
		return vs[0].([]GetOrgFinancialByMemberItem)[vs[1].(int)]
	}).(GetOrgFinancialByMemberItemOutput)
}

type GetOrgFinancialByMonthItem struct {
	GrowthRate string  `pulumi:"growthRate"`
	Id         int     `pulumi:"id"`
	Month      string  `pulumi:"month"`
	TotalCost  float64 `pulumi:"totalCost"`
}

// GetOrgFinancialByMonthItemInput is an input type that accepts GetOrgFinancialByMonthItemArgs and GetOrgFinancialByMonthItemOutput values.
// You can construct a concrete instance of `GetOrgFinancialByMonthItemInput` via:
//
//	GetOrgFinancialByMonthItemArgs{...}
type GetOrgFinancialByMonthItemInput interface {
	pulumi.Input

	ToGetOrgFinancialByMonthItemOutput() GetOrgFinancialByMonthItemOutput
	ToGetOrgFinancialByMonthItemOutputWithContext(context.Context) GetOrgFinancialByMonthItemOutput
}

type GetOrgFinancialByMonthItemArgs struct {
	GrowthRate pulumi.StringInput  `pulumi:"growthRate"`
	Id         pulumi.IntInput     `pulumi:"id"`
	Month      pulumi.StringInput  `pulumi:"month"`
	TotalCost  pulumi.Float64Input `pulumi:"totalCost"`
}

func (GetOrgFinancialByMonthItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByMonthItem)(nil)).Elem()
}

func (i GetOrgFinancialByMonthItemArgs) ToGetOrgFinancialByMonthItemOutput() GetOrgFinancialByMonthItemOutput {
	return i.ToGetOrgFinancialByMonthItemOutputWithContext(context.Background())
}

func (i GetOrgFinancialByMonthItemArgs) ToGetOrgFinancialByMonthItemOutputWithContext(ctx context.Context) GetOrgFinancialByMonthItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByMonthItemOutput)
}

// GetOrgFinancialByMonthItemArrayInput is an input type that accepts GetOrgFinancialByMonthItemArray and GetOrgFinancialByMonthItemArrayOutput values.
// You can construct a concrete instance of `GetOrgFinancialByMonthItemArrayInput` via:
//
//	GetOrgFinancialByMonthItemArray{ GetOrgFinancialByMonthItemArgs{...} }
type GetOrgFinancialByMonthItemArrayInput interface {
	pulumi.Input

	ToGetOrgFinancialByMonthItemArrayOutput() GetOrgFinancialByMonthItemArrayOutput
	ToGetOrgFinancialByMonthItemArrayOutputWithContext(context.Context) GetOrgFinancialByMonthItemArrayOutput
}

type GetOrgFinancialByMonthItemArray []GetOrgFinancialByMonthItemInput

func (GetOrgFinancialByMonthItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByMonthItem)(nil)).Elem()
}

func (i GetOrgFinancialByMonthItemArray) ToGetOrgFinancialByMonthItemArrayOutput() GetOrgFinancialByMonthItemArrayOutput {
	return i.ToGetOrgFinancialByMonthItemArrayOutputWithContext(context.Background())
}

func (i GetOrgFinancialByMonthItemArray) ToGetOrgFinancialByMonthItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByMonthItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByMonthItemArrayOutput)
}

type GetOrgFinancialByMonthItemOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByMonthItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByMonthItem)(nil)).Elem()
}

func (o GetOrgFinancialByMonthItemOutput) ToGetOrgFinancialByMonthItemOutput() GetOrgFinancialByMonthItemOutput {
	return o
}

func (o GetOrgFinancialByMonthItemOutput) ToGetOrgFinancialByMonthItemOutputWithContext(ctx context.Context) GetOrgFinancialByMonthItemOutput {
	return o
}

func (o GetOrgFinancialByMonthItemOutput) GrowthRate() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByMonthItem) string { return v.GrowthRate }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByMonthItemOutput) Id() pulumi.IntOutput {
	return o.ApplyT(func(v GetOrgFinancialByMonthItem) int { return v.Id }).(pulumi.IntOutput)
}

func (o GetOrgFinancialByMonthItemOutput) Month() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByMonthItem) string { return v.Month }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByMonthItemOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrgFinancialByMonthItem) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

type GetOrgFinancialByMonthItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByMonthItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByMonthItem)(nil)).Elem()
}

func (o GetOrgFinancialByMonthItemArrayOutput) ToGetOrgFinancialByMonthItemArrayOutput() GetOrgFinancialByMonthItemArrayOutput {
	return o
}

func (o GetOrgFinancialByMonthItemArrayOutput) ToGetOrgFinancialByMonthItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByMonthItemArrayOutput {
	return o
}

func (o GetOrgFinancialByMonthItemArrayOutput) Index(i pulumi.IntInput) GetOrgFinancialByMonthItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgFinancialByMonthItem {
		return vs[0].([]GetOrgFinancialByMonthItem)[vs[1].(int)]
	}).(GetOrgFinancialByMonthItemOutput)
}

type GetOrgFinancialByProductItem struct {
	ProductCode string  `pulumi:"productCode"`
	ProductName string  `pulumi:"productName"`
	Ratio       string  `pulumi:"ratio"`
	TotalCost   float64 `pulumi:"totalCost"`
}

// GetOrgFinancialByProductItemInput is an input type that accepts GetOrgFinancialByProductItemArgs and GetOrgFinancialByProductItemOutput values.
// You can construct a concrete instance of `GetOrgFinancialByProductItemInput` via:
//
//	GetOrgFinancialByProductItemArgs{...}
type GetOrgFinancialByProductItemInput interface {
	pulumi.Input

	ToGetOrgFinancialByProductItemOutput() GetOrgFinancialByProductItemOutput
	ToGetOrgFinancialByProductItemOutputWithContext(context.Context) GetOrgFinancialByProductItemOutput
}

type GetOrgFinancialByProductItemArgs struct {
	ProductCode pulumi.StringInput  `pulumi:"productCode"`
	ProductName pulumi.StringInput  `pulumi:"productName"`
	Ratio       pulumi.StringInput  `pulumi:"ratio"`
	TotalCost   pulumi.Float64Input `pulumi:"totalCost"`
}

func (GetOrgFinancialByProductItemArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByProductItem)(nil)).Elem()
}

func (i GetOrgFinancialByProductItemArgs) ToGetOrgFinancialByProductItemOutput() GetOrgFinancialByProductItemOutput {
	return i.ToGetOrgFinancialByProductItemOutputWithContext(context.Background())
}

func (i GetOrgFinancialByProductItemArgs) ToGetOrgFinancialByProductItemOutputWithContext(ctx context.Context) GetOrgFinancialByProductItemOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByProductItemOutput)
}

// GetOrgFinancialByProductItemArrayInput is an input type that accepts GetOrgFinancialByProductItemArray and GetOrgFinancialByProductItemArrayOutput values.
// You can construct a concrete instance of `GetOrgFinancialByProductItemArrayInput` via:
//
//	GetOrgFinancialByProductItemArray{ GetOrgFinancialByProductItemArgs{...} }
type GetOrgFinancialByProductItemArrayInput interface {
	pulumi.Input

	ToGetOrgFinancialByProductItemArrayOutput() GetOrgFinancialByProductItemArrayOutput
	ToGetOrgFinancialByProductItemArrayOutputWithContext(context.Context) GetOrgFinancialByProductItemArrayOutput
}

type GetOrgFinancialByProductItemArray []GetOrgFinancialByProductItemInput

func (GetOrgFinancialByProductItemArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByProductItem)(nil)).Elem()
}

func (i GetOrgFinancialByProductItemArray) ToGetOrgFinancialByProductItemArrayOutput() GetOrgFinancialByProductItemArrayOutput {
	return i.ToGetOrgFinancialByProductItemArrayOutputWithContext(context.Background())
}

func (i GetOrgFinancialByProductItemArray) ToGetOrgFinancialByProductItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByProductItemArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GetOrgFinancialByProductItemArrayOutput)
}

type GetOrgFinancialByProductItemOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByProductItemOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetOrgFinancialByProductItem)(nil)).Elem()
}

func (o GetOrgFinancialByProductItemOutput) ToGetOrgFinancialByProductItemOutput() GetOrgFinancialByProductItemOutput {
	return o
}

func (o GetOrgFinancialByProductItemOutput) ToGetOrgFinancialByProductItemOutputWithContext(ctx context.Context) GetOrgFinancialByProductItemOutput {
	return o
}

func (o GetOrgFinancialByProductItemOutput) ProductCode() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductItem) string { return v.ProductCode }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByProductItemOutput) ProductName() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductItem) string { return v.ProductName }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByProductItemOutput) Ratio() pulumi.StringOutput {
	return o.ApplyT(func(v GetOrgFinancialByProductItem) string { return v.Ratio }).(pulumi.StringOutput)
}

func (o GetOrgFinancialByProductItemOutput) TotalCost() pulumi.Float64Output {
	return o.ApplyT(func(v GetOrgFinancialByProductItem) float64 { return v.TotalCost }).(pulumi.Float64Output)
}

type GetOrgFinancialByProductItemArrayOutput struct{ *pulumi.OutputState }

func (GetOrgFinancialByProductItemArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]GetOrgFinancialByProductItem)(nil)).Elem()
}

func (o GetOrgFinancialByProductItemArrayOutput) ToGetOrgFinancialByProductItemArrayOutput() GetOrgFinancialByProductItemArrayOutput {
	return o
}

func (o GetOrgFinancialByProductItemArrayOutput) ToGetOrgFinancialByProductItemArrayOutputWithContext(ctx context.Context) GetOrgFinancialByProductItemArrayOutput {
	return o
}

func (o GetOrgFinancialByProductItemArrayOutput) Index(i pulumi.IntInput) GetOrgFinancialByProductItemOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) GetOrgFinancialByProductItem {
		return vs[0].([]GetOrgFinancialByProductItem)[vs[1].(int)]
	}).(GetOrgFinancialByProductItemOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceOrgPermissionInput)(nil)).Elem(), InstanceOrgPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*InstanceOrgPermissionArrayInput)(nil)).Elem(), InstanceOrgPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgIdentityIdentityPolicyInput)(nil)).Elem(), OrgIdentityIdentityPolicyArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgIdentityIdentityPolicyArrayInput)(nil)).Elem(), OrgIdentityIdentityPolicyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMemberOrgPermissionInput)(nil)).Elem(), OrgMemberOrgPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*OrgMemberOrgPermissionArrayInput)(nil)).Elem(), OrgMemberOrgPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemInput)(nil)).Elem(), GetMembersItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemArrayInput)(nil)).Elem(), GetMembersItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemOrgIdentityInput)(nil)).Elem(), GetMembersItemOrgIdentityArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemOrgIdentityArrayInput)(nil)).Elem(), GetMembersItemOrgIdentityArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemOrgPermissionInput)(nil)).Elem(), GetMembersItemOrgPermissionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetMembersItemOrgPermissionArrayInput)(nil)).Elem(), GetMembersItemOrgPermissionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAuthNodeItemInput)(nil)).Elem(), GetOrgAuthNodeItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAuthNodeItemArrayInput)(nil)).Elem(), GetOrgAuthNodeItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAuthNodeItemManagerInput)(nil)).Elem(), GetOrgAuthNodeItemManagerArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgAuthNodeItemManagerArrayInput)(nil)).Elem(), GetOrgAuthNodeItemManagerArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByMemberItemInput)(nil)).Elem(), GetOrgFinancialByMemberItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByMemberItemArrayInput)(nil)).Elem(), GetOrgFinancialByMemberItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByMonthItemInput)(nil)).Elem(), GetOrgFinancialByMonthItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByMonthItemArrayInput)(nil)).Elem(), GetOrgFinancialByMonthItemArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByProductItemInput)(nil)).Elem(), GetOrgFinancialByProductItemArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*GetOrgFinancialByProductItemArrayInput)(nil)).Elem(), GetOrgFinancialByProductItemArray{})
	pulumi.RegisterOutputType(InstanceOrgPermissionOutput{})
	pulumi.RegisterOutputType(InstanceOrgPermissionArrayOutput{})
	pulumi.RegisterOutputType(OrgIdentityIdentityPolicyOutput{})
	pulumi.RegisterOutputType(OrgIdentityIdentityPolicyArrayOutput{})
	pulumi.RegisterOutputType(OrgMemberOrgPermissionOutput{})
	pulumi.RegisterOutputType(OrgMemberOrgPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetMembersItemOutput{})
	pulumi.RegisterOutputType(GetMembersItemArrayOutput{})
	pulumi.RegisterOutputType(GetMembersItemOrgIdentityOutput{})
	pulumi.RegisterOutputType(GetMembersItemOrgIdentityArrayOutput{})
	pulumi.RegisterOutputType(GetMembersItemOrgPermissionOutput{})
	pulumi.RegisterOutputType(GetMembersItemOrgPermissionArrayOutput{})
	pulumi.RegisterOutputType(GetOrgAuthNodeItemOutput{})
	pulumi.RegisterOutputType(GetOrgAuthNodeItemArrayOutput{})
	pulumi.RegisterOutputType(GetOrgAuthNodeItemManagerOutput{})
	pulumi.RegisterOutputType(GetOrgAuthNodeItemManagerArrayOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByMemberItemOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByMemberItemArrayOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByMonthItemOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByMonthItemArrayOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByProductItemOutput{})
	pulumi.RegisterOutputType(GetOrgFinancialByProductItemArrayOutput{})
}
