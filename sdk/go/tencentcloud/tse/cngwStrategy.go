// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tse

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CngwStrategy struct {
	pulumi.CustomResourceState

	// configuration of metric scaling.
	Config CngwStrategyConfigPtrOutput `pulumi:"config"`
	// configuration of timed scaling.
	CronConfig CngwStrategyCronConfigPtrOutput `pulumi:"cronConfig"`
	// description information, up to 120 characters.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// gateway ID.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// strategy ID Note: This field may return null, indicating that a valid value is not available.
	StrategyId pulumi.StringOutput `pulumi:"strategyId"`
	// strategy name, up to 20 characters.
	StrategyName pulumi.StringOutput `pulumi:"strategyName"`
}

// NewCngwStrategy registers a new resource with the given unique name, arguments, and options.
func NewCngwStrategy(ctx *pulumi.Context,
	name string, args *CngwStrategyArgs, opts ...pulumi.ResourceOption) (*CngwStrategy, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.StrategyName == nil {
		return nil, errors.New("invalid value for required argument 'StrategyName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CngwStrategy
	err := ctx.RegisterResource("tencentcloud:Tse/cngwStrategy:CngwStrategy", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCngwStrategy gets an existing CngwStrategy resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCngwStrategy(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CngwStrategyState, opts ...pulumi.ResourceOption) (*CngwStrategy, error) {
	var resource CngwStrategy
	err := ctx.ReadResource("tencentcloud:Tse/cngwStrategy:CngwStrategy", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CngwStrategy resources.
type cngwStrategyState struct {
	// configuration of metric scaling.
	Config *CngwStrategyConfig `pulumi:"config"`
	// configuration of timed scaling.
	CronConfig *CngwStrategyCronConfig `pulumi:"cronConfig"`
	// description information, up to 120 characters.
	Description *string `pulumi:"description"`
	// gateway ID.
	GatewayId *string `pulumi:"gatewayId"`
	// strategy ID Note: This field may return null, indicating that a valid value is not available.
	StrategyId *string `pulumi:"strategyId"`
	// strategy name, up to 20 characters.
	StrategyName *string `pulumi:"strategyName"`
}

type CngwStrategyState struct {
	// configuration of metric scaling.
	Config CngwStrategyConfigPtrInput
	// configuration of timed scaling.
	CronConfig CngwStrategyCronConfigPtrInput
	// description information, up to 120 characters.
	Description pulumi.StringPtrInput
	// gateway ID.
	GatewayId pulumi.StringPtrInput
	// strategy ID Note: This field may return null, indicating that a valid value is not available.
	StrategyId pulumi.StringPtrInput
	// strategy name, up to 20 characters.
	StrategyName pulumi.StringPtrInput
}

func (CngwStrategyState) ElementType() reflect.Type {
	return reflect.TypeOf((*cngwStrategyState)(nil)).Elem()
}

type cngwStrategyArgs struct {
	// configuration of metric scaling.
	Config *CngwStrategyConfig `pulumi:"config"`
	// configuration of timed scaling.
	CronConfig *CngwStrategyCronConfig `pulumi:"cronConfig"`
	// description information, up to 120 characters.
	Description *string `pulumi:"description"`
	// gateway ID.
	GatewayId string `pulumi:"gatewayId"`
	// strategy name, up to 20 characters.
	StrategyName string `pulumi:"strategyName"`
}

// The set of arguments for constructing a CngwStrategy resource.
type CngwStrategyArgs struct {
	// configuration of metric scaling.
	Config CngwStrategyConfigPtrInput
	// configuration of timed scaling.
	CronConfig CngwStrategyCronConfigPtrInput
	// description information, up to 120 characters.
	Description pulumi.StringPtrInput
	// gateway ID.
	GatewayId pulumi.StringInput
	// strategy name, up to 20 characters.
	StrategyName pulumi.StringInput
}

func (CngwStrategyArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cngwStrategyArgs)(nil)).Elem()
}

type CngwStrategyInput interface {
	pulumi.Input

	ToCngwStrategyOutput() CngwStrategyOutput
	ToCngwStrategyOutputWithContext(ctx context.Context) CngwStrategyOutput
}

func (*CngwStrategy) ElementType() reflect.Type {
	return reflect.TypeOf((**CngwStrategy)(nil)).Elem()
}

func (i *CngwStrategy) ToCngwStrategyOutput() CngwStrategyOutput {
	return i.ToCngwStrategyOutputWithContext(context.Background())
}

func (i *CngwStrategy) ToCngwStrategyOutputWithContext(ctx context.Context) CngwStrategyOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwStrategyOutput)
}

// CngwStrategyArrayInput is an input type that accepts CngwStrategyArray and CngwStrategyArrayOutput values.
// You can construct a concrete instance of `CngwStrategyArrayInput` via:
//
//	CngwStrategyArray{ CngwStrategyArgs{...} }
type CngwStrategyArrayInput interface {
	pulumi.Input

	ToCngwStrategyArrayOutput() CngwStrategyArrayOutput
	ToCngwStrategyArrayOutputWithContext(context.Context) CngwStrategyArrayOutput
}

type CngwStrategyArray []CngwStrategyInput

func (CngwStrategyArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CngwStrategy)(nil)).Elem()
}

func (i CngwStrategyArray) ToCngwStrategyArrayOutput() CngwStrategyArrayOutput {
	return i.ToCngwStrategyArrayOutputWithContext(context.Background())
}

func (i CngwStrategyArray) ToCngwStrategyArrayOutputWithContext(ctx context.Context) CngwStrategyArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwStrategyArrayOutput)
}

// CngwStrategyMapInput is an input type that accepts CngwStrategyMap and CngwStrategyMapOutput values.
// You can construct a concrete instance of `CngwStrategyMapInput` via:
//
//	CngwStrategyMap{ "key": CngwStrategyArgs{...} }
type CngwStrategyMapInput interface {
	pulumi.Input

	ToCngwStrategyMapOutput() CngwStrategyMapOutput
	ToCngwStrategyMapOutputWithContext(context.Context) CngwStrategyMapOutput
}

type CngwStrategyMap map[string]CngwStrategyInput

func (CngwStrategyMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CngwStrategy)(nil)).Elem()
}

func (i CngwStrategyMap) ToCngwStrategyMapOutput() CngwStrategyMapOutput {
	return i.ToCngwStrategyMapOutputWithContext(context.Background())
}

func (i CngwStrategyMap) ToCngwStrategyMapOutputWithContext(ctx context.Context) CngwStrategyMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwStrategyMapOutput)
}

type CngwStrategyOutput struct{ *pulumi.OutputState }

func (CngwStrategyOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CngwStrategy)(nil)).Elem()
}

func (o CngwStrategyOutput) ToCngwStrategyOutput() CngwStrategyOutput {
	return o
}

func (o CngwStrategyOutput) ToCngwStrategyOutputWithContext(ctx context.Context) CngwStrategyOutput {
	return o
}

// configuration of metric scaling.
func (o CngwStrategyOutput) Config() CngwStrategyConfigPtrOutput {
	return o.ApplyT(func(v *CngwStrategy) CngwStrategyConfigPtrOutput { return v.Config }).(CngwStrategyConfigPtrOutput)
}

// configuration of timed scaling.
func (o CngwStrategyOutput) CronConfig() CngwStrategyCronConfigPtrOutput {
	return o.ApplyT(func(v *CngwStrategy) CngwStrategyCronConfigPtrOutput { return v.CronConfig }).(CngwStrategyCronConfigPtrOutput)
}

// description information, up to 120 characters.
func (o CngwStrategyOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CngwStrategy) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// gateway ID.
func (o CngwStrategyOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwStrategy) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// strategy ID Note: This field may return null, indicating that a valid value is not available.
func (o CngwStrategyOutput) StrategyId() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwStrategy) pulumi.StringOutput { return v.StrategyId }).(pulumi.StringOutput)
}

// strategy name, up to 20 characters.
func (o CngwStrategyOutput) StrategyName() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwStrategy) pulumi.StringOutput { return v.StrategyName }).(pulumi.StringOutput)
}

type CngwStrategyArrayOutput struct{ *pulumi.OutputState }

func (CngwStrategyArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CngwStrategy)(nil)).Elem()
}

func (o CngwStrategyArrayOutput) ToCngwStrategyArrayOutput() CngwStrategyArrayOutput {
	return o
}

func (o CngwStrategyArrayOutput) ToCngwStrategyArrayOutputWithContext(ctx context.Context) CngwStrategyArrayOutput {
	return o
}

func (o CngwStrategyArrayOutput) Index(i pulumi.IntInput) CngwStrategyOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CngwStrategy {
		return vs[0].([]*CngwStrategy)[vs[1].(int)]
	}).(CngwStrategyOutput)
}

type CngwStrategyMapOutput struct{ *pulumi.OutputState }

func (CngwStrategyMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CngwStrategy)(nil)).Elem()
}

func (o CngwStrategyMapOutput) ToCngwStrategyMapOutput() CngwStrategyMapOutput {
	return o
}

func (o CngwStrategyMapOutput) ToCngwStrategyMapOutputWithContext(ctx context.Context) CngwStrategyMapOutput {
	return o
}

func (o CngwStrategyMapOutput) MapIndex(k pulumi.StringInput) CngwStrategyOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CngwStrategy {
		return vs[0].(map[string]*CngwStrategy)[vs[1].(string)]
	}).(CngwStrategyOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CngwStrategyInput)(nil)).Elem(), &CngwStrategy{})
	pulumi.RegisterInputType(reflect.TypeOf((*CngwStrategyArrayInput)(nil)).Elem(), CngwStrategyArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CngwStrategyMapInput)(nil)).Elem(), CngwStrategyMap{})
	pulumi.RegisterOutputType(CngwStrategyOutput{})
	pulumi.RegisterOutputType(CngwStrategyArrayOutput{})
	pulumi.RegisterOutputType(CngwStrategyMapOutput{})
}
