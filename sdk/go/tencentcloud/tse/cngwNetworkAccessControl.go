// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package tse

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type CngwNetworkAccessControl struct {
	pulumi.CustomResourceState

	// access control policy.
	AccessControl CngwNetworkAccessControlAccessControlPtrOutput `pulumi:"accessControl"`
	// gateway ID.
	GatewayId pulumi.StringOutput `pulumi:"gatewayId"`
	// gateway group ID.
	GroupId pulumi.StringOutput `pulumi:"groupId"`
	// network id.
	NetworkId pulumi.StringOutput `pulumi:"networkId"`
}

// NewCngwNetworkAccessControl registers a new resource with the given unique name, arguments, and options.
func NewCngwNetworkAccessControl(ctx *pulumi.Context,
	name string, args *CngwNetworkAccessControlArgs, opts ...pulumi.ResourceOption) (*CngwNetworkAccessControl, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.GatewayId == nil {
		return nil, errors.New("invalid value for required argument 'GatewayId'")
	}
	if args.GroupId == nil {
		return nil, errors.New("invalid value for required argument 'GroupId'")
	}
	if args.NetworkId == nil {
		return nil, errors.New("invalid value for required argument 'NetworkId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource CngwNetworkAccessControl
	err := ctx.RegisterResource("tencentcloud:Tse/cngwNetworkAccessControl:CngwNetworkAccessControl", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetCngwNetworkAccessControl gets an existing CngwNetworkAccessControl resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetCngwNetworkAccessControl(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *CngwNetworkAccessControlState, opts ...pulumi.ResourceOption) (*CngwNetworkAccessControl, error) {
	var resource CngwNetworkAccessControl
	err := ctx.ReadResource("tencentcloud:Tse/cngwNetworkAccessControl:CngwNetworkAccessControl", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering CngwNetworkAccessControl resources.
type cngwNetworkAccessControlState struct {
	// access control policy.
	AccessControl *CngwNetworkAccessControlAccessControl `pulumi:"accessControl"`
	// gateway ID.
	GatewayId *string `pulumi:"gatewayId"`
	// gateway group ID.
	GroupId *string `pulumi:"groupId"`
	// network id.
	NetworkId *string `pulumi:"networkId"`
}

type CngwNetworkAccessControlState struct {
	// access control policy.
	AccessControl CngwNetworkAccessControlAccessControlPtrInput
	// gateway ID.
	GatewayId pulumi.StringPtrInput
	// gateway group ID.
	GroupId pulumi.StringPtrInput
	// network id.
	NetworkId pulumi.StringPtrInput
}

func (CngwNetworkAccessControlState) ElementType() reflect.Type {
	return reflect.TypeOf((*cngwNetworkAccessControlState)(nil)).Elem()
}

type cngwNetworkAccessControlArgs struct {
	// access control policy.
	AccessControl *CngwNetworkAccessControlAccessControl `pulumi:"accessControl"`
	// gateway ID.
	GatewayId string `pulumi:"gatewayId"`
	// gateway group ID.
	GroupId string `pulumi:"groupId"`
	// network id.
	NetworkId string `pulumi:"networkId"`
}

// The set of arguments for constructing a CngwNetworkAccessControl resource.
type CngwNetworkAccessControlArgs struct {
	// access control policy.
	AccessControl CngwNetworkAccessControlAccessControlPtrInput
	// gateway ID.
	GatewayId pulumi.StringInput
	// gateway group ID.
	GroupId pulumi.StringInput
	// network id.
	NetworkId pulumi.StringInput
}

func (CngwNetworkAccessControlArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*cngwNetworkAccessControlArgs)(nil)).Elem()
}

type CngwNetworkAccessControlInput interface {
	pulumi.Input

	ToCngwNetworkAccessControlOutput() CngwNetworkAccessControlOutput
	ToCngwNetworkAccessControlOutputWithContext(ctx context.Context) CngwNetworkAccessControlOutput
}

func (*CngwNetworkAccessControl) ElementType() reflect.Type {
	return reflect.TypeOf((**CngwNetworkAccessControl)(nil)).Elem()
}

func (i *CngwNetworkAccessControl) ToCngwNetworkAccessControlOutput() CngwNetworkAccessControlOutput {
	return i.ToCngwNetworkAccessControlOutputWithContext(context.Background())
}

func (i *CngwNetworkAccessControl) ToCngwNetworkAccessControlOutputWithContext(ctx context.Context) CngwNetworkAccessControlOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwNetworkAccessControlOutput)
}

// CngwNetworkAccessControlArrayInput is an input type that accepts CngwNetworkAccessControlArray and CngwNetworkAccessControlArrayOutput values.
// You can construct a concrete instance of `CngwNetworkAccessControlArrayInput` via:
//
//	CngwNetworkAccessControlArray{ CngwNetworkAccessControlArgs{...} }
type CngwNetworkAccessControlArrayInput interface {
	pulumi.Input

	ToCngwNetworkAccessControlArrayOutput() CngwNetworkAccessControlArrayOutput
	ToCngwNetworkAccessControlArrayOutputWithContext(context.Context) CngwNetworkAccessControlArrayOutput
}

type CngwNetworkAccessControlArray []CngwNetworkAccessControlInput

func (CngwNetworkAccessControlArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CngwNetworkAccessControl)(nil)).Elem()
}

func (i CngwNetworkAccessControlArray) ToCngwNetworkAccessControlArrayOutput() CngwNetworkAccessControlArrayOutput {
	return i.ToCngwNetworkAccessControlArrayOutputWithContext(context.Background())
}

func (i CngwNetworkAccessControlArray) ToCngwNetworkAccessControlArrayOutputWithContext(ctx context.Context) CngwNetworkAccessControlArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwNetworkAccessControlArrayOutput)
}

// CngwNetworkAccessControlMapInput is an input type that accepts CngwNetworkAccessControlMap and CngwNetworkAccessControlMapOutput values.
// You can construct a concrete instance of `CngwNetworkAccessControlMapInput` via:
//
//	CngwNetworkAccessControlMap{ "key": CngwNetworkAccessControlArgs{...} }
type CngwNetworkAccessControlMapInput interface {
	pulumi.Input

	ToCngwNetworkAccessControlMapOutput() CngwNetworkAccessControlMapOutput
	ToCngwNetworkAccessControlMapOutputWithContext(context.Context) CngwNetworkAccessControlMapOutput
}

type CngwNetworkAccessControlMap map[string]CngwNetworkAccessControlInput

func (CngwNetworkAccessControlMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CngwNetworkAccessControl)(nil)).Elem()
}

func (i CngwNetworkAccessControlMap) ToCngwNetworkAccessControlMapOutput() CngwNetworkAccessControlMapOutput {
	return i.ToCngwNetworkAccessControlMapOutputWithContext(context.Background())
}

func (i CngwNetworkAccessControlMap) ToCngwNetworkAccessControlMapOutputWithContext(ctx context.Context) CngwNetworkAccessControlMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CngwNetworkAccessControlMapOutput)
}

type CngwNetworkAccessControlOutput struct{ *pulumi.OutputState }

func (CngwNetworkAccessControlOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CngwNetworkAccessControl)(nil)).Elem()
}

func (o CngwNetworkAccessControlOutput) ToCngwNetworkAccessControlOutput() CngwNetworkAccessControlOutput {
	return o
}

func (o CngwNetworkAccessControlOutput) ToCngwNetworkAccessControlOutputWithContext(ctx context.Context) CngwNetworkAccessControlOutput {
	return o
}

// access control policy.
func (o CngwNetworkAccessControlOutput) AccessControl() CngwNetworkAccessControlAccessControlPtrOutput {
	return o.ApplyT(func(v *CngwNetworkAccessControl) CngwNetworkAccessControlAccessControlPtrOutput {
		return v.AccessControl
	}).(CngwNetworkAccessControlAccessControlPtrOutput)
}

// gateway ID.
func (o CngwNetworkAccessControlOutput) GatewayId() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwNetworkAccessControl) pulumi.StringOutput { return v.GatewayId }).(pulumi.StringOutput)
}

// gateway group ID.
func (o CngwNetworkAccessControlOutput) GroupId() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwNetworkAccessControl) pulumi.StringOutput { return v.GroupId }).(pulumi.StringOutput)
}

// network id.
func (o CngwNetworkAccessControlOutput) NetworkId() pulumi.StringOutput {
	return o.ApplyT(func(v *CngwNetworkAccessControl) pulumi.StringOutput { return v.NetworkId }).(pulumi.StringOutput)
}

type CngwNetworkAccessControlArrayOutput struct{ *pulumi.OutputState }

func (CngwNetworkAccessControlArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*CngwNetworkAccessControl)(nil)).Elem()
}

func (o CngwNetworkAccessControlArrayOutput) ToCngwNetworkAccessControlArrayOutput() CngwNetworkAccessControlArrayOutput {
	return o
}

func (o CngwNetworkAccessControlArrayOutput) ToCngwNetworkAccessControlArrayOutputWithContext(ctx context.Context) CngwNetworkAccessControlArrayOutput {
	return o
}

func (o CngwNetworkAccessControlArrayOutput) Index(i pulumi.IntInput) CngwNetworkAccessControlOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *CngwNetworkAccessControl {
		return vs[0].([]*CngwNetworkAccessControl)[vs[1].(int)]
	}).(CngwNetworkAccessControlOutput)
}

type CngwNetworkAccessControlMapOutput struct{ *pulumi.OutputState }

func (CngwNetworkAccessControlMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*CngwNetworkAccessControl)(nil)).Elem()
}

func (o CngwNetworkAccessControlMapOutput) ToCngwNetworkAccessControlMapOutput() CngwNetworkAccessControlMapOutput {
	return o
}

func (o CngwNetworkAccessControlMapOutput) ToCngwNetworkAccessControlMapOutputWithContext(ctx context.Context) CngwNetworkAccessControlMapOutput {
	return o
}

func (o CngwNetworkAccessControlMapOutput) MapIndex(k pulumi.StringInput) CngwNetworkAccessControlOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *CngwNetworkAccessControl {
		return vs[0].(map[string]*CngwNetworkAccessControl)[vs[1].(string)]
	}).(CngwNetworkAccessControlOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CngwNetworkAccessControlInput)(nil)).Elem(), &CngwNetworkAccessControl{})
	pulumi.RegisterInputType(reflect.TypeOf((*CngwNetworkAccessControlArrayInput)(nil)).Elem(), CngwNetworkAccessControlArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CngwNetworkAccessControlMapInput)(nil)).Elem(), CngwNetworkAccessControlMap{})
	pulumi.RegisterOutputType(CngwNetworkAccessControlOutput{})
	pulumi.RegisterOutputType(CngwNetworkAccessControlArrayOutput{})
	pulumi.RegisterOutputType(CngwNetworkAccessControlMapOutput{})
}
