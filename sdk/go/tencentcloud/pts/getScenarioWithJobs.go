// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package pts

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetScenarioWithJobs(ctx *pulumi.Context, args *GetScenarioWithJobsArgs, opts ...pulumi.InvokeOption) (*GetScenarioWithJobsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetScenarioWithJobsResult
	err := ctx.Invoke("tencentcloud:Pts/getScenarioWithJobs:getScenarioWithJobs", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getScenarioWithJobs.
type GetScenarioWithJobsArgs struct {
	Ascend           *bool    `pulumi:"ascend"`
	IgnoreDataset    *bool    `pulumi:"ignoreDataset"`
	IgnoreScript     *bool    `pulumi:"ignoreScript"`
	OrderBy          *string  `pulumi:"orderBy"`
	Owner            *string  `pulumi:"owner"`
	ProjectIds       []string `pulumi:"projectIds"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
	ScenarioIds      []string `pulumi:"scenarioIds"`
	ScenarioName     *string  `pulumi:"scenarioName"`
	ScenarioType     *string  `pulumi:"scenarioType"`
}

// A collection of values returned by getScenarioWithJobs.
type GetScenarioWithJobsResult struct {
	Ascend *bool `pulumi:"ascend"`
	// The provider-assigned unique ID for this managed resource.
	Id                   string                                   `pulumi:"id"`
	IgnoreDataset        *bool                                    `pulumi:"ignoreDataset"`
	IgnoreScript         *bool                                    `pulumi:"ignoreScript"`
	OrderBy              *string                                  `pulumi:"orderBy"`
	Owner                *string                                  `pulumi:"owner"`
	ProjectIds           []string                                 `pulumi:"projectIds"`
	ResultOutputFile     *string                                  `pulumi:"resultOutputFile"`
	ScenarioIds          []string                                 `pulumi:"scenarioIds"`
	ScenarioName         *string                                  `pulumi:"scenarioName"`
	ScenarioType         *string                                  `pulumi:"scenarioType"`
	ScenarioWithJobsSets []GetScenarioWithJobsScenarioWithJobsSet `pulumi:"scenarioWithJobsSets"`
}

func GetScenarioWithJobsOutput(ctx *pulumi.Context, args GetScenarioWithJobsOutputArgs, opts ...pulumi.InvokeOption) GetScenarioWithJobsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetScenarioWithJobsResult, error) {
			args := v.(GetScenarioWithJobsArgs)
			r, err := GetScenarioWithJobs(ctx, &args, opts...)
			var s GetScenarioWithJobsResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetScenarioWithJobsResultOutput)
}

// A collection of arguments for invoking getScenarioWithJobs.
type GetScenarioWithJobsOutputArgs struct {
	Ascend           pulumi.BoolPtrInput     `pulumi:"ascend"`
	IgnoreDataset    pulumi.BoolPtrInput     `pulumi:"ignoreDataset"`
	IgnoreScript     pulumi.BoolPtrInput     `pulumi:"ignoreScript"`
	OrderBy          pulumi.StringPtrInput   `pulumi:"orderBy"`
	Owner            pulumi.StringPtrInput   `pulumi:"owner"`
	ProjectIds       pulumi.StringArrayInput `pulumi:"projectIds"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
	ScenarioIds      pulumi.StringArrayInput `pulumi:"scenarioIds"`
	ScenarioName     pulumi.StringPtrInput   `pulumi:"scenarioName"`
	ScenarioType     pulumi.StringPtrInput   `pulumi:"scenarioType"`
}

func (GetScenarioWithJobsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScenarioWithJobsArgs)(nil)).Elem()
}

// A collection of values returned by getScenarioWithJobs.
type GetScenarioWithJobsResultOutput struct{ *pulumi.OutputState }

func (GetScenarioWithJobsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetScenarioWithJobsResult)(nil)).Elem()
}

func (o GetScenarioWithJobsResultOutput) ToGetScenarioWithJobsResultOutput() GetScenarioWithJobsResultOutput {
	return o
}

func (o GetScenarioWithJobsResultOutput) ToGetScenarioWithJobsResultOutputWithContext(ctx context.Context) GetScenarioWithJobsResultOutput {
	return o
}

func (o GetScenarioWithJobsResultOutput) Ascend() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *bool { return v.Ascend }).(pulumi.BoolPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetScenarioWithJobsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetScenarioWithJobsResultOutput) IgnoreDataset() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *bool { return v.IgnoreDataset }).(pulumi.BoolPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) IgnoreScript() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *bool { return v.IgnoreScript }).(pulumi.BoolPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) OrderBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *string { return v.OrderBy }).(pulumi.StringPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) Owner() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *string { return v.Owner }).(pulumi.StringPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) ProjectIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) []string { return v.ProjectIds }).(pulumi.StringArrayOutput)
}

func (o GetScenarioWithJobsResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) ScenarioIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) []string { return v.ScenarioIds }).(pulumi.StringArrayOutput)
}

func (o GetScenarioWithJobsResultOutput) ScenarioName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *string { return v.ScenarioName }).(pulumi.StringPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) ScenarioType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) *string { return v.ScenarioType }).(pulumi.StringPtrOutput)
}

func (o GetScenarioWithJobsResultOutput) ScenarioWithJobsSets() GetScenarioWithJobsScenarioWithJobsSetArrayOutput {
	return o.ApplyT(func(v GetScenarioWithJobsResult) []GetScenarioWithJobsScenarioWithJobsSet {
		return v.ScenarioWithJobsSets
	}).(GetScenarioWithJobsScenarioWithJobsSetArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(GetScenarioWithJobsResultOutput{})
}
