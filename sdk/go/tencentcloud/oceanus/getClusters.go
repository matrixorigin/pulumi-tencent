// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oceanus

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetClusters(ctx *pulumi.Context, args *GetClustersArgs, opts ...pulumi.InvokeOption) (*GetClustersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetClustersResult
	err := ctx.Invoke("tencentcloud:Oceanus/getClusters:getClusters", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getClusters.
type GetClustersArgs struct {
	ClusterIds       []string            `pulumi:"clusterIds"`
	Filters          []GetClustersFilter `pulumi:"filters"`
	OrderType        *int                `pulumi:"orderType"`
	ResultOutputFile *string             `pulumi:"resultOutputFile"`
	WorkSpaceId      *string             `pulumi:"workSpaceId"`
}

// A collection of values returned by getClusters.
type GetClustersResult struct {
	ClusterIds  []string                `pulumi:"clusterIds"`
	ClusterSets []GetClustersClusterSet `pulumi:"clusterSets"`
	Filters     []GetClustersFilter     `pulumi:"filters"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	OrderType        *int    `pulumi:"orderType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
	WorkSpaceId      *string `pulumi:"workSpaceId"`
}

func GetClustersOutput(ctx *pulumi.Context, args GetClustersOutputArgs, opts ...pulumi.InvokeOption) GetClustersResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetClustersResult, error) {
			args := v.(GetClustersArgs)
			r, err := GetClusters(ctx, &args, opts...)
			var s GetClustersResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetClustersResultOutput)
}

// A collection of arguments for invoking getClusters.
type GetClustersOutputArgs struct {
	ClusterIds       pulumi.StringArrayInput     `pulumi:"clusterIds"`
	Filters          GetClustersFilterArrayInput `pulumi:"filters"`
	OrderType        pulumi.IntPtrInput          `pulumi:"orderType"`
	ResultOutputFile pulumi.StringPtrInput       `pulumi:"resultOutputFile"`
	WorkSpaceId      pulumi.StringPtrInput       `pulumi:"workSpaceId"`
}

func (GetClustersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersArgs)(nil)).Elem()
}

// A collection of values returned by getClusters.
type GetClustersResultOutput struct{ *pulumi.OutputState }

func (GetClustersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetClustersResult)(nil)).Elem()
}

func (o GetClustersResultOutput) ToGetClustersResultOutput() GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ToGetClustersResultOutputWithContext(ctx context.Context) GetClustersResultOutput {
	return o
}

func (o GetClustersResultOutput) ClusterIds() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []string { return v.ClusterIds }).(pulumi.StringArrayOutput)
}

func (o GetClustersResultOutput) ClusterSets() GetClustersClusterSetArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersClusterSet { return v.ClusterSets }).(GetClustersClusterSetArrayOutput)
}

func (o GetClustersResultOutput) Filters() GetClustersFilterArrayOutput {
	return o.ApplyT(func(v GetClustersResult) []GetClustersFilter { return v.Filters }).(GetClustersFilterArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetClustersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetClustersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetClustersResultOutput) OrderType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *int { return v.OrderType }).(pulumi.IntPtrOutput)
}

func (o GetClustersResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func (o GetClustersResultOutput) WorkSpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetClustersResult) *string { return v.WorkSpaceId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetClustersResultOutput{})
}
