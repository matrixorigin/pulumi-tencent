// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package oceanus

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type JobConfig struct {
	pulumi.CustomResourceState

	// Oceanus platform job recovery switch 1: on -1: off.
	AutoRecover pulumi.IntPtrOutput `pulumi:"autoRecover"`
	// Class log level.
	ClazzLevels JobConfigClazzLevelArrayOutput `pulumi:"clazzLevels"`
	// CLS logset ID.
	ClsLogsetId pulumi.StringPtrOutput `pulumi:"clsLogsetId"`
	// CLS log topic ID.
	ClsTopicId pulumi.StringPtrOutput `pulumi:"clsTopicId"`
	// COS storage bucket name used by the job.
	CosBucket pulumi.StringOutput `pulumi:"cosBucket"`
	// Job default parallelism.
	DefaultParallelism pulumi.IntPtrOutput `pulumi:"defaultParallelism"`
	// Main class.
	EntrypointClass pulumi.StringPtrOutput `pulumi:"entrypointClass"`
	// Expert mode configuration.
	ExpertModeConfiguration JobConfigExpertModeConfigurationPtrOutput `pulumi:"expertModeConfiguration"`
	// Whether to enable expert mode.
	ExpertModeOn pulumi.BoolPtrOutput `pulumi:"expertModeOn"`
	// Job ID.
	JobId pulumi.StringOutput `pulumi:"jobId"`
	// JobManager specification.
	JobManagerSpec pulumi.Float64PtrOutput `pulumi:"jobManagerSpec"`
	// Whether to collect job logs.
	LogCollect pulumi.BoolPtrOutput `pulumi:"logCollect"`
	// Log collection type 2:CLS; 3:COS.
	LogCollectType pulumi.IntPtrOutput `pulumi:"logCollectType"`
	// Log level.
	LogLevel pulumi.StringPtrOutput `pulumi:"logLevel"`
	// Main class parameters.
	ProgramArgs pulumi.StringPtrOutput `pulumi:"programArgs"`
	// System parameters.
	Properties JobConfigPropertyArrayOutput `pulumi:"properties"`
	// Python version used by the pyflink job at runtime.
	PythonVersion pulumi.StringPtrOutput `pulumi:"pythonVersion"`
	// Remarks.
	Remark pulumi.StringPtrOutput `pulumi:"remark"`
	// Resource reference array.
	ResourceRefs JobConfigResourceRefArrayOutput `pulumi:"resourceRefs"`
	// TaskManager specification.
	TaskManagerSpec pulumi.Float64PtrOutput `pulumi:"taskManagerSpec"`
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrOutput `pulumi:"workSpaceId"`
}

// NewJobConfig registers a new resource with the given unique name, arguments, and options.
func NewJobConfig(ctx *pulumi.Context,
	name string, args *JobConfigArgs, opts ...pulumi.ResourceOption) (*JobConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.JobId == nil {
		return nil, errors.New("invalid value for required argument 'JobId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource JobConfig
	err := ctx.RegisterResource("tencentcloud:Oceanus/jobConfig:JobConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetJobConfig gets an existing JobConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetJobConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *JobConfigState, opts ...pulumi.ResourceOption) (*JobConfig, error) {
	var resource JobConfig
	err := ctx.ReadResource("tencentcloud:Oceanus/jobConfig:JobConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering JobConfig resources.
type jobConfigState struct {
	// Oceanus platform job recovery switch 1: on -1: off.
	AutoRecover *int `pulumi:"autoRecover"`
	// Class log level.
	ClazzLevels []JobConfigClazzLevel `pulumi:"clazzLevels"`
	// CLS logset ID.
	ClsLogsetId *string `pulumi:"clsLogsetId"`
	// CLS log topic ID.
	ClsTopicId *string `pulumi:"clsTopicId"`
	// COS storage bucket name used by the job.
	CosBucket *string `pulumi:"cosBucket"`
	// Job default parallelism.
	DefaultParallelism *int `pulumi:"defaultParallelism"`
	// Main class.
	EntrypointClass *string `pulumi:"entrypointClass"`
	// Expert mode configuration.
	ExpertModeConfiguration *JobConfigExpertModeConfiguration `pulumi:"expertModeConfiguration"`
	// Whether to enable expert mode.
	ExpertModeOn *bool `pulumi:"expertModeOn"`
	// Job ID.
	JobId *string `pulumi:"jobId"`
	// JobManager specification.
	JobManagerSpec *float64 `pulumi:"jobManagerSpec"`
	// Whether to collect job logs.
	LogCollect *bool `pulumi:"logCollect"`
	// Log collection type 2:CLS; 3:COS.
	LogCollectType *int `pulumi:"logCollectType"`
	// Log level.
	LogLevel *string `pulumi:"logLevel"`
	// Main class parameters.
	ProgramArgs *string `pulumi:"programArgs"`
	// System parameters.
	Properties []JobConfigProperty `pulumi:"properties"`
	// Python version used by the pyflink job at runtime.
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remarks.
	Remark *string `pulumi:"remark"`
	// Resource reference array.
	ResourceRefs []JobConfigResourceRef `pulumi:"resourceRefs"`
	// TaskManager specification.
	TaskManagerSpec *float64 `pulumi:"taskManagerSpec"`
	// Workspace SerialId.
	WorkSpaceId *string `pulumi:"workSpaceId"`
}

type JobConfigState struct {
	// Oceanus platform job recovery switch 1: on -1: off.
	AutoRecover pulumi.IntPtrInput
	// Class log level.
	ClazzLevels JobConfigClazzLevelArrayInput
	// CLS logset ID.
	ClsLogsetId pulumi.StringPtrInput
	// CLS log topic ID.
	ClsTopicId pulumi.StringPtrInput
	// COS storage bucket name used by the job.
	CosBucket pulumi.StringPtrInput
	// Job default parallelism.
	DefaultParallelism pulumi.IntPtrInput
	// Main class.
	EntrypointClass pulumi.StringPtrInput
	// Expert mode configuration.
	ExpertModeConfiguration JobConfigExpertModeConfigurationPtrInput
	// Whether to enable expert mode.
	ExpertModeOn pulumi.BoolPtrInput
	// Job ID.
	JobId pulumi.StringPtrInput
	// JobManager specification.
	JobManagerSpec pulumi.Float64PtrInput
	// Whether to collect job logs.
	LogCollect pulumi.BoolPtrInput
	// Log collection type 2:CLS; 3:COS.
	LogCollectType pulumi.IntPtrInput
	// Log level.
	LogLevel pulumi.StringPtrInput
	// Main class parameters.
	ProgramArgs pulumi.StringPtrInput
	// System parameters.
	Properties JobConfigPropertyArrayInput
	// Python version used by the pyflink job at runtime.
	PythonVersion pulumi.StringPtrInput
	// Remarks.
	Remark pulumi.StringPtrInput
	// Resource reference array.
	ResourceRefs JobConfigResourceRefArrayInput
	// TaskManager specification.
	TaskManagerSpec pulumi.Float64PtrInput
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrInput
}

func (JobConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*jobConfigState)(nil)).Elem()
}

type jobConfigArgs struct {
	// Oceanus platform job recovery switch 1: on -1: off.
	AutoRecover *int `pulumi:"autoRecover"`
	// Class log level.
	ClazzLevels []JobConfigClazzLevel `pulumi:"clazzLevels"`
	// CLS logset ID.
	ClsLogsetId *string `pulumi:"clsLogsetId"`
	// CLS log topic ID.
	ClsTopicId *string `pulumi:"clsTopicId"`
	// COS storage bucket name used by the job.
	CosBucket *string `pulumi:"cosBucket"`
	// Job default parallelism.
	DefaultParallelism *int `pulumi:"defaultParallelism"`
	// Main class.
	EntrypointClass *string `pulumi:"entrypointClass"`
	// Expert mode configuration.
	ExpertModeConfiguration *JobConfigExpertModeConfiguration `pulumi:"expertModeConfiguration"`
	// Whether to enable expert mode.
	ExpertModeOn *bool `pulumi:"expertModeOn"`
	// Job ID.
	JobId string `pulumi:"jobId"`
	// JobManager specification.
	JobManagerSpec *float64 `pulumi:"jobManagerSpec"`
	// Whether to collect job logs.
	LogCollect *bool `pulumi:"logCollect"`
	// Log collection type 2:CLS; 3:COS.
	LogCollectType *int `pulumi:"logCollectType"`
	// Log level.
	LogLevel *string `pulumi:"logLevel"`
	// Main class parameters.
	ProgramArgs *string `pulumi:"programArgs"`
	// System parameters.
	Properties []JobConfigProperty `pulumi:"properties"`
	// Python version used by the pyflink job at runtime.
	PythonVersion *string `pulumi:"pythonVersion"`
	// Remarks.
	Remark *string `pulumi:"remark"`
	// Resource reference array.
	ResourceRefs []JobConfigResourceRef `pulumi:"resourceRefs"`
	// TaskManager specification.
	TaskManagerSpec *float64 `pulumi:"taskManagerSpec"`
	// Workspace SerialId.
	WorkSpaceId *string `pulumi:"workSpaceId"`
}

// The set of arguments for constructing a JobConfig resource.
type JobConfigArgs struct {
	// Oceanus platform job recovery switch 1: on -1: off.
	AutoRecover pulumi.IntPtrInput
	// Class log level.
	ClazzLevels JobConfigClazzLevelArrayInput
	// CLS logset ID.
	ClsLogsetId pulumi.StringPtrInput
	// CLS log topic ID.
	ClsTopicId pulumi.StringPtrInput
	// COS storage bucket name used by the job.
	CosBucket pulumi.StringPtrInput
	// Job default parallelism.
	DefaultParallelism pulumi.IntPtrInput
	// Main class.
	EntrypointClass pulumi.StringPtrInput
	// Expert mode configuration.
	ExpertModeConfiguration JobConfigExpertModeConfigurationPtrInput
	// Whether to enable expert mode.
	ExpertModeOn pulumi.BoolPtrInput
	// Job ID.
	JobId pulumi.StringInput
	// JobManager specification.
	JobManagerSpec pulumi.Float64PtrInput
	// Whether to collect job logs.
	LogCollect pulumi.BoolPtrInput
	// Log collection type 2:CLS; 3:COS.
	LogCollectType pulumi.IntPtrInput
	// Log level.
	LogLevel pulumi.StringPtrInput
	// Main class parameters.
	ProgramArgs pulumi.StringPtrInput
	// System parameters.
	Properties JobConfigPropertyArrayInput
	// Python version used by the pyflink job at runtime.
	PythonVersion pulumi.StringPtrInput
	// Remarks.
	Remark pulumi.StringPtrInput
	// Resource reference array.
	ResourceRefs JobConfigResourceRefArrayInput
	// TaskManager specification.
	TaskManagerSpec pulumi.Float64PtrInput
	// Workspace SerialId.
	WorkSpaceId pulumi.StringPtrInput
}

func (JobConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*jobConfigArgs)(nil)).Elem()
}

type JobConfigInput interface {
	pulumi.Input

	ToJobConfigOutput() JobConfigOutput
	ToJobConfigOutputWithContext(ctx context.Context) JobConfigOutput
}

func (*JobConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**JobConfig)(nil)).Elem()
}

func (i *JobConfig) ToJobConfigOutput() JobConfigOutput {
	return i.ToJobConfigOutputWithContext(context.Background())
}

func (i *JobConfig) ToJobConfigOutputWithContext(ctx context.Context) JobConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobConfigOutput)
}

// JobConfigArrayInput is an input type that accepts JobConfigArray and JobConfigArrayOutput values.
// You can construct a concrete instance of `JobConfigArrayInput` via:
//
//	JobConfigArray{ JobConfigArgs{...} }
type JobConfigArrayInput interface {
	pulumi.Input

	ToJobConfigArrayOutput() JobConfigArrayOutput
	ToJobConfigArrayOutputWithContext(context.Context) JobConfigArrayOutput
}

type JobConfigArray []JobConfigInput

func (JobConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobConfig)(nil)).Elem()
}

func (i JobConfigArray) ToJobConfigArrayOutput() JobConfigArrayOutput {
	return i.ToJobConfigArrayOutputWithContext(context.Background())
}

func (i JobConfigArray) ToJobConfigArrayOutputWithContext(ctx context.Context) JobConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobConfigArrayOutput)
}

// JobConfigMapInput is an input type that accepts JobConfigMap and JobConfigMapOutput values.
// You can construct a concrete instance of `JobConfigMapInput` via:
//
//	JobConfigMap{ "key": JobConfigArgs{...} }
type JobConfigMapInput interface {
	pulumi.Input

	ToJobConfigMapOutput() JobConfigMapOutput
	ToJobConfigMapOutputWithContext(context.Context) JobConfigMapOutput
}

type JobConfigMap map[string]JobConfigInput

func (JobConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobConfig)(nil)).Elem()
}

func (i JobConfigMap) ToJobConfigMapOutput() JobConfigMapOutput {
	return i.ToJobConfigMapOutputWithContext(context.Background())
}

func (i JobConfigMap) ToJobConfigMapOutputWithContext(ctx context.Context) JobConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JobConfigMapOutput)
}

type JobConfigOutput struct{ *pulumi.OutputState }

func (JobConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JobConfig)(nil)).Elem()
}

func (o JobConfigOutput) ToJobConfigOutput() JobConfigOutput {
	return o
}

func (o JobConfigOutput) ToJobConfigOutputWithContext(ctx context.Context) JobConfigOutput {
	return o
}

// Oceanus platform job recovery switch 1: on -1: off.
func (o JobConfigOutput) AutoRecover() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.IntPtrOutput { return v.AutoRecover }).(pulumi.IntPtrOutput)
}

// Class log level.
func (o JobConfigOutput) ClazzLevels() JobConfigClazzLevelArrayOutput {
	return o.ApplyT(func(v *JobConfig) JobConfigClazzLevelArrayOutput { return v.ClazzLevels }).(JobConfigClazzLevelArrayOutput)
}

// CLS logset ID.
func (o JobConfigOutput) ClsLogsetId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.ClsLogsetId }).(pulumi.StringPtrOutput)
}

// CLS log topic ID.
func (o JobConfigOutput) ClsTopicId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.ClsTopicId }).(pulumi.StringPtrOutput)
}

// COS storage bucket name used by the job.
func (o JobConfigOutput) CosBucket() pulumi.StringOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringOutput { return v.CosBucket }).(pulumi.StringOutput)
}

// Job default parallelism.
func (o JobConfigOutput) DefaultParallelism() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.IntPtrOutput { return v.DefaultParallelism }).(pulumi.IntPtrOutput)
}

// Main class.
func (o JobConfigOutput) EntrypointClass() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.EntrypointClass }).(pulumi.StringPtrOutput)
}

// Expert mode configuration.
func (o JobConfigOutput) ExpertModeConfiguration() JobConfigExpertModeConfigurationPtrOutput {
	return o.ApplyT(func(v *JobConfig) JobConfigExpertModeConfigurationPtrOutput { return v.ExpertModeConfiguration }).(JobConfigExpertModeConfigurationPtrOutput)
}

// Whether to enable expert mode.
func (o JobConfigOutput) ExpertModeOn() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.BoolPtrOutput { return v.ExpertModeOn }).(pulumi.BoolPtrOutput)
}

// Job ID.
func (o JobConfigOutput) JobId() pulumi.StringOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringOutput { return v.JobId }).(pulumi.StringOutput)
}

// JobManager specification.
func (o JobConfigOutput) JobManagerSpec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.Float64PtrOutput { return v.JobManagerSpec }).(pulumi.Float64PtrOutput)
}

// Whether to collect job logs.
func (o JobConfigOutput) LogCollect() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.BoolPtrOutput { return v.LogCollect }).(pulumi.BoolPtrOutput)
}

// Log collection type 2:CLS; 3:COS.
func (o JobConfigOutput) LogCollectType() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.IntPtrOutput { return v.LogCollectType }).(pulumi.IntPtrOutput)
}

// Log level.
func (o JobConfigOutput) LogLevel() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.LogLevel }).(pulumi.StringPtrOutput)
}

// Main class parameters.
func (o JobConfigOutput) ProgramArgs() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.ProgramArgs }).(pulumi.StringPtrOutput)
}

// System parameters.
func (o JobConfigOutput) Properties() JobConfigPropertyArrayOutput {
	return o.ApplyT(func(v *JobConfig) JobConfigPropertyArrayOutput { return v.Properties }).(JobConfigPropertyArrayOutput)
}

// Python version used by the pyflink job at runtime.
func (o JobConfigOutput) PythonVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.PythonVersion }).(pulumi.StringPtrOutput)
}

// Remarks.
func (o JobConfigOutput) Remark() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.Remark }).(pulumi.StringPtrOutput)
}

// Resource reference array.
func (o JobConfigOutput) ResourceRefs() JobConfigResourceRefArrayOutput {
	return o.ApplyT(func(v *JobConfig) JobConfigResourceRefArrayOutput { return v.ResourceRefs }).(JobConfigResourceRefArrayOutput)
}

// TaskManager specification.
func (o JobConfigOutput) TaskManagerSpec() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.Float64PtrOutput { return v.TaskManagerSpec }).(pulumi.Float64PtrOutput)
}

// Workspace SerialId.
func (o JobConfigOutput) WorkSpaceId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JobConfig) pulumi.StringPtrOutput { return v.WorkSpaceId }).(pulumi.StringPtrOutput)
}

type JobConfigArrayOutput struct{ *pulumi.OutputState }

func (JobConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*JobConfig)(nil)).Elem()
}

func (o JobConfigArrayOutput) ToJobConfigArrayOutput() JobConfigArrayOutput {
	return o
}

func (o JobConfigArrayOutput) ToJobConfigArrayOutputWithContext(ctx context.Context) JobConfigArrayOutput {
	return o
}

func (o JobConfigArrayOutput) Index(i pulumi.IntInput) JobConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *JobConfig {
		return vs[0].([]*JobConfig)[vs[1].(int)]
	}).(JobConfigOutput)
}

type JobConfigMapOutput struct{ *pulumi.OutputState }

func (JobConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*JobConfig)(nil)).Elem()
}

func (o JobConfigMapOutput) ToJobConfigMapOutput() JobConfigMapOutput {
	return o
}

func (o JobConfigMapOutput) ToJobConfigMapOutputWithContext(ctx context.Context) JobConfigMapOutput {
	return o
}

func (o JobConfigMapOutput) MapIndex(k pulumi.StringInput) JobConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *JobConfig {
		return vs[0].(map[string]*JobConfig)[vs[1].(string)]
	}).(JobConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*JobConfigInput)(nil)).Elem(), &JobConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobConfigArrayInput)(nil)).Elem(), JobConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JobConfigMapInput)(nil)).Elem(), JobConfigMap{})
	pulumi.RegisterOutputType(JobConfigOutput{})
	pulumi.RegisterOutputType(JobConfigArrayOutput{})
	pulumi.RegisterOutputType(JobConfigMapOutput{})
}
