// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package monitor

import (
	"context"
	"reflect"

	"errors"
	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type GrafanaWhitelistConfig struct {
	pulumi.CustomResourceState

	// Grafana instance ID.
	InstanceId pulumi.StringOutput `pulumi:"instanceId"`
	// The addresses in the whitelist.
	Whitelists pulumi.StringArrayOutput `pulumi:"whitelists"`
}

// NewGrafanaWhitelistConfig registers a new resource with the given unique name, arguments, and options.
func NewGrafanaWhitelistConfig(ctx *pulumi.Context,
	name string, args *GrafanaWhitelistConfigArgs, opts ...pulumi.ResourceOption) (*GrafanaWhitelistConfig, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.InstanceId == nil {
		return nil, errors.New("invalid value for required argument 'InstanceId'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource GrafanaWhitelistConfig
	err := ctx.RegisterResource("tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetGrafanaWhitelistConfig gets an existing GrafanaWhitelistConfig resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetGrafanaWhitelistConfig(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *GrafanaWhitelistConfigState, opts ...pulumi.ResourceOption) (*GrafanaWhitelistConfig, error) {
	var resource GrafanaWhitelistConfig
	err := ctx.ReadResource("tencentcloud:Monitor/grafanaWhitelistConfig:GrafanaWhitelistConfig", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering GrafanaWhitelistConfig resources.
type grafanaWhitelistConfigState struct {
	// Grafana instance ID.
	InstanceId *string `pulumi:"instanceId"`
	// The addresses in the whitelist.
	Whitelists []string `pulumi:"whitelists"`
}

type GrafanaWhitelistConfigState struct {
	// Grafana instance ID.
	InstanceId pulumi.StringPtrInput
	// The addresses in the whitelist.
	Whitelists pulumi.StringArrayInput
}

func (GrafanaWhitelistConfigState) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaWhitelistConfigState)(nil)).Elem()
}

type grafanaWhitelistConfigArgs struct {
	// Grafana instance ID.
	InstanceId string `pulumi:"instanceId"`
	// The addresses in the whitelist.
	Whitelists []string `pulumi:"whitelists"`
}

// The set of arguments for constructing a GrafanaWhitelistConfig resource.
type GrafanaWhitelistConfigArgs struct {
	// Grafana instance ID.
	InstanceId pulumi.StringInput
	// The addresses in the whitelist.
	Whitelists pulumi.StringArrayInput
}

func (GrafanaWhitelistConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*grafanaWhitelistConfigArgs)(nil)).Elem()
}

type GrafanaWhitelistConfigInput interface {
	pulumi.Input

	ToGrafanaWhitelistConfigOutput() GrafanaWhitelistConfigOutput
	ToGrafanaWhitelistConfigOutputWithContext(ctx context.Context) GrafanaWhitelistConfigOutput
}

func (*GrafanaWhitelistConfig) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaWhitelistConfig)(nil)).Elem()
}

func (i *GrafanaWhitelistConfig) ToGrafanaWhitelistConfigOutput() GrafanaWhitelistConfigOutput {
	return i.ToGrafanaWhitelistConfigOutputWithContext(context.Background())
}

func (i *GrafanaWhitelistConfig) ToGrafanaWhitelistConfigOutputWithContext(ctx context.Context) GrafanaWhitelistConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaWhitelistConfigOutput)
}

// GrafanaWhitelistConfigArrayInput is an input type that accepts GrafanaWhitelistConfigArray and GrafanaWhitelistConfigArrayOutput values.
// You can construct a concrete instance of `GrafanaWhitelistConfigArrayInput` via:
//
//	GrafanaWhitelistConfigArray{ GrafanaWhitelistConfigArgs{...} }
type GrafanaWhitelistConfigArrayInput interface {
	pulumi.Input

	ToGrafanaWhitelistConfigArrayOutput() GrafanaWhitelistConfigArrayOutput
	ToGrafanaWhitelistConfigArrayOutputWithContext(context.Context) GrafanaWhitelistConfigArrayOutput
}

type GrafanaWhitelistConfigArray []GrafanaWhitelistConfigInput

func (GrafanaWhitelistConfigArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaWhitelistConfig)(nil)).Elem()
}

func (i GrafanaWhitelistConfigArray) ToGrafanaWhitelistConfigArrayOutput() GrafanaWhitelistConfigArrayOutput {
	return i.ToGrafanaWhitelistConfigArrayOutputWithContext(context.Background())
}

func (i GrafanaWhitelistConfigArray) ToGrafanaWhitelistConfigArrayOutputWithContext(ctx context.Context) GrafanaWhitelistConfigArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaWhitelistConfigArrayOutput)
}

// GrafanaWhitelistConfigMapInput is an input type that accepts GrafanaWhitelistConfigMap and GrafanaWhitelistConfigMapOutput values.
// You can construct a concrete instance of `GrafanaWhitelistConfigMapInput` via:
//
//	GrafanaWhitelistConfigMap{ "key": GrafanaWhitelistConfigArgs{...} }
type GrafanaWhitelistConfigMapInput interface {
	pulumi.Input

	ToGrafanaWhitelistConfigMapOutput() GrafanaWhitelistConfigMapOutput
	ToGrafanaWhitelistConfigMapOutputWithContext(context.Context) GrafanaWhitelistConfigMapOutput
}

type GrafanaWhitelistConfigMap map[string]GrafanaWhitelistConfigInput

func (GrafanaWhitelistConfigMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaWhitelistConfig)(nil)).Elem()
}

func (i GrafanaWhitelistConfigMap) ToGrafanaWhitelistConfigMapOutput() GrafanaWhitelistConfigMapOutput {
	return i.ToGrafanaWhitelistConfigMapOutputWithContext(context.Background())
}

func (i GrafanaWhitelistConfigMap) ToGrafanaWhitelistConfigMapOutputWithContext(ctx context.Context) GrafanaWhitelistConfigMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(GrafanaWhitelistConfigMapOutput)
}

type GrafanaWhitelistConfigOutput struct{ *pulumi.OutputState }

func (GrafanaWhitelistConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**GrafanaWhitelistConfig)(nil)).Elem()
}

func (o GrafanaWhitelistConfigOutput) ToGrafanaWhitelistConfigOutput() GrafanaWhitelistConfigOutput {
	return o
}

func (o GrafanaWhitelistConfigOutput) ToGrafanaWhitelistConfigOutputWithContext(ctx context.Context) GrafanaWhitelistConfigOutput {
	return o
}

// Grafana instance ID.
func (o GrafanaWhitelistConfigOutput) InstanceId() pulumi.StringOutput {
	return o.ApplyT(func(v *GrafanaWhitelistConfig) pulumi.StringOutput { return v.InstanceId }).(pulumi.StringOutput)
}

// The addresses in the whitelist.
func (o GrafanaWhitelistConfigOutput) Whitelists() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *GrafanaWhitelistConfig) pulumi.StringArrayOutput { return v.Whitelists }).(pulumi.StringArrayOutput)
}

type GrafanaWhitelistConfigArrayOutput struct{ *pulumi.OutputState }

func (GrafanaWhitelistConfigArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*GrafanaWhitelistConfig)(nil)).Elem()
}

func (o GrafanaWhitelistConfigArrayOutput) ToGrafanaWhitelistConfigArrayOutput() GrafanaWhitelistConfigArrayOutput {
	return o
}

func (o GrafanaWhitelistConfigArrayOutput) ToGrafanaWhitelistConfigArrayOutputWithContext(ctx context.Context) GrafanaWhitelistConfigArrayOutput {
	return o
}

func (o GrafanaWhitelistConfigArrayOutput) Index(i pulumi.IntInput) GrafanaWhitelistConfigOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *GrafanaWhitelistConfig {
		return vs[0].([]*GrafanaWhitelistConfig)[vs[1].(int)]
	}).(GrafanaWhitelistConfigOutput)
}

type GrafanaWhitelistConfigMapOutput struct{ *pulumi.OutputState }

func (GrafanaWhitelistConfigMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*GrafanaWhitelistConfig)(nil)).Elem()
}

func (o GrafanaWhitelistConfigMapOutput) ToGrafanaWhitelistConfigMapOutput() GrafanaWhitelistConfigMapOutput {
	return o
}

func (o GrafanaWhitelistConfigMapOutput) ToGrafanaWhitelistConfigMapOutputWithContext(ctx context.Context) GrafanaWhitelistConfigMapOutput {
	return o
}

func (o GrafanaWhitelistConfigMapOutput) MapIndex(k pulumi.StringInput) GrafanaWhitelistConfigOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *GrafanaWhitelistConfig {
		return vs[0].(map[string]*GrafanaWhitelistConfig)[vs[1].(string)]
	}).(GrafanaWhitelistConfigOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaWhitelistConfigInput)(nil)).Elem(), &GrafanaWhitelistConfig{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaWhitelistConfigArrayInput)(nil)).Elem(), GrafanaWhitelistConfigArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*GrafanaWhitelistConfigMapInput)(nil)).Elem(), GrafanaWhitelistConfigMap{})
	pulumi.RegisterOutputType(GrafanaWhitelistConfigOutput{})
	pulumi.RegisterOutputType(GrafanaWhitelistConfigArrayOutput{})
	pulumi.RegisterOutputType(GrafanaWhitelistConfigMapOutput{})
}
