// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package cat

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetMetricData(ctx *pulumi.Context, args *GetMetricDataArgs, opts ...pulumi.InvokeOption) (*GetMetricDataResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetMetricDataResult
	err := ctx.Invoke("tencentcloud:Cat/getMetricData:getMetricData", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getMetricData.
type GetMetricDataArgs struct {
	AnalyzeTaskType  string   `pulumi:"analyzeTaskType"`
	Field            string   `pulumi:"field"`
	Filter           *string  `pulumi:"filter"`
	Filters          []string `pulumi:"filters"`
	GroupBy          *string  `pulumi:"groupBy"`
	MetricType       string   `pulumi:"metricType"`
	ResultOutputFile *string  `pulumi:"resultOutputFile"`
}

// A collection of values returned by getMetricData.
type GetMetricDataResult struct {
	AnalyzeTaskType string   `pulumi:"analyzeTaskType"`
	Field           string   `pulumi:"field"`
	Filter          *string  `pulumi:"filter"`
	Filters         []string `pulumi:"filters"`
	GroupBy         *string  `pulumi:"groupBy"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	MetricSet        string  `pulumi:"metricSet"`
	MetricType       string  `pulumi:"metricType"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetMetricDataOutput(ctx *pulumi.Context, args GetMetricDataOutputArgs, opts ...pulumi.InvokeOption) GetMetricDataResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetMetricDataResult, error) {
			args := v.(GetMetricDataArgs)
			r, err := GetMetricData(ctx, &args, opts...)
			var s GetMetricDataResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetMetricDataResultOutput)
}

// A collection of arguments for invoking getMetricData.
type GetMetricDataOutputArgs struct {
	AnalyzeTaskType  pulumi.StringInput      `pulumi:"analyzeTaskType"`
	Field            pulumi.StringInput      `pulumi:"field"`
	Filter           pulumi.StringPtrInput   `pulumi:"filter"`
	Filters          pulumi.StringArrayInput `pulumi:"filters"`
	GroupBy          pulumi.StringPtrInput   `pulumi:"groupBy"`
	MetricType       pulumi.StringInput      `pulumi:"metricType"`
	ResultOutputFile pulumi.StringPtrInput   `pulumi:"resultOutputFile"`
}

func (GetMetricDataOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricDataArgs)(nil)).Elem()
}

// A collection of values returned by getMetricData.
type GetMetricDataResultOutput struct{ *pulumi.OutputState }

func (GetMetricDataResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetMetricDataResult)(nil)).Elem()
}

func (o GetMetricDataResultOutput) ToGetMetricDataResultOutput() GetMetricDataResultOutput {
	return o
}

func (o GetMetricDataResultOutput) ToGetMetricDataResultOutputWithContext(ctx context.Context) GetMetricDataResultOutput {
	return o
}

func (o GetMetricDataResultOutput) AnalyzeTaskType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricDataResult) string { return v.AnalyzeTaskType }).(pulumi.StringOutput)
}

func (o GetMetricDataResultOutput) Field() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricDataResult) string { return v.Field }).(pulumi.StringOutput)
}

func (o GetMetricDataResultOutput) Filter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricDataResult) *string { return v.Filter }).(pulumi.StringPtrOutput)
}

func (o GetMetricDataResultOutput) Filters() pulumi.StringArrayOutput {
	return o.ApplyT(func(v GetMetricDataResult) []string { return v.Filters }).(pulumi.StringArrayOutput)
}

func (o GetMetricDataResultOutput) GroupBy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricDataResult) *string { return v.GroupBy }).(pulumi.StringPtrOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetMetricDataResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricDataResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetMetricDataResultOutput) MetricSet() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricDataResult) string { return v.MetricSet }).(pulumi.StringOutput)
}

func (o GetMetricDataResultOutput) MetricType() pulumi.StringOutput {
	return o.ApplyT(func(v GetMetricDataResult) string { return v.MetricType }).(pulumi.StringOutput)
}

func (o GetMetricDataResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetMetricDataResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetMetricDataResultOutput{})
}
