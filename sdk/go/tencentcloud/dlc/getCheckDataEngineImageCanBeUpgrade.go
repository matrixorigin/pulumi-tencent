// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package dlc

import (
	"context"
	"reflect"

	"github.com/matrixorigin/pulumi-tencentcloud/sdk/go/tencentcloud/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func GetCheckDataEngineImageCanBeUpgrade(ctx *pulumi.Context, args *GetCheckDataEngineImageCanBeUpgradeArgs, opts ...pulumi.InvokeOption) (*GetCheckDataEngineImageCanBeUpgradeResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetCheckDataEngineImageCanBeUpgradeResult
	err := ctx.Invoke("tencentcloud:Dlc/getCheckDataEngineImageCanBeUpgrade:getCheckDataEngineImageCanBeUpgrade", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getCheckDataEngineImageCanBeUpgrade.
type GetCheckDataEngineImageCanBeUpgradeArgs struct {
	DataEngineId     string  `pulumi:"dataEngineId"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

// A collection of values returned by getCheckDataEngineImageCanBeUpgrade.
type GetCheckDataEngineImageCanBeUpgradeResult struct {
	ChildImageVersionId string `pulumi:"childImageVersionId"`
	DataEngineId        string `pulumi:"dataEngineId"`
	// The provider-assigned unique ID for this managed resource.
	Id               string  `pulumi:"id"`
	IsUpgrade        bool    `pulumi:"isUpgrade"`
	ResultOutputFile *string `pulumi:"resultOutputFile"`
}

func GetCheckDataEngineImageCanBeUpgradeOutput(ctx *pulumi.Context, args GetCheckDataEngineImageCanBeUpgradeOutputArgs, opts ...pulumi.InvokeOption) GetCheckDataEngineImageCanBeUpgradeResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetCheckDataEngineImageCanBeUpgradeResult, error) {
			args := v.(GetCheckDataEngineImageCanBeUpgradeArgs)
			r, err := GetCheckDataEngineImageCanBeUpgrade(ctx, &args, opts...)
			var s GetCheckDataEngineImageCanBeUpgradeResult
			if r != nil {
				s = *r
			}
			return s, err
		}).(GetCheckDataEngineImageCanBeUpgradeResultOutput)
}

// A collection of arguments for invoking getCheckDataEngineImageCanBeUpgrade.
type GetCheckDataEngineImageCanBeUpgradeOutputArgs struct {
	DataEngineId     pulumi.StringInput    `pulumi:"dataEngineId"`
	ResultOutputFile pulumi.StringPtrInput `pulumi:"resultOutputFile"`
}

func (GetCheckDataEngineImageCanBeUpgradeOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCheckDataEngineImageCanBeUpgradeArgs)(nil)).Elem()
}

// A collection of values returned by getCheckDataEngineImageCanBeUpgrade.
type GetCheckDataEngineImageCanBeUpgradeResultOutput struct{ *pulumi.OutputState }

func (GetCheckDataEngineImageCanBeUpgradeResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetCheckDataEngineImageCanBeUpgradeResult)(nil)).Elem()
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) ToGetCheckDataEngineImageCanBeUpgradeResultOutput() GetCheckDataEngineImageCanBeUpgradeResultOutput {
	return o
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) ToGetCheckDataEngineImageCanBeUpgradeResultOutputWithContext(ctx context.Context) GetCheckDataEngineImageCanBeUpgradeResultOutput {
	return o
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) ChildImageVersionId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCheckDataEngineImageCanBeUpgradeResult) string { return v.ChildImageVersionId }).(pulumi.StringOutput)
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) DataEngineId() pulumi.StringOutput {
	return o.ApplyT(func(v GetCheckDataEngineImageCanBeUpgradeResult) string { return v.DataEngineId }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetCheckDataEngineImageCanBeUpgradeResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) IsUpgrade() pulumi.BoolOutput {
	return o.ApplyT(func(v GetCheckDataEngineImageCanBeUpgradeResult) bool { return v.IsUpgrade }).(pulumi.BoolOutput)
}

func (o GetCheckDataEngineImageCanBeUpgradeResultOutput) ResultOutputFile() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetCheckDataEngineImageCanBeUpgradeResult) *string { return v.ResultOutputFile }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetCheckDataEngineImageCanBeUpgradeResultOutput{})
}
