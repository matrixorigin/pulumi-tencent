# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = ['PublicIpv6AttachmentArgs', 'PublicIpv6Attachment']

@pulumi.input_type
class PublicIpv6AttachmentArgs:
    def __init__(__self__, *,
                 ipv6_address_id: pulumi.Input[str],
                 keep_bind_with_eni: Optional[pulumi.Input[bool]] = None,
                 network_interface_id: Optional[pulumi.Input[str]] = None,
                 private_ipv6_address: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a PublicIpv6Attachment resource.
        :param pulumi.Input[str] ipv6_address_id: Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        :param pulumi.Input[bool] keep_bind_with_eni: Whether to keep the Elastic Network Interface bound when unbinding.
        :param pulumi.Input[str] network_interface_id: Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
               InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
               console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        :param pulumi.Input[str] private_ipv6_address: The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
               that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
               the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
               specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
               Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        pulumi.set(__self__, "ipv6_address_id", ipv6_address_id)
        if keep_bind_with_eni is not None:
            pulumi.set(__self__, "keep_bind_with_eni", keep_bind_with_eni)
        if network_interface_id is not None:
            pulumi.set(__self__, "network_interface_id", network_interface_id)
        if private_ipv6_address is not None:
            pulumi.set(__self__, "private_ipv6_address", private_ipv6_address)

    @property
    @pulumi.getter(name="ipv6AddressId")
    def ipv6_address_id(self) -> pulumi.Input[str]:
        """
        Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        """
        return pulumi.get(self, "ipv6_address_id")

    @ipv6_address_id.setter
    def ipv6_address_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "ipv6_address_id", value)

    @property
    @pulumi.getter(name="keepBindWithEni")
    def keep_bind_with_eni(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to keep the Elastic Network Interface bound when unbinding.
        """
        return pulumi.get(self, "keep_bind_with_eni")

    @keep_bind_with_eni.setter
    def keep_bind_with_eni(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "keep_bind_with_eni", value)

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> Optional[pulumi.Input[str]]:
        """
        Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
        InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
        console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "network_interface_id")

    @network_interface_id.setter
    def network_interface_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_interface_id", value)

    @property
    @pulumi.getter(name="privateIpv6Address")
    def private_ipv6_address(self) -> Optional[pulumi.Input[str]]:
        """
        The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
        that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
        the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
        specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
        Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "private_ipv6_address")

    @private_ipv6_address.setter
    def private_ipv6_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_ipv6_address", value)


@pulumi.input_type
class _PublicIpv6AttachmentState:
    def __init__(__self__, *,
                 ipv6_address_id: Optional[pulumi.Input[str]] = None,
                 keep_bind_with_eni: Optional[pulumi.Input[bool]] = None,
                 network_interface_id: Optional[pulumi.Input[str]] = None,
                 private_ipv6_address: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering PublicIpv6Attachment resources.
        :param pulumi.Input[str] ipv6_address_id: Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        :param pulumi.Input[bool] keep_bind_with_eni: Whether to keep the Elastic Network Interface bound when unbinding.
        :param pulumi.Input[str] network_interface_id: Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
               InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
               console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        :param pulumi.Input[str] private_ipv6_address: The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
               that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
               the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
               specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
               Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        if ipv6_address_id is not None:
            pulumi.set(__self__, "ipv6_address_id", ipv6_address_id)
        if keep_bind_with_eni is not None:
            pulumi.set(__self__, "keep_bind_with_eni", keep_bind_with_eni)
        if network_interface_id is not None:
            pulumi.set(__self__, "network_interface_id", network_interface_id)
        if private_ipv6_address is not None:
            pulumi.set(__self__, "private_ipv6_address", private_ipv6_address)

    @property
    @pulumi.getter(name="ipv6AddressId")
    def ipv6_address_id(self) -> Optional[pulumi.Input[str]]:
        """
        Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        """
        return pulumi.get(self, "ipv6_address_id")

    @ipv6_address_id.setter
    def ipv6_address_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ipv6_address_id", value)

    @property
    @pulumi.getter(name="keepBindWithEni")
    def keep_bind_with_eni(self) -> Optional[pulumi.Input[bool]]:
        """
        Whether to keep the Elastic Network Interface bound when unbinding.
        """
        return pulumi.get(self, "keep_bind_with_eni")

    @keep_bind_with_eni.setter
    def keep_bind_with_eni(self, value: Optional[pulumi.Input[bool]]):
        pulumi.set(self, "keep_bind_with_eni", value)

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> Optional[pulumi.Input[str]]:
        """
        Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
        InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
        console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "network_interface_id")

    @network_interface_id.setter
    def network_interface_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "network_interface_id", value)

    @property
    @pulumi.getter(name="privateIpv6Address")
    def private_ipv6_address(self) -> Optional[pulumi.Input[str]]:
        """
        The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
        that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
        the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
        specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
        Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "private_ipv6_address")

    @private_ipv6_address.setter
    def private_ipv6_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "private_ipv6_address", value)


class PublicIpv6Attachment(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ipv6_address_id: Optional[pulumi.Input[str]] = None,
                 keep_bind_with_eni: Optional[pulumi.Input[bool]] = None,
                 network_interface_id: Optional[pulumi.Input[str]] = None,
                 private_ipv6_address: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Create a PublicIpv6Attachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ipv6_address_id: Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        :param pulumi.Input[bool] keep_bind_with_eni: Whether to keep the Elastic Network Interface bound when unbinding.
        :param pulumi.Input[str] network_interface_id: Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
               InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
               console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        :param pulumi.Input[str] private_ipv6_address: The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
               that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
               the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
               specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
               Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: PublicIpv6AttachmentArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Create a PublicIpv6Attachment resource with the given unique name, props, and options.
        :param str resource_name: The name of the resource.
        :param PublicIpv6AttachmentArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(PublicIpv6AttachmentArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 ipv6_address_id: Optional[pulumi.Input[str]] = None,
                 keep_bind_with_eni: Optional[pulumi.Input[bool]] = None,
                 network_interface_id: Optional[pulumi.Input[str]] = None,
                 private_ipv6_address: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = PublicIpv6AttachmentArgs.__new__(PublicIpv6AttachmentArgs)

            if ipv6_address_id is None and not opts.urn:
                raise TypeError("Missing required property 'ipv6_address_id'")
            __props__.__dict__["ipv6_address_id"] = ipv6_address_id
            __props__.__dict__["keep_bind_with_eni"] = keep_bind_with_eni
            __props__.__dict__["network_interface_id"] = network_interface_id
            __props__.__dict__["private_ipv6_address"] = private_ipv6_address
        super(PublicIpv6Attachment, __self__).__init__(
            'tencentcloud:Elastic/publicIpv6Attachment:PublicIpv6Attachment',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            ipv6_address_id: Optional[pulumi.Input[str]] = None,
            keep_bind_with_eni: Optional[pulumi.Input[bool]] = None,
            network_interface_id: Optional[pulumi.Input[str]] = None,
            private_ipv6_address: Optional[pulumi.Input[str]] = None) -> 'PublicIpv6Attachment':
        """
        Get an existing PublicIpv6Attachment resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] ipv6_address_id: Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        :param pulumi.Input[bool] keep_bind_with_eni: Whether to keep the Elastic Network Interface bound when unbinding.
        :param pulumi.Input[str] network_interface_id: Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
               InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
               console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        :param pulumi.Input[str] private_ipv6_address: The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
               that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
               the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
               specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
               Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _PublicIpv6AttachmentState.__new__(_PublicIpv6AttachmentState)

        __props__.__dict__["ipv6_address_id"] = ipv6_address_id
        __props__.__dict__["keep_bind_with_eni"] = keep_bind_with_eni
        __props__.__dict__["network_interface_id"] = network_interface_id
        __props__.__dict__["private_ipv6_address"] = private_ipv6_address
        return PublicIpv6Attachment(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="ipv6AddressId")
    def ipv6_address_id(self) -> pulumi.Output[str]:
        """
        Elastic IPv6 unique ID, EIPv6 unique ID is like eipv6-11112222.
        """
        return pulumi.get(self, "ipv6_address_id")

    @property
    @pulumi.getter(name="keepBindWithEni")
    def keep_bind_with_eni(self) -> pulumi.Output[Optional[bool]]:
        """
        Whether to keep the Elastic Network Interface bound when unbinding.
        """
        return pulumi.get(self, "keep_bind_with_eni")

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> pulumi.Output[Optional[str]]:
        """
        Elastic Network Interface ID to bind. Elastic Network Interface ID is like eni-11112222. NetworkInterfaceId and
        InstanceId cannot be specified simultaneously. The Elastic Network Interface ID can be queried by logging in to the
        console, or obtained through the networkInterfaceId in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "network_interface_id")

    @property
    @pulumi.getter(name="privateIpv6Address")
    def private_ipv6_address(self) -> pulumi.Output[Optional[str]]:
        """
        The intranet IPv6 to bind. If NetworkInterfaceId is specified, PrivateIPv6Address must also be specified, which means
        that the EIP is bound to the specified private network IP of the specified Elastic Network Interface. Also ensure that
        the specified PrivateIPv6Address is an intranet IPv6 on the specified NetworkInterfaceId. The intranet IPv6 of the
        specified Elastic Network Interface can be queried by logging in to the console, or obtained through the
        Ipv6AddressSet.Address in the return value of the DescribeNetworkInterfaces interface.
        """
        return pulumi.get(self, "private_ipv6_address")

