# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetPublicIpv6sAddressSetResult',
    'GetPublicIpv6sAddressSetEipAlgTypeResult',
    'GetPublicIpv6sAddressSetTagSetResult',
    'GetPublicIpv6sFilterResult',
]

@pulumi.output_type
class GetPublicIpv6sAddressSetResult(dict):
    def __init__(__self__, *,
                 address_id: str,
                 address_ip: str,
                 address_name: str,
                 address_status: str,
                 address_type: str,
                 anti_ddos_package_id: str,
                 bandwidth: int,
                 bandwidth_package_id: str,
                 cascade_release: bool,
                 created_time: str,
                 deadline_date: str,
                 dedicated_cluster_id: str,
                 egress: str,
                 eip_alg_type: 'outputs.GetPublicIpv6sAddressSetEipAlgTypeResult',
                 instance_id: str,
                 instance_type: str,
                 internet_charge_type: str,
                 internet_service_provider: str,
                 is_arrears: bool,
                 is_blocked: bool,
                 is_eip_direct_connection: bool,
                 local_bgp: bool,
                 network_interface_id: str,
                 private_address_ip: str,
                 renew_flag: str,
                 tag_sets: Sequence['outputs.GetPublicIpv6sAddressSetTagSetResult'],
                 un_vpc_id: str):
        pulumi.set(__self__, "address_id", address_id)
        pulumi.set(__self__, "address_ip", address_ip)
        pulumi.set(__self__, "address_name", address_name)
        pulumi.set(__self__, "address_status", address_status)
        pulumi.set(__self__, "address_type", address_type)
        pulumi.set(__self__, "anti_ddos_package_id", anti_ddos_package_id)
        pulumi.set(__self__, "bandwidth", bandwidth)
        pulumi.set(__self__, "bandwidth_package_id", bandwidth_package_id)
        pulumi.set(__self__, "cascade_release", cascade_release)
        pulumi.set(__self__, "created_time", created_time)
        pulumi.set(__self__, "deadline_date", deadline_date)
        pulumi.set(__self__, "dedicated_cluster_id", dedicated_cluster_id)
        pulumi.set(__self__, "egress", egress)
        pulumi.set(__self__, "eip_alg_type", eip_alg_type)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_type", instance_type)
        pulumi.set(__self__, "internet_charge_type", internet_charge_type)
        pulumi.set(__self__, "internet_service_provider", internet_service_provider)
        pulumi.set(__self__, "is_arrears", is_arrears)
        pulumi.set(__self__, "is_blocked", is_blocked)
        pulumi.set(__self__, "is_eip_direct_connection", is_eip_direct_connection)
        pulumi.set(__self__, "local_bgp", local_bgp)
        pulumi.set(__self__, "network_interface_id", network_interface_id)
        pulumi.set(__self__, "private_address_ip", private_address_ip)
        pulumi.set(__self__, "renew_flag", renew_flag)
        pulumi.set(__self__, "tag_sets", tag_sets)
        pulumi.set(__self__, "un_vpc_id", un_vpc_id)

    @property
    @pulumi.getter(name="addressId")
    def address_id(self) -> str:
        return pulumi.get(self, "address_id")

    @property
    @pulumi.getter(name="addressIp")
    def address_ip(self) -> str:
        return pulumi.get(self, "address_ip")

    @property
    @pulumi.getter(name="addressName")
    def address_name(self) -> str:
        return pulumi.get(self, "address_name")

    @property
    @pulumi.getter(name="addressStatus")
    def address_status(self) -> str:
        return pulumi.get(self, "address_status")

    @property
    @pulumi.getter(name="addressType")
    def address_type(self) -> str:
        return pulumi.get(self, "address_type")

    @property
    @pulumi.getter(name="antiDdosPackageId")
    def anti_ddos_package_id(self) -> str:
        return pulumi.get(self, "anti_ddos_package_id")

    @property
    @pulumi.getter
    def bandwidth(self) -> int:
        return pulumi.get(self, "bandwidth")

    @property
    @pulumi.getter(name="bandwidthPackageId")
    def bandwidth_package_id(self) -> str:
        return pulumi.get(self, "bandwidth_package_id")

    @property
    @pulumi.getter(name="cascadeRelease")
    def cascade_release(self) -> bool:
        return pulumi.get(self, "cascade_release")

    @property
    @pulumi.getter(name="createdTime")
    def created_time(self) -> str:
        return pulumi.get(self, "created_time")

    @property
    @pulumi.getter(name="deadlineDate")
    def deadline_date(self) -> str:
        return pulumi.get(self, "deadline_date")

    @property
    @pulumi.getter(name="dedicatedClusterId")
    def dedicated_cluster_id(self) -> str:
        return pulumi.get(self, "dedicated_cluster_id")

    @property
    @pulumi.getter
    def egress(self) -> str:
        return pulumi.get(self, "egress")

    @property
    @pulumi.getter(name="eipAlgType")
    def eip_alg_type(self) -> 'outputs.GetPublicIpv6sAddressSetEipAlgTypeResult':
        return pulumi.get(self, "eip_alg_type")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceType")
    def instance_type(self) -> str:
        return pulumi.get(self, "instance_type")

    @property
    @pulumi.getter(name="internetChargeType")
    def internet_charge_type(self) -> str:
        return pulumi.get(self, "internet_charge_type")

    @property
    @pulumi.getter(name="internetServiceProvider")
    def internet_service_provider(self) -> str:
        return pulumi.get(self, "internet_service_provider")

    @property
    @pulumi.getter(name="isArrears")
    def is_arrears(self) -> bool:
        return pulumi.get(self, "is_arrears")

    @property
    @pulumi.getter(name="isBlocked")
    def is_blocked(self) -> bool:
        return pulumi.get(self, "is_blocked")

    @property
    @pulumi.getter(name="isEipDirectConnection")
    def is_eip_direct_connection(self) -> bool:
        return pulumi.get(self, "is_eip_direct_connection")

    @property
    @pulumi.getter(name="localBgp")
    def local_bgp(self) -> bool:
        return pulumi.get(self, "local_bgp")

    @property
    @pulumi.getter(name="networkInterfaceId")
    def network_interface_id(self) -> str:
        return pulumi.get(self, "network_interface_id")

    @property
    @pulumi.getter(name="privateAddressIp")
    def private_address_ip(self) -> str:
        return pulumi.get(self, "private_address_ip")

    @property
    @pulumi.getter(name="renewFlag")
    def renew_flag(self) -> str:
        return pulumi.get(self, "renew_flag")

    @property
    @pulumi.getter(name="tagSets")
    def tag_sets(self) -> Sequence['outputs.GetPublicIpv6sAddressSetTagSetResult']:
        return pulumi.get(self, "tag_sets")

    @property
    @pulumi.getter(name="unVpcId")
    def un_vpc_id(self) -> str:
        return pulumi.get(self, "un_vpc_id")


@pulumi.output_type
class GetPublicIpv6sAddressSetEipAlgTypeResult(dict):
    def __init__(__self__, *,
                 ftp: bool,
                 sip: bool):
        pulumi.set(__self__, "ftp", ftp)
        pulumi.set(__self__, "sip", sip)

    @property
    @pulumi.getter
    def ftp(self) -> bool:
        return pulumi.get(self, "ftp")

    @property
    @pulumi.getter
    def sip(self) -> bool:
        return pulumi.get(self, "sip")


@pulumi.output_type
class GetPublicIpv6sAddressSetTagSetResult(dict):
    def __init__(__self__, *,
                 key: str,
                 value: Optional[str] = None):
        pulumi.set(__self__, "key", key)
        if value is not None:
            pulumi.set(__self__, "value", value)

    @property
    @pulumi.getter
    def key(self) -> str:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def value(self) -> Optional[str]:
        return pulumi.get(self, "value")


@pulumi.output_type
class GetPublicIpv6sFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str]):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")


