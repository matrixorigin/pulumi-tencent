# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetMachinesSimpleFilterResult',
    'GetMachinesSimpleMachineResult',
    'GetMachinesSimpleMachineCloudTagResult',
    'GetMachinesSimpleMachineLicenseOrderResult',
    'GetMachinesSimpleMachineRegionInfoResult',
    'GetMachinesSimpleMachineTagResult',
]

@pulumi.output_type
class GetMachinesSimpleFilterResult(dict):
    def __init__(__self__, *,
                 name: str,
                 values: Sequence[str],
                 exact_match: Optional[bool] = None):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "values", values)
        if exact_match is not None:
            pulumi.set(__self__, "exact_match", exact_match)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def values(self) -> Sequence[str]:
        return pulumi.get(self, "values")

    @property
    @pulumi.getter(name="exactMatch")
    def exact_match(self) -> Optional[bool]:
        return pulumi.get(self, "exact_match")


@pulumi.output_type
class GetMachinesSimpleMachineResult(dict):
    def __init__(__self__, *,
                 cloud_tags: Sequence['outputs.GetMachinesSimpleMachineCloudTagResult'],
                 instance_id: str,
                 instance_state: str,
                 is_pro_version: bool,
                 kernel_version: str,
                 license_orders: Sequence['outputs.GetMachinesSimpleMachineLicenseOrderResult'],
                 machine_ip: str,
                 machine_name: str,
                 machine_os: str,
                 machine_type: str,
                 machine_wan_ip: str,
                 pay_mode: str,
                 project_id: int,
                 protect_type: str,
                 quuid: str,
                 region_infos: Sequence['outputs.GetMachinesSimpleMachineRegionInfoResult'],
                 tags: Sequence['outputs.GetMachinesSimpleMachineTagResult'],
                 uuid: str):
        pulumi.set(__self__, "cloud_tags", cloud_tags)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_state", instance_state)
        pulumi.set(__self__, "is_pro_version", is_pro_version)
        pulumi.set(__self__, "kernel_version", kernel_version)
        pulumi.set(__self__, "license_orders", license_orders)
        pulumi.set(__self__, "machine_ip", machine_ip)
        pulumi.set(__self__, "machine_name", machine_name)
        pulumi.set(__self__, "machine_os", machine_os)
        pulumi.set(__self__, "machine_type", machine_type)
        pulumi.set(__self__, "machine_wan_ip", machine_wan_ip)
        pulumi.set(__self__, "pay_mode", pay_mode)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "protect_type", protect_type)
        pulumi.set(__self__, "quuid", quuid)
        pulumi.set(__self__, "region_infos", region_infos)
        pulumi.set(__self__, "tags", tags)
        pulumi.set(__self__, "uuid", uuid)

    @property
    @pulumi.getter(name="cloudTags")
    def cloud_tags(self) -> Sequence['outputs.GetMachinesSimpleMachineCloudTagResult']:
        return pulumi.get(self, "cloud_tags")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceState")
    def instance_state(self) -> str:
        return pulumi.get(self, "instance_state")

    @property
    @pulumi.getter(name="isProVersion")
    def is_pro_version(self) -> bool:
        return pulumi.get(self, "is_pro_version")

    @property
    @pulumi.getter(name="kernelVersion")
    def kernel_version(self) -> str:
        return pulumi.get(self, "kernel_version")

    @property
    @pulumi.getter(name="licenseOrders")
    def license_orders(self) -> Sequence['outputs.GetMachinesSimpleMachineLicenseOrderResult']:
        return pulumi.get(self, "license_orders")

    @property
    @pulumi.getter(name="machineIp")
    def machine_ip(self) -> str:
        return pulumi.get(self, "machine_ip")

    @property
    @pulumi.getter(name="machineName")
    def machine_name(self) -> str:
        return pulumi.get(self, "machine_name")

    @property
    @pulumi.getter(name="machineOs")
    def machine_os(self) -> str:
        return pulumi.get(self, "machine_os")

    @property
    @pulumi.getter(name="machineType")
    def machine_type(self) -> str:
        return pulumi.get(self, "machine_type")

    @property
    @pulumi.getter(name="machineWanIp")
    def machine_wan_ip(self) -> str:
        return pulumi.get(self, "machine_wan_ip")

    @property
    @pulumi.getter(name="payMode")
    def pay_mode(self) -> str:
        return pulumi.get(self, "pay_mode")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="protectType")
    def protect_type(self) -> str:
        return pulumi.get(self, "protect_type")

    @property
    @pulumi.getter
    def quuid(self) -> str:
        return pulumi.get(self, "quuid")

    @property
    @pulumi.getter(name="regionInfos")
    def region_infos(self) -> Sequence['outputs.GetMachinesSimpleMachineRegionInfoResult']:
        return pulumi.get(self, "region_infos")

    @property
    @pulumi.getter
    def tags(self) -> Sequence['outputs.GetMachinesSimpleMachineTagResult']:
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter
    def uuid(self) -> str:
        return pulumi.get(self, "uuid")


@pulumi.output_type
class GetMachinesSimpleMachineCloudTagResult(dict):
    def __init__(__self__, *,
                 tag_key: str,
                 tag_value: str):
        pulumi.set(__self__, "tag_key", tag_key)
        pulumi.set(__self__, "tag_value", tag_value)

    @property
    @pulumi.getter(name="tagKey")
    def tag_key(self) -> str:
        return pulumi.get(self, "tag_key")

    @property
    @pulumi.getter(name="tagValue")
    def tag_value(self) -> str:
        return pulumi.get(self, "tag_value")


@pulumi.output_type
class GetMachinesSimpleMachineLicenseOrderResult(dict):
    def __init__(__self__, *,
                 license_id: int,
                 license_type: int,
                 resource_id: str,
                 source_type: int,
                 status: int):
        pulumi.set(__self__, "license_id", license_id)
        pulumi.set(__self__, "license_type", license_type)
        pulumi.set(__self__, "resource_id", resource_id)
        pulumi.set(__self__, "source_type", source_type)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="licenseId")
    def license_id(self) -> int:
        return pulumi.get(self, "license_id")

    @property
    @pulumi.getter(name="licenseType")
    def license_type(self) -> int:
        return pulumi.get(self, "license_type")

    @property
    @pulumi.getter(name="resourceId")
    def resource_id(self) -> str:
        return pulumi.get(self, "resource_id")

    @property
    @pulumi.getter(name="sourceType")
    def source_type(self) -> int:
        return pulumi.get(self, "source_type")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")


@pulumi.output_type
class GetMachinesSimpleMachineRegionInfoResult(dict):
    def __init__(__self__, *,
                 region: str,
                 region_code: str,
                 region_id: int,
                 region_name: str,
                 region_name_en: str):
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "region_code", region_code)
        pulumi.set(__self__, "region_id", region_id)
        pulumi.set(__self__, "region_name", region_name)
        pulumi.set(__self__, "region_name_en", region_name_en)

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="regionCode")
    def region_code(self) -> str:
        return pulumi.get(self, "region_code")

    @property
    @pulumi.getter(name="regionId")
    def region_id(self) -> int:
        return pulumi.get(self, "region_id")

    @property
    @pulumi.getter(name="regionName")
    def region_name(self) -> str:
        return pulumi.get(self, "region_name")

    @property
    @pulumi.getter(name="regionNameEn")
    def region_name_en(self) -> str:
        return pulumi.get(self, "region_name_en")


@pulumi.output_type
class GetMachinesSimpleMachineTagResult(dict):
    def __init__(__self__, *,
                 name: str,
                 rid: int,
                 tag_id: int):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "rid", rid)
        pulumi.set(__self__, "tag_id", tag_id)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def rid(self) -> int:
        return pulumi.get(self, "rid")

    @property
    @pulumi.getter(name="tagId")
    def tag_id(self) -> int:
        return pulumi.get(self, "tag_id")


