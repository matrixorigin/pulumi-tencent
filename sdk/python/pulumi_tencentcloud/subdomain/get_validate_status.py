# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetValidateStatusResult',
    'AwaitableGetValidateStatusResult',
    'get_validate_status',
    'get_validate_status_output',
]

@pulumi.output_type
class GetValidateStatusResult:
    """
    A collection of values returned by getValidateStatus.
    """
    def __init__(__self__, domain_zone=None, id=None, result_output_file=None, status=None):
        if domain_zone and not isinstance(domain_zone, str):
            raise TypeError("Expected argument 'domain_zone' to be a str")
        pulumi.set(__self__, "domain_zone", domain_zone)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if result_output_file and not isinstance(result_output_file, str):
            raise TypeError("Expected argument 'result_output_file' to be a str")
        pulumi.set(__self__, "result_output_file", result_output_file)
        if status and not isinstance(status, int):
            raise TypeError("Expected argument 'status' to be a int")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="domainZone")
    def domain_zone(self) -> str:
        return pulumi.get(self, "domain_zone")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="resultOutputFile")
    def result_output_file(self) -> Optional[str]:
        return pulumi.get(self, "result_output_file")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")


class AwaitableGetValidateStatusResult(GetValidateStatusResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetValidateStatusResult(
            domain_zone=self.domain_zone,
            id=self.id,
            result_output_file=self.result_output_file,
            status=self.status)


def get_validate_status(domain_zone: Optional[str] = None,
                        result_output_file: Optional[str] = None,
                        opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetValidateStatusResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['domainZone'] = domain_zone
    __args__['resultOutputFile'] = result_output_file
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('tencentcloud:Subdomain/getValidateStatus:getValidateStatus', __args__, opts=opts, typ=GetValidateStatusResult).value

    return AwaitableGetValidateStatusResult(
        domain_zone=pulumi.get(__ret__, 'domain_zone'),
        id=pulumi.get(__ret__, 'id'),
        result_output_file=pulumi.get(__ret__, 'result_output_file'),
        status=pulumi.get(__ret__, 'status'))


@_utilities.lift_output_func(get_validate_status)
def get_validate_status_output(domain_zone: Optional[pulumi.Input[str]] = None,
                               result_output_file: Optional[pulumi.Input[Optional[str]]] = None,
                               opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetValidateStatusResult]:
    """
    Use this data source to access information about an existing resource.
    """
    ...
