# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'CheckCertificateDomainVerificationOperationVerificationResult',
    'FreeCertificateDvAuth',
    'PayCertificateDvAuth',
    'PayCertificateInformation',
    'UpdateCertificateInstanceOperationResourceTypesRegion',
    'GetCertificatesCertificateResult',
    'GetCertificatesCertificateDvAuthResult',
    'GetDescribeCertificateResultResult',
    'GetDescribeCertificateResultCertificateExtraResult',
    'GetDescribeCertificateResultDvAuthDetailResult',
    'GetDescribeCertificateResultDvAuthDetailDvAuthResult',
    'GetDescribeCertificateResultDvRevokeAuthDetailResult',
    'GetDescribeCertificateResultSubmittedDataResult',
    'GetDescribeCompaniesCompanyResult',
    'GetDescribeHostApiGatewayInstanceListFilterResult',
    'GetDescribeHostApiGatewayInstanceListInstanceListResult',
    'GetDescribeHostCdnInstanceListFilterResult',
    'GetDescribeHostCdnInstanceListInstanceListResult',
    'GetDescribeHostClbInstanceListFilterResult',
    'GetDescribeHostClbInstanceListInstanceListResult',
    'GetDescribeHostClbInstanceListInstanceListListenerResult',
    'GetDescribeHostClbInstanceListInstanceListListenerCertificateResult',
    'GetDescribeHostClbInstanceListInstanceListListenerRuleResult',
    'GetDescribeHostClbInstanceListInstanceListListenerRuleCertificateResult',
    'GetDescribeHostCosInstanceListFilterResult',
    'GetDescribeHostCosInstanceListInstanceListResult',
    'GetDescribeHostDdosInstanceListFilterResult',
    'GetDescribeHostDdosInstanceListInstanceListResult',
    'GetDescribeHostDeployRecordDeployRecordListResult',
    'GetDescribeHostDeployRecordDetailDeployRecordDetailListResult',
    'GetDescribeHostLighthouseInstanceListFilterResult',
    'GetDescribeHostLighthouseInstanceListInstanceListResult',
    'GetDescribeHostLiveInstanceListFilterResult',
    'GetDescribeHostLiveInstanceListInstanceListResult',
    'GetDescribeHostTeoInstanceListFilterResult',
    'GetDescribeHostTeoInstanceListInstanceListResult',
    'GetDescribeHostTkeInstanceListFilterResult',
    'GetDescribeHostTkeInstanceListInstanceListResult',
    'GetDescribeHostTkeInstanceListInstanceListNamespaceListResult',
    'GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListResult',
    'GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListIngressListResult',
    'GetDescribeHostUpdateRecordDeployRecordListResult',
    'GetDescribeHostUpdateRecordDetailRecordDetailListResult',
    'GetDescribeHostUpdateRecordDetailRecordDetailListListResult',
    'GetDescribeHostVodInstanceListFilterResult',
    'GetDescribeHostVodInstanceListInstanceListResult',
    'GetDescribeHostWafInstanceListFilterResult',
    'GetDescribeHostWafInstanceListInstanceListResult',
    'GetDescribeManagerDetailCompanyInfoResult',
    'GetDescribeManagersManagerResult',
]

@pulumi.output_type
class CheckCertificateDomainVerificationOperationVerificationResult(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "caCheck":
            suggest = "ca_check"
        elif key == "checkValues":
            suggest = "check_values"
        elif key == "localCheck":
            suggest = "local_check"
        elif key == "localCheckFailReason":
            suggest = "local_check_fail_reason"
        elif key == "verifyType":
            suggest = "verify_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in CheckCertificateDomainVerificationOperationVerificationResult. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        CheckCertificateDomainVerificationOperationVerificationResult.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        CheckCertificateDomainVerificationOperationVerificationResult.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 ca_check: Optional[int] = None,
                 check_values: Optional[Sequence[str]] = None,
                 domain: Optional[str] = None,
                 frequently: Optional[bool] = None,
                 issued: Optional[bool] = None,
                 local_check: Optional[int] = None,
                 local_check_fail_reason: Optional[str] = None,
                 verify_type: Optional[str] = None):
        if ca_check is not None:
            pulumi.set(__self__, "ca_check", ca_check)
        if check_values is not None:
            pulumi.set(__self__, "check_values", check_values)
        if domain is not None:
            pulumi.set(__self__, "domain", domain)
        if frequently is not None:
            pulumi.set(__self__, "frequently", frequently)
        if issued is not None:
            pulumi.set(__self__, "issued", issued)
        if local_check is not None:
            pulumi.set(__self__, "local_check", local_check)
        if local_check_fail_reason is not None:
            pulumi.set(__self__, "local_check_fail_reason", local_check_fail_reason)
        if verify_type is not None:
            pulumi.set(__self__, "verify_type", verify_type)

    @property
    @pulumi.getter(name="caCheck")
    def ca_check(self) -> Optional[int]:
        return pulumi.get(self, "ca_check")

    @property
    @pulumi.getter(name="checkValues")
    def check_values(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "check_values")

    @property
    @pulumi.getter
    def domain(self) -> Optional[str]:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def frequently(self) -> Optional[bool]:
        return pulumi.get(self, "frequently")

    @property
    @pulumi.getter
    def issued(self) -> Optional[bool]:
        return pulumi.get(self, "issued")

    @property
    @pulumi.getter(name="localCheck")
    def local_check(self) -> Optional[int]:
        return pulumi.get(self, "local_check")

    @property
    @pulumi.getter(name="localCheckFailReason")
    def local_check_fail_reason(self) -> Optional[str]:
        return pulumi.get(self, "local_check_fail_reason")

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> Optional[str]:
        return pulumi.get(self, "verify_type")


@pulumi.output_type
class FreeCertificateDvAuth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dvAuthKey":
            suggest = "dv_auth_key"
        elif key == "dvAuthValue":
            suggest = "dv_auth_value"
        elif key == "dvAuthVerifyType":
            suggest = "dv_auth_verify_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in FreeCertificateDvAuth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        FreeCertificateDvAuth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        FreeCertificateDvAuth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dv_auth_key: Optional[str] = None,
                 dv_auth_value: Optional[str] = None,
                 dv_auth_verify_type: Optional[str] = None):
        if dv_auth_key is not None:
            pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        if dv_auth_value is not None:
            pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        if dv_auth_verify_type is not None:
            pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_verify_type")


@pulumi.output_type
class PayCertificateDvAuth(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "dvAuthKey":
            suggest = "dv_auth_key"
        elif key == "dvAuthValue":
            suggest = "dv_auth_value"
        elif key == "dvAuthVerifyType":
            suggest = "dv_auth_verify_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PayCertificateDvAuth. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PayCertificateDvAuth.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PayCertificateDvAuth.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 dv_auth_key: Optional[str] = None,
                 dv_auth_value: Optional[str] = None,
                 dv_auth_verify_type: Optional[str] = None):
        if dv_auth_key is not None:
            pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        if dv_auth_value is not None:
            pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        if dv_auth_verify_type is not None:
            pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> Optional[str]:
        return pulumi.get(self, "dv_auth_verify_type")


@pulumi.output_type
class PayCertificateInformation(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "adminEmail":
            suggest = "admin_email"
        elif key == "adminFirstName":
            suggest = "admin_first_name"
        elif key == "adminLastName":
            suggest = "admin_last_name"
        elif key == "adminPhoneNum":
            suggest = "admin_phone_num"
        elif key == "adminPosition":
            suggest = "admin_position"
        elif key == "certificateDomain":
            suggest = "certificate_domain"
        elif key == "contactEmail":
            suggest = "contact_email"
        elif key == "contactFirstName":
            suggest = "contact_first_name"
        elif key == "contactLastName":
            suggest = "contact_last_name"
        elif key == "contactNumber":
            suggest = "contact_number"
        elif key == "contactPosition":
            suggest = "contact_position"
        elif key == "organizationAddress":
            suggest = "organization_address"
        elif key == "organizationCity":
            suggest = "organization_city"
        elif key == "organizationCountry":
            suggest = "organization_country"
        elif key == "organizationDivision":
            suggest = "organization_division"
        elif key == "organizationName":
            suggest = "organization_name"
        elif key == "organizationRegion":
            suggest = "organization_region"
        elif key == "phoneAreaCode":
            suggest = "phone_area_code"
        elif key == "phoneNumber":
            suggest = "phone_number"
        elif key == "postalCode":
            suggest = "postal_code"
        elif key == "verifyType":
            suggest = "verify_type"
        elif key == "csrContent":
            suggest = "csr_content"
        elif key == "csrType":
            suggest = "csr_type"
        elif key == "domainLists":
            suggest = "domain_lists"
        elif key == "keyPassword":
            suggest = "key_password"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in PayCertificateInformation. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        PayCertificateInformation.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        PayCertificateInformation.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 admin_email: str,
                 admin_first_name: str,
                 admin_last_name: str,
                 admin_phone_num: str,
                 admin_position: str,
                 certificate_domain: str,
                 contact_email: str,
                 contact_first_name: str,
                 contact_last_name: str,
                 contact_number: str,
                 contact_position: str,
                 organization_address: str,
                 organization_city: str,
                 organization_country: str,
                 organization_division: str,
                 organization_name: str,
                 organization_region: str,
                 phone_area_code: str,
                 phone_number: str,
                 postal_code: str,
                 verify_type: str,
                 csr_content: Optional[str] = None,
                 csr_type: Optional[str] = None,
                 domain_lists: Optional[Sequence[str]] = None,
                 key_password: Optional[str] = None):
        pulumi.set(__self__, "admin_email", admin_email)
        pulumi.set(__self__, "admin_first_name", admin_first_name)
        pulumi.set(__self__, "admin_last_name", admin_last_name)
        pulumi.set(__self__, "admin_phone_num", admin_phone_num)
        pulumi.set(__self__, "admin_position", admin_position)
        pulumi.set(__self__, "certificate_domain", certificate_domain)
        pulumi.set(__self__, "contact_email", contact_email)
        pulumi.set(__self__, "contact_first_name", contact_first_name)
        pulumi.set(__self__, "contact_last_name", contact_last_name)
        pulumi.set(__self__, "contact_number", contact_number)
        pulumi.set(__self__, "contact_position", contact_position)
        pulumi.set(__self__, "organization_address", organization_address)
        pulumi.set(__self__, "organization_city", organization_city)
        pulumi.set(__self__, "organization_country", organization_country)
        pulumi.set(__self__, "organization_division", organization_division)
        pulumi.set(__self__, "organization_name", organization_name)
        pulumi.set(__self__, "organization_region", organization_region)
        pulumi.set(__self__, "phone_area_code", phone_area_code)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "postal_code", postal_code)
        pulumi.set(__self__, "verify_type", verify_type)
        if csr_content is not None:
            pulumi.set(__self__, "csr_content", csr_content)
        if csr_type is not None:
            pulumi.set(__self__, "csr_type", csr_type)
        if domain_lists is not None:
            pulumi.set(__self__, "domain_lists", domain_lists)
        if key_password is not None:
            pulumi.set(__self__, "key_password", key_password)

    @property
    @pulumi.getter(name="adminEmail")
    def admin_email(self) -> str:
        return pulumi.get(self, "admin_email")

    @property
    @pulumi.getter(name="adminFirstName")
    def admin_first_name(self) -> str:
        return pulumi.get(self, "admin_first_name")

    @property
    @pulumi.getter(name="adminLastName")
    def admin_last_name(self) -> str:
        return pulumi.get(self, "admin_last_name")

    @property
    @pulumi.getter(name="adminPhoneNum")
    def admin_phone_num(self) -> str:
        return pulumi.get(self, "admin_phone_num")

    @property
    @pulumi.getter(name="adminPosition")
    def admin_position(self) -> str:
        return pulumi.get(self, "admin_position")

    @property
    @pulumi.getter(name="certificateDomain")
    def certificate_domain(self) -> str:
        return pulumi.get(self, "certificate_domain")

    @property
    @pulumi.getter(name="contactEmail")
    def contact_email(self) -> str:
        return pulumi.get(self, "contact_email")

    @property
    @pulumi.getter(name="contactFirstName")
    def contact_first_name(self) -> str:
        return pulumi.get(self, "contact_first_name")

    @property
    @pulumi.getter(name="contactLastName")
    def contact_last_name(self) -> str:
        return pulumi.get(self, "contact_last_name")

    @property
    @pulumi.getter(name="contactNumber")
    def contact_number(self) -> str:
        return pulumi.get(self, "contact_number")

    @property
    @pulumi.getter(name="contactPosition")
    def contact_position(self) -> str:
        return pulumi.get(self, "contact_position")

    @property
    @pulumi.getter(name="organizationAddress")
    def organization_address(self) -> str:
        return pulumi.get(self, "organization_address")

    @property
    @pulumi.getter(name="organizationCity")
    def organization_city(self) -> str:
        return pulumi.get(self, "organization_city")

    @property
    @pulumi.getter(name="organizationCountry")
    def organization_country(self) -> str:
        return pulumi.get(self, "organization_country")

    @property
    @pulumi.getter(name="organizationDivision")
    def organization_division(self) -> str:
        return pulumi.get(self, "organization_division")

    @property
    @pulumi.getter(name="organizationName")
    def organization_name(self) -> str:
        return pulumi.get(self, "organization_name")

    @property
    @pulumi.getter(name="organizationRegion")
    def organization_region(self) -> str:
        return pulumi.get(self, "organization_region")

    @property
    @pulumi.getter(name="phoneAreaCode")
    def phone_area_code(self) -> str:
        return pulumi.get(self, "phone_area_code")

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> str:
        return pulumi.get(self, "phone_number")

    @property
    @pulumi.getter(name="postalCode")
    def postal_code(self) -> str:
        return pulumi.get(self, "postal_code")

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> str:
        return pulumi.get(self, "verify_type")

    @property
    @pulumi.getter(name="csrContent")
    def csr_content(self) -> Optional[str]:
        return pulumi.get(self, "csr_content")

    @property
    @pulumi.getter(name="csrType")
    def csr_type(self) -> Optional[str]:
        return pulumi.get(self, "csr_type")

    @property
    @pulumi.getter(name="domainLists")
    def domain_lists(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "domain_lists")

    @property
    @pulumi.getter(name="keyPassword")
    def key_password(self) -> Optional[str]:
        return pulumi.get(self, "key_password")


@pulumi.output_type
class UpdateCertificateInstanceOperationResourceTypesRegion(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "resourceType":
            suggest = "resource_type"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in UpdateCertificateInstanceOperationResourceTypesRegion. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        UpdateCertificateInstanceOperationResourceTypesRegion.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        UpdateCertificateInstanceOperationResourceTypesRegion.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 regions: Optional[Sequence[str]] = None,
                 resource_type: Optional[str] = None):
        if regions is not None:
            pulumi.set(__self__, "regions", regions)
        if resource_type is not None:
            pulumi.set(__self__, "resource_type", resource_type)

    @property
    @pulumi.getter
    def regions(self) -> Optional[Sequence[str]]:
        return pulumi.get(self, "regions")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> Optional[str]:
        return pulumi.get(self, "resource_type")


@pulumi.output_type
class GetCertificatesCertificateResult(dict):
    def __init__(__self__, *,
                 begin_time: str,
                 cert: str,
                 create_time: str,
                 domain: str,
                 dv_auths: Sequence['outputs.GetCertificatesCertificateDvAuthResult'],
                 end_time: str,
                 id: str,
                 key: str,
                 name: str,
                 order_id: str,
                 owner_uin: str,
                 product_zh_name: str,
                 project_id: int,
                 status: int,
                 subject_names: Sequence[str],
                 type: str,
                 validity_period: str):
        pulumi.set(__self__, "begin_time", begin_time)
        pulumi.set(__self__, "cert", cert)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "dv_auths", dv_auths)
        pulumi.set(__self__, "end_time", end_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "key", key)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "order_id", order_id)
        pulumi.set(__self__, "owner_uin", owner_uin)
        pulumi.set(__self__, "product_zh_name", product_zh_name)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "subject_names", subject_names)
        pulumi.set(__self__, "type", type)
        pulumi.set(__self__, "validity_period", validity_period)

    @property
    @pulumi.getter(name="beginTime")
    def begin_time(self) -> str:
        return pulumi.get(self, "begin_time")

    @property
    @pulumi.getter
    def cert(self) -> str:
        return pulumi.get(self, "cert")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="dvAuths")
    def dv_auths(self) -> Sequence['outputs.GetCertificatesCertificateDvAuthResult']:
        return pulumi.get(self, "dv_auths")

    @property
    @pulumi.getter(name="endTime")
    def end_time(self) -> str:
        return pulumi.get(self, "end_time")

    @property
    @pulumi.getter
    def id(self) -> str:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def key(self) -> str:
        return pulumi.get(self, "key")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="orderId")
    def order_id(self) -> str:
        return pulumi.get(self, "order_id")

    @property
    @pulumi.getter(name="ownerUin")
    def owner_uin(self) -> str:
        return pulumi.get(self, "owner_uin")

    @property
    @pulumi.getter(name="productZhName")
    def product_zh_name(self) -> str:
        return pulumi.get(self, "product_zh_name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> int:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="subjectNames")
    def subject_names(self) -> Sequence[str]:
        return pulumi.get(self, "subject_names")

    @property
    @pulumi.getter
    def type(self) -> str:
        return pulumi.get(self, "type")

    @property
    @pulumi.getter(name="validityPeriod")
    def validity_period(self) -> str:
        return pulumi.get(self, "validity_period")


@pulumi.output_type
class GetCertificatesCertificateDvAuthResult(dict):
    def __init__(__self__, *,
                 dv_auth_key: str,
                 dv_auth_value: str,
                 dv_auth_verify_type: str):
        pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> str:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> str:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> str:
        return pulumi.get(self, "dv_auth_verify_type")


@pulumi.output_type
class GetDescribeCertificateResultResult(dict):
    def __init__(__self__, *,
                 alias: str,
                 c_a_common_names: Sequence[str],
                 c_a_encrypt_algorithms: Sequence[str],
                 c_a_end_times: Sequence[str],
                 cert_begin_time: str,
                 cert_end_time: str,
                 certificate_extras: Sequence['outputs.GetDescribeCertificateResultCertificateExtraResult'],
                 certificate_type: str,
                 deployable: bool,
                 domain: str,
                 dv_auth_details: Sequence['outputs.GetDescribeCertificateResultDvAuthDetailResult'],
                 dv_revoke_auth_details: Sequence['outputs.GetDescribeCertificateResultDvRevokeAuthDetailResult'],
                 from_: str,
                 insert_time: str,
                 is_dv: bool,
                 is_vip: bool,
                 is_vulnerability: bool,
                 is_wildcard: bool,
                 order_id: str,
                 owner_uin: str,
                 package_type: str,
                 package_type_name: str,
                 product_zh_name: str,
                 project_id: str,
                 renew_able: bool,
                 status: int,
                 status_msg: str,
                 status_name: str,
                 subject_alt_names: Sequence[str],
                 submitted_datas: Sequence['outputs.GetDescribeCertificateResultSubmittedDataResult'],
                 validity_period: str,
                 verify_type: str,
                 vulnerability_report: str,
                 vulnerability_status: str):
        pulumi.set(__self__, "alias", alias)
        pulumi.set(__self__, "c_a_common_names", c_a_common_names)
        pulumi.set(__self__, "c_a_encrypt_algorithms", c_a_encrypt_algorithms)
        pulumi.set(__self__, "c_a_end_times", c_a_end_times)
        pulumi.set(__self__, "cert_begin_time", cert_begin_time)
        pulumi.set(__self__, "cert_end_time", cert_end_time)
        pulumi.set(__self__, "certificate_extras", certificate_extras)
        pulumi.set(__self__, "certificate_type", certificate_type)
        pulumi.set(__self__, "deployable", deployable)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "dv_auth_details", dv_auth_details)
        pulumi.set(__self__, "dv_revoke_auth_details", dv_revoke_auth_details)
        pulumi.set(__self__, "from_", from_)
        pulumi.set(__self__, "insert_time", insert_time)
        pulumi.set(__self__, "is_dv", is_dv)
        pulumi.set(__self__, "is_vip", is_vip)
        pulumi.set(__self__, "is_vulnerability", is_vulnerability)
        pulumi.set(__self__, "is_wildcard", is_wildcard)
        pulumi.set(__self__, "order_id", order_id)
        pulumi.set(__self__, "owner_uin", owner_uin)
        pulumi.set(__self__, "package_type", package_type)
        pulumi.set(__self__, "package_type_name", package_type_name)
        pulumi.set(__self__, "product_zh_name", product_zh_name)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "renew_able", renew_able)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "status_msg", status_msg)
        pulumi.set(__self__, "status_name", status_name)
        pulumi.set(__self__, "subject_alt_names", subject_alt_names)
        pulumi.set(__self__, "submitted_datas", submitted_datas)
        pulumi.set(__self__, "validity_period", validity_period)
        pulumi.set(__self__, "verify_type", verify_type)
        pulumi.set(__self__, "vulnerability_report", vulnerability_report)
        pulumi.set(__self__, "vulnerability_status", vulnerability_status)

    @property
    @pulumi.getter
    def alias(self) -> str:
        return pulumi.get(self, "alias")

    @property
    @pulumi.getter(name="cACommonNames")
    def c_a_common_names(self) -> Sequence[str]:
        return pulumi.get(self, "c_a_common_names")

    @property
    @pulumi.getter(name="cAEncryptAlgorithms")
    def c_a_encrypt_algorithms(self) -> Sequence[str]:
        return pulumi.get(self, "c_a_encrypt_algorithms")

    @property
    @pulumi.getter(name="cAEndTimes")
    def c_a_end_times(self) -> Sequence[str]:
        return pulumi.get(self, "c_a_end_times")

    @property
    @pulumi.getter(name="certBeginTime")
    def cert_begin_time(self) -> str:
        return pulumi.get(self, "cert_begin_time")

    @property
    @pulumi.getter(name="certEndTime")
    def cert_end_time(self) -> str:
        return pulumi.get(self, "cert_end_time")

    @property
    @pulumi.getter(name="certificateExtras")
    def certificate_extras(self) -> Sequence['outputs.GetDescribeCertificateResultCertificateExtraResult']:
        return pulumi.get(self, "certificate_extras")

    @property
    @pulumi.getter(name="certificateType")
    def certificate_type(self) -> str:
        return pulumi.get(self, "certificate_type")

    @property
    @pulumi.getter
    def deployable(self) -> bool:
        return pulumi.get(self, "deployable")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="dvAuthDetails")
    def dv_auth_details(self) -> Sequence['outputs.GetDescribeCertificateResultDvAuthDetailResult']:
        return pulumi.get(self, "dv_auth_details")

    @property
    @pulumi.getter(name="dvRevokeAuthDetails")
    def dv_revoke_auth_details(self) -> Sequence['outputs.GetDescribeCertificateResultDvRevokeAuthDetailResult']:
        return pulumi.get(self, "dv_revoke_auth_details")

    @property
    @pulumi.getter(name="from")
    def from_(self) -> str:
        return pulumi.get(self, "from_")

    @property
    @pulumi.getter(name="insertTime")
    def insert_time(self) -> str:
        return pulumi.get(self, "insert_time")

    @property
    @pulumi.getter(name="isDv")
    def is_dv(self) -> bool:
        return pulumi.get(self, "is_dv")

    @property
    @pulumi.getter(name="isVip")
    def is_vip(self) -> bool:
        return pulumi.get(self, "is_vip")

    @property
    @pulumi.getter(name="isVulnerability")
    def is_vulnerability(self) -> bool:
        return pulumi.get(self, "is_vulnerability")

    @property
    @pulumi.getter(name="isWildcard")
    def is_wildcard(self) -> bool:
        return pulumi.get(self, "is_wildcard")

    @property
    @pulumi.getter(name="orderId")
    def order_id(self) -> str:
        return pulumi.get(self, "order_id")

    @property
    @pulumi.getter(name="ownerUin")
    def owner_uin(self) -> str:
        return pulumi.get(self, "owner_uin")

    @property
    @pulumi.getter(name="packageType")
    def package_type(self) -> str:
        return pulumi.get(self, "package_type")

    @property
    @pulumi.getter(name="packageTypeName")
    def package_type_name(self) -> str:
        return pulumi.get(self, "package_type_name")

    @property
    @pulumi.getter(name="productZhName")
    def product_zh_name(self) -> str:
        return pulumi.get(self, "product_zh_name")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> str:
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="renewAble")
    def renew_able(self) -> bool:
        return pulumi.get(self, "renew_able")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="statusMsg")
    def status_msg(self) -> str:
        return pulumi.get(self, "status_msg")

    @property
    @pulumi.getter(name="statusName")
    def status_name(self) -> str:
        return pulumi.get(self, "status_name")

    @property
    @pulumi.getter(name="subjectAltNames")
    def subject_alt_names(self) -> Sequence[str]:
        return pulumi.get(self, "subject_alt_names")

    @property
    @pulumi.getter(name="submittedDatas")
    def submitted_datas(self) -> Sequence['outputs.GetDescribeCertificateResultSubmittedDataResult']:
        return pulumi.get(self, "submitted_datas")

    @property
    @pulumi.getter(name="validityPeriod")
    def validity_period(self) -> str:
        return pulumi.get(self, "validity_period")

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> str:
        return pulumi.get(self, "verify_type")

    @property
    @pulumi.getter(name="vulnerabilityReport")
    def vulnerability_report(self) -> str:
        return pulumi.get(self, "vulnerability_report")

    @property
    @pulumi.getter(name="vulnerabilityStatus")
    def vulnerability_status(self) -> str:
        return pulumi.get(self, "vulnerability_status")


@pulumi.output_type
class GetDescribeCertificateResultCertificateExtraResult(dict):
    def __init__(__self__, *,
                 company_type: int,
                 domain_number: str,
                 origin_certificate_id: str,
                 renew_order: str,
                 replaced_by: str,
                 replaced_for: str,
                 s_m_cert: int):
        pulumi.set(__self__, "company_type", company_type)
        pulumi.set(__self__, "domain_number", domain_number)
        pulumi.set(__self__, "origin_certificate_id", origin_certificate_id)
        pulumi.set(__self__, "renew_order", renew_order)
        pulumi.set(__self__, "replaced_by", replaced_by)
        pulumi.set(__self__, "replaced_for", replaced_for)
        pulumi.set(__self__, "s_m_cert", s_m_cert)

    @property
    @pulumi.getter(name="companyType")
    def company_type(self) -> int:
        return pulumi.get(self, "company_type")

    @property
    @pulumi.getter(name="domainNumber")
    def domain_number(self) -> str:
        return pulumi.get(self, "domain_number")

    @property
    @pulumi.getter(name="originCertificateId")
    def origin_certificate_id(self) -> str:
        return pulumi.get(self, "origin_certificate_id")

    @property
    @pulumi.getter(name="renewOrder")
    def renew_order(self) -> str:
        return pulumi.get(self, "renew_order")

    @property
    @pulumi.getter(name="replacedBy")
    def replaced_by(self) -> str:
        return pulumi.get(self, "replaced_by")

    @property
    @pulumi.getter(name="replacedFor")
    def replaced_for(self) -> str:
        return pulumi.get(self, "replaced_for")

    @property
    @pulumi.getter(name="sMCert")
    def s_m_cert(self) -> int:
        return pulumi.get(self, "s_m_cert")


@pulumi.output_type
class GetDescribeCertificateResultDvAuthDetailResult(dict):
    def __init__(__self__, *,
                 dv_auth_domain: str,
                 dv_auth_key: str,
                 dv_auth_key_sub_domain: str,
                 dv_auth_path: str,
                 dv_auth_value: str,
                 dv_auths: Sequence['outputs.GetDescribeCertificateResultDvAuthDetailDvAuthResult']):
        pulumi.set(__self__, "dv_auth_domain", dv_auth_domain)
        pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        pulumi.set(__self__, "dv_auth_key_sub_domain", dv_auth_key_sub_domain)
        pulumi.set(__self__, "dv_auth_path", dv_auth_path)
        pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        pulumi.set(__self__, "dv_auths", dv_auths)

    @property
    @pulumi.getter(name="dvAuthDomain")
    def dv_auth_domain(self) -> str:
        return pulumi.get(self, "dv_auth_domain")

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> str:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthKeySubDomain")
    def dv_auth_key_sub_domain(self) -> str:
        return pulumi.get(self, "dv_auth_key_sub_domain")

    @property
    @pulumi.getter(name="dvAuthPath")
    def dv_auth_path(self) -> str:
        return pulumi.get(self, "dv_auth_path")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> str:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuths")
    def dv_auths(self) -> Sequence['outputs.GetDescribeCertificateResultDvAuthDetailDvAuthResult']:
        return pulumi.get(self, "dv_auths")


@pulumi.output_type
class GetDescribeCertificateResultDvAuthDetailDvAuthResult(dict):
    def __init__(__self__, *,
                 dv_auth_domain: str,
                 dv_auth_key: str,
                 dv_auth_path: str,
                 dv_auth_sub_domain: str,
                 dv_auth_value: str,
                 dv_auth_verify_type: str):
        pulumi.set(__self__, "dv_auth_domain", dv_auth_domain)
        pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        pulumi.set(__self__, "dv_auth_path", dv_auth_path)
        pulumi.set(__self__, "dv_auth_sub_domain", dv_auth_sub_domain)
        pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthDomain")
    def dv_auth_domain(self) -> str:
        return pulumi.get(self, "dv_auth_domain")

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> str:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthPath")
    def dv_auth_path(self) -> str:
        return pulumi.get(self, "dv_auth_path")

    @property
    @pulumi.getter(name="dvAuthSubDomain")
    def dv_auth_sub_domain(self) -> str:
        return pulumi.get(self, "dv_auth_sub_domain")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> str:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> str:
        return pulumi.get(self, "dv_auth_verify_type")


@pulumi.output_type
class GetDescribeCertificateResultDvRevokeAuthDetailResult(dict):
    def __init__(__self__, *,
                 dv_auth_domain: str,
                 dv_auth_key: str,
                 dv_auth_path: str,
                 dv_auth_sub_domain: str,
                 dv_auth_value: str,
                 dv_auth_verify_type: str):
        pulumi.set(__self__, "dv_auth_domain", dv_auth_domain)
        pulumi.set(__self__, "dv_auth_key", dv_auth_key)
        pulumi.set(__self__, "dv_auth_path", dv_auth_path)
        pulumi.set(__self__, "dv_auth_sub_domain", dv_auth_sub_domain)
        pulumi.set(__self__, "dv_auth_value", dv_auth_value)
        pulumi.set(__self__, "dv_auth_verify_type", dv_auth_verify_type)

    @property
    @pulumi.getter(name="dvAuthDomain")
    def dv_auth_domain(self) -> str:
        return pulumi.get(self, "dv_auth_domain")

    @property
    @pulumi.getter(name="dvAuthKey")
    def dv_auth_key(self) -> str:
        return pulumi.get(self, "dv_auth_key")

    @property
    @pulumi.getter(name="dvAuthPath")
    def dv_auth_path(self) -> str:
        return pulumi.get(self, "dv_auth_path")

    @property
    @pulumi.getter(name="dvAuthSubDomain")
    def dv_auth_sub_domain(self) -> str:
        return pulumi.get(self, "dv_auth_sub_domain")

    @property
    @pulumi.getter(name="dvAuthValue")
    def dv_auth_value(self) -> str:
        return pulumi.get(self, "dv_auth_value")

    @property
    @pulumi.getter(name="dvAuthVerifyType")
    def dv_auth_verify_type(self) -> str:
        return pulumi.get(self, "dv_auth_verify_type")


@pulumi.output_type
class GetDescribeCertificateResultSubmittedDataResult(dict):
    def __init__(__self__, *,
                 admin_email: str,
                 admin_first_name: str,
                 admin_last_name: str,
                 admin_phone_num: str,
                 admin_position: str,
                 certificate_domain: str,
                 contact_email: str,
                 contact_first_name: str,
                 contact_last_name: str,
                 contact_number: str,
                 contact_position: str,
                 csr_content: str,
                 csr_type: str,
                 domain_lists: Sequence[str],
                 key_password: str,
                 organization_address: str,
                 organization_city: str,
                 organization_country: str,
                 organization_division: str,
                 organization_name: str,
                 organization_region: str,
                 phone_area_code: str,
                 phone_number: str,
                 postal_code: str,
                 verify_type: str):
        pulumi.set(__self__, "admin_email", admin_email)
        pulumi.set(__self__, "admin_first_name", admin_first_name)
        pulumi.set(__self__, "admin_last_name", admin_last_name)
        pulumi.set(__self__, "admin_phone_num", admin_phone_num)
        pulumi.set(__self__, "admin_position", admin_position)
        pulumi.set(__self__, "certificate_domain", certificate_domain)
        pulumi.set(__self__, "contact_email", contact_email)
        pulumi.set(__self__, "contact_first_name", contact_first_name)
        pulumi.set(__self__, "contact_last_name", contact_last_name)
        pulumi.set(__self__, "contact_number", contact_number)
        pulumi.set(__self__, "contact_position", contact_position)
        pulumi.set(__self__, "csr_content", csr_content)
        pulumi.set(__self__, "csr_type", csr_type)
        pulumi.set(__self__, "domain_lists", domain_lists)
        pulumi.set(__self__, "key_password", key_password)
        pulumi.set(__self__, "organization_address", organization_address)
        pulumi.set(__self__, "organization_city", organization_city)
        pulumi.set(__self__, "organization_country", organization_country)
        pulumi.set(__self__, "organization_division", organization_division)
        pulumi.set(__self__, "organization_name", organization_name)
        pulumi.set(__self__, "organization_region", organization_region)
        pulumi.set(__self__, "phone_area_code", phone_area_code)
        pulumi.set(__self__, "phone_number", phone_number)
        pulumi.set(__self__, "postal_code", postal_code)
        pulumi.set(__self__, "verify_type", verify_type)

    @property
    @pulumi.getter(name="adminEmail")
    def admin_email(self) -> str:
        return pulumi.get(self, "admin_email")

    @property
    @pulumi.getter(name="adminFirstName")
    def admin_first_name(self) -> str:
        return pulumi.get(self, "admin_first_name")

    @property
    @pulumi.getter(name="adminLastName")
    def admin_last_name(self) -> str:
        return pulumi.get(self, "admin_last_name")

    @property
    @pulumi.getter(name="adminPhoneNum")
    def admin_phone_num(self) -> str:
        return pulumi.get(self, "admin_phone_num")

    @property
    @pulumi.getter(name="adminPosition")
    def admin_position(self) -> str:
        return pulumi.get(self, "admin_position")

    @property
    @pulumi.getter(name="certificateDomain")
    def certificate_domain(self) -> str:
        return pulumi.get(self, "certificate_domain")

    @property
    @pulumi.getter(name="contactEmail")
    def contact_email(self) -> str:
        return pulumi.get(self, "contact_email")

    @property
    @pulumi.getter(name="contactFirstName")
    def contact_first_name(self) -> str:
        return pulumi.get(self, "contact_first_name")

    @property
    @pulumi.getter(name="contactLastName")
    def contact_last_name(self) -> str:
        return pulumi.get(self, "contact_last_name")

    @property
    @pulumi.getter(name="contactNumber")
    def contact_number(self) -> str:
        return pulumi.get(self, "contact_number")

    @property
    @pulumi.getter(name="contactPosition")
    def contact_position(self) -> str:
        return pulumi.get(self, "contact_position")

    @property
    @pulumi.getter(name="csrContent")
    def csr_content(self) -> str:
        return pulumi.get(self, "csr_content")

    @property
    @pulumi.getter(name="csrType")
    def csr_type(self) -> str:
        return pulumi.get(self, "csr_type")

    @property
    @pulumi.getter(name="domainLists")
    def domain_lists(self) -> Sequence[str]:
        return pulumi.get(self, "domain_lists")

    @property
    @pulumi.getter(name="keyPassword")
    def key_password(self) -> str:
        return pulumi.get(self, "key_password")

    @property
    @pulumi.getter(name="organizationAddress")
    def organization_address(self) -> str:
        return pulumi.get(self, "organization_address")

    @property
    @pulumi.getter(name="organizationCity")
    def organization_city(self) -> str:
        return pulumi.get(self, "organization_city")

    @property
    @pulumi.getter(name="organizationCountry")
    def organization_country(self) -> str:
        return pulumi.get(self, "organization_country")

    @property
    @pulumi.getter(name="organizationDivision")
    def organization_division(self) -> str:
        return pulumi.get(self, "organization_division")

    @property
    @pulumi.getter(name="organizationName")
    def organization_name(self) -> str:
        return pulumi.get(self, "organization_name")

    @property
    @pulumi.getter(name="organizationRegion")
    def organization_region(self) -> str:
        return pulumi.get(self, "organization_region")

    @property
    @pulumi.getter(name="phoneAreaCode")
    def phone_area_code(self) -> str:
        return pulumi.get(self, "phone_area_code")

    @property
    @pulumi.getter(name="phoneNumber")
    def phone_number(self) -> str:
        return pulumi.get(self, "phone_number")

    @property
    @pulumi.getter(name="postalCode")
    def postal_code(self) -> str:
        return pulumi.get(self, "postal_code")

    @property
    @pulumi.getter(name="verifyType")
    def verify_type(self) -> str:
        return pulumi.get(self, "verify_type")


@pulumi.output_type
class GetDescribeCompaniesCompanyResult(dict):
    def __init__(__self__, *,
                 company_address: str,
                 company_city: str,
                 company_country: str,
                 company_id: int,
                 company_name: str,
                 company_phone: str,
                 company_province: str,
                 id_number: str,
                 id_type: str):
        pulumi.set(__self__, "company_address", company_address)
        pulumi.set(__self__, "company_city", company_city)
        pulumi.set(__self__, "company_country", company_country)
        pulumi.set(__self__, "company_id", company_id)
        pulumi.set(__self__, "company_name", company_name)
        pulumi.set(__self__, "company_phone", company_phone)
        pulumi.set(__self__, "company_province", company_province)
        pulumi.set(__self__, "id_number", id_number)
        pulumi.set(__self__, "id_type", id_type)

    @property
    @pulumi.getter(name="companyAddress")
    def company_address(self) -> str:
        return pulumi.get(self, "company_address")

    @property
    @pulumi.getter(name="companyCity")
    def company_city(self) -> str:
        return pulumi.get(self, "company_city")

    @property
    @pulumi.getter(name="companyCountry")
    def company_country(self) -> str:
        return pulumi.get(self, "company_country")

    @property
    @pulumi.getter(name="companyId")
    def company_id(self) -> int:
        return pulumi.get(self, "company_id")

    @property
    @pulumi.getter(name="companyName")
    def company_name(self) -> str:
        return pulumi.get(self, "company_name")

    @property
    @pulumi.getter(name="companyPhone")
    def company_phone(self) -> str:
        return pulumi.get(self, "company_phone")

    @property
    @pulumi.getter(name="companyProvince")
    def company_province(self) -> str:
        return pulumi.get(self, "company_province")

    @property
    @pulumi.getter(name="idNumber")
    def id_number(self) -> str:
        return pulumi.get(self, "id_number")

    @property
    @pulumi.getter(name="idType")
    def id_type(self) -> str:
        return pulumi.get(self, "id_type")


@pulumi.output_type
class GetDescribeHostApiGatewayInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostApiGatewayInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str,
                 protocol: str,
                 service_id: str,
                 service_name: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "service_id", service_id)
        pulumi.set(__self__, "service_name", service_name)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="serviceId")
    def service_id(self) -> str:
        return pulumi.get(self, "service_id")

    @property
    @pulumi.getter(name="serviceName")
    def service_name(self) -> str:
        return pulumi.get(self, "service_name")


@pulumi.output_type
class GetDescribeHostCdnInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostCdnInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str,
                 https_billing_switch: str,
                 status: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "https_billing_switch", https_billing_switch)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="httpsBillingSwitch")
    def https_billing_switch(self) -> str:
        return pulumi.get(self, "https_billing_switch")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")


@pulumi.output_type
class GetDescribeHostClbInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostClbInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 listeners: Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerResult'],
                 load_balancer_id: str,
                 load_balancer_name: str):
        pulumi.set(__self__, "listeners", listeners)
        pulumi.set(__self__, "load_balancer_id", load_balancer_id)
        pulumi.set(__self__, "load_balancer_name", load_balancer_name)

    @property
    @pulumi.getter
    def listeners(self) -> Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerResult']:
        return pulumi.get(self, "listeners")

    @property
    @pulumi.getter(name="loadBalancerId")
    def load_balancer_id(self) -> str:
        return pulumi.get(self, "load_balancer_id")

    @property
    @pulumi.getter(name="loadBalancerName")
    def load_balancer_name(self) -> str:
        return pulumi.get(self, "load_balancer_name")


@pulumi.output_type
class GetDescribeHostClbInstanceListInstanceListListenerResult(dict):
    def __init__(__self__, *,
                 certificates: Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerCertificateResult'],
                 listener_id: str,
                 listener_name: str,
                 no_match_domains: Sequence[str],
                 protocol: str,
                 rules: Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerRuleResult'],
                 sni_switch: int):
        pulumi.set(__self__, "certificates", certificates)
        pulumi.set(__self__, "listener_id", listener_id)
        pulumi.set(__self__, "listener_name", listener_name)
        pulumi.set(__self__, "no_match_domains", no_match_domains)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "rules", rules)
        pulumi.set(__self__, "sni_switch", sni_switch)

    @property
    @pulumi.getter
    def certificates(self) -> Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerCertificateResult']:
        return pulumi.get(self, "certificates")

    @property
    @pulumi.getter(name="listenerId")
    def listener_id(self) -> str:
        return pulumi.get(self, "listener_id")

    @property
    @pulumi.getter(name="listenerName")
    def listener_name(self) -> str:
        return pulumi.get(self, "listener_name")

    @property
    @pulumi.getter(name="noMatchDomains")
    def no_match_domains(self) -> Sequence[str]:
        return pulumi.get(self, "no_match_domains")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerRuleResult']:
        return pulumi.get(self, "rules")

    @property
    @pulumi.getter(name="sniSwitch")
    def sni_switch(self) -> int:
        return pulumi.get(self, "sni_switch")


@pulumi.output_type
class GetDescribeHostClbInstanceListInstanceListListenerCertificateResult(dict):
    def __init__(__self__, *,
                 cert_ca_id: str,
                 cert_id: str,
                 dns_names: Sequence[str],
                 s_sl_mode: str):
        pulumi.set(__self__, "cert_ca_id", cert_ca_id)
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "dns_names", dns_names)
        pulumi.set(__self__, "s_sl_mode", s_sl_mode)

    @property
    @pulumi.getter(name="certCaId")
    def cert_ca_id(self) -> str:
        return pulumi.get(self, "cert_ca_id")

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="dnsNames")
    def dns_names(self) -> Sequence[str]:
        return pulumi.get(self, "dns_names")

    @property
    @pulumi.getter(name="sSLMode")
    def s_sl_mode(self) -> str:
        return pulumi.get(self, "s_sl_mode")


@pulumi.output_type
class GetDescribeHostClbInstanceListInstanceListListenerRuleResult(dict):
    def __init__(__self__, *,
                 certificates: Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerRuleCertificateResult'],
                 domain: str,
                 is_match: bool,
                 location_id: str,
                 no_match_domains: Sequence[str]):
        pulumi.set(__self__, "certificates", certificates)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "is_match", is_match)
        pulumi.set(__self__, "location_id", location_id)
        pulumi.set(__self__, "no_match_domains", no_match_domains)

    @property
    @pulumi.getter
    def certificates(self) -> Sequence['outputs.GetDescribeHostClbInstanceListInstanceListListenerRuleCertificateResult']:
        return pulumi.get(self, "certificates")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="isMatch")
    def is_match(self) -> bool:
        return pulumi.get(self, "is_match")

    @property
    @pulumi.getter(name="locationId")
    def location_id(self) -> str:
        return pulumi.get(self, "location_id")

    @property
    @pulumi.getter(name="noMatchDomains")
    def no_match_domains(self) -> Sequence[str]:
        return pulumi.get(self, "no_match_domains")


@pulumi.output_type
class GetDescribeHostClbInstanceListInstanceListListenerRuleCertificateResult(dict):
    def __init__(__self__, *,
                 cert_ca_id: str,
                 cert_id: str,
                 dns_names: Sequence[str],
                 s_sl_mode: str):
        pulumi.set(__self__, "cert_ca_id", cert_ca_id)
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "dns_names", dns_names)
        pulumi.set(__self__, "s_sl_mode", s_sl_mode)

    @property
    @pulumi.getter(name="certCaId")
    def cert_ca_id(self) -> str:
        return pulumi.get(self, "cert_ca_id")

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="dnsNames")
    def dns_names(self) -> Sequence[str]:
        return pulumi.get(self, "dns_names")

    @property
    @pulumi.getter(name="sSLMode")
    def s_sl_mode(self) -> str:
        return pulumi.get(self, "s_sl_mode")


@pulumi.output_type
class GetDescribeHostCosInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostCosInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 bucket: str,
                 cert_id: str,
                 domain: str,
                 region: str,
                 status: str):
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")


@pulumi.output_type
class GetDescribeHostDdosInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostDdosInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str,
                 instance_id: str,
                 protocol: str,
                 virtual_port: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "virtual_port", virtual_port)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter(name="virtualPort")
    def virtual_port(self) -> str:
        return pulumi.get(self, "virtual_port")


@pulumi.output_type
class GetDescribeHostDeployRecordDeployRecordListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 create_time: str,
                 id: int,
                 region: str,
                 resource_type: str,
                 status: int,
                 update_time: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> str:
        return pulumi.get(self, "resource_type")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")


@pulumi.output_type
class GetDescribeHostDeployRecordDetailDeployRecordDetailListResult(dict):
    def __init__(__self__, *,
                 bucket: str,
                 cert_id: str,
                 create_time: str,
                 domains: Sequence[str],
                 env_id: str,
                 error_msg: str,
                 id: int,
                 instance_id: str,
                 instance_name: str,
                 listener_id: str,
                 listener_name: str,
                 namespace: str,
                 old_cert_id: str,
                 port: int,
                 protocol: str,
                 region: str,
                 secret_name: str,
                 sni_switch: int,
                 status: int,
                 tcb_type: str,
                 update_time: str):
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "env_id", env_id)
        pulumi.set(__self__, "error_msg", error_msg)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "listener_id", listener_id)
        pulumi.set(__self__, "listener_name", listener_name)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "old_cert_id", old_cert_id)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "secret_name", secret_name)
        pulumi.set(__self__, "sni_switch", sni_switch)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "tcb_type", tcb_type)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def domains(self) -> Sequence[str]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter(name="envId")
    def env_id(self) -> str:
        return pulumi.get(self, "env_id")

    @property
    @pulumi.getter(name="errorMsg")
    def error_msg(self) -> str:
        return pulumi.get(self, "error_msg")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="listenerId")
    def listener_id(self) -> str:
        return pulumi.get(self, "listener_id")

    @property
    @pulumi.getter(name="listenerName")
    def listener_name(self) -> str:
        return pulumi.get(self, "listener_name")

    @property
    @pulumi.getter
    def namespace(self) -> str:
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="oldCertId")
    def old_cert_id(self) -> str:
        return pulumi.get(self, "old_cert_id")

    @property
    @pulumi.getter
    def port(self) -> int:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> str:
        return pulumi.get(self, "secret_name")

    @property
    @pulumi.getter(name="sniSwitch")
    def sni_switch(self) -> int:
        return pulumi.get(self, "sni_switch")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="tcbType")
    def tcb_type(self) -> str:
        return pulumi.get(self, "tcb_type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")


@pulumi.output_type
class GetDescribeHostLighthouseInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostLighthouseInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 domains: Sequence[str],
                 instance_id: str,
                 instance_name: str,
                 ips: Sequence[str]):
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "ips", ips)

    @property
    @pulumi.getter
    def domains(self) -> Sequence[str]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter
    def ips(self) -> Sequence[str]:
        return pulumi.get(self, "ips")


@pulumi.output_type
class GetDescribeHostLiveInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostLiveInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str,
                 status: int):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")


@pulumi.output_type
class GetDescribeHostTeoInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostTeoInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 host: str,
                 status: str,
                 zone_id: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "host", host)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "zone_id", zone_id)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def host(self) -> str:
        return pulumi.get(self, "host")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="zoneId")
    def zone_id(self) -> str:
        return pulumi.get(self, "zone_id")


@pulumi.output_type
class GetDescribeHostTkeInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostTkeInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cluster_id: str,
                 cluster_name: str,
                 cluster_type: str,
                 cluster_version: str,
                 namespace_lists: Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListResult']):
        pulumi.set(__self__, "cluster_id", cluster_id)
        pulumi.set(__self__, "cluster_name", cluster_name)
        pulumi.set(__self__, "cluster_type", cluster_type)
        pulumi.set(__self__, "cluster_version", cluster_version)
        pulumi.set(__self__, "namespace_lists", namespace_lists)

    @property
    @pulumi.getter(name="clusterId")
    def cluster_id(self) -> str:
        return pulumi.get(self, "cluster_id")

    @property
    @pulumi.getter(name="clusterName")
    def cluster_name(self) -> str:
        return pulumi.get(self, "cluster_name")

    @property
    @pulumi.getter(name="clusterType")
    def cluster_type(self) -> str:
        return pulumi.get(self, "cluster_type")

    @property
    @pulumi.getter(name="clusterVersion")
    def cluster_version(self) -> str:
        return pulumi.get(self, "cluster_version")

    @property
    @pulumi.getter(name="namespaceLists")
    def namespace_lists(self) -> Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListResult']:
        return pulumi.get(self, "namespace_lists")


@pulumi.output_type
class GetDescribeHostTkeInstanceListInstanceListNamespaceListResult(dict):
    def __init__(__self__, *,
                 name: str,
                 secret_lists: Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListResult']):
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "secret_lists", secret_lists)

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="secretLists")
    def secret_lists(self) -> Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListResult']:
        return pulumi.get(self, "secret_lists")


@pulumi.output_type
class GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 ingress_lists: Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListIngressListResult'],
                 name: str,
                 no_match_domains: Sequence[str]):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "ingress_lists", ingress_lists)
        pulumi.set(__self__, "name", name)
        pulumi.set(__self__, "no_match_domains", no_match_domains)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="ingressLists")
    def ingress_lists(self) -> Sequence['outputs.GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListIngressListResult']:
        return pulumi.get(self, "ingress_lists")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="noMatchDomains")
    def no_match_domains(self) -> Sequence[str]:
        return pulumi.get(self, "no_match_domains")


@pulumi.output_type
class GetDescribeHostTkeInstanceListInstanceListNamespaceListSecretListIngressListResult(dict):
    def __init__(__self__, *,
                 domains: Sequence[str],
                 ingress_name: str,
                 tls_domains: Sequence[str]):
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "ingress_name", ingress_name)
        pulumi.set(__self__, "tls_domains", tls_domains)

    @property
    @pulumi.getter
    def domains(self) -> Sequence[str]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter(name="ingressName")
    def ingress_name(self) -> str:
        return pulumi.get(self, "ingress_name")

    @property
    @pulumi.getter(name="tlsDomains")
    def tls_domains(self) -> Sequence[str]:
        return pulumi.get(self, "tls_domains")


@pulumi.output_type
class GetDescribeHostUpdateRecordDeployRecordListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 create_time: str,
                 id: int,
                 old_cert_id: str,
                 regions: Sequence[str],
                 resource_types: Sequence[str],
                 status: int,
                 update_time: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "old_cert_id", old_cert_id)
        pulumi.set(__self__, "regions", regions)
        pulumi.set(__self__, "resource_types", resource_types)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="oldCertId")
    def old_cert_id(self) -> str:
        return pulumi.get(self, "old_cert_id")

    @property
    @pulumi.getter
    def regions(self) -> Sequence[str]:
        return pulumi.get(self, "regions")

    @property
    @pulumi.getter(name="resourceTypes")
    def resource_types(self) -> Sequence[str]:
        return pulumi.get(self, "resource_types")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")


@pulumi.output_type
class GetDescribeHostUpdateRecordDetailRecordDetailListResult(dict):
    def __init__(__self__, *,
                 lists: Sequence['outputs.GetDescribeHostUpdateRecordDetailRecordDetailListListResult'],
                 resource_type: str,
                 total_count: int):
        pulumi.set(__self__, "lists", lists)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "total_count", total_count)

    @property
    @pulumi.getter
    def lists(self) -> Sequence['outputs.GetDescribeHostUpdateRecordDetailRecordDetailListListResult']:
        return pulumi.get(self, "lists")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> str:
        return pulumi.get(self, "resource_type")

    @property
    @pulumi.getter(name="totalCount")
    def total_count(self) -> int:
        return pulumi.get(self, "total_count")


@pulumi.output_type
class GetDescribeHostUpdateRecordDetailRecordDetailListListResult(dict):
    def __init__(__self__, *,
                 bucket: str,
                 cert_id: str,
                 create_time: str,
                 domains: Sequence[str],
                 env_id: str,
                 error_msg: str,
                 id: int,
                 instance_id: str,
                 instance_name: str,
                 listener_id: str,
                 listener_name: str,
                 namespace: str,
                 old_cert_id: str,
                 port: int,
                 protocol: str,
                 region: str,
                 resource_type: str,
                 secret_name: str,
                 sni_switch: int,
                 status: int,
                 t_cb_type: str,
                 update_time: str):
        pulumi.set(__self__, "bucket", bucket)
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "domains", domains)
        pulumi.set(__self__, "env_id", env_id)
        pulumi.set(__self__, "error_msg", error_msg)
        pulumi.set(__self__, "id", id)
        pulumi.set(__self__, "instance_id", instance_id)
        pulumi.set(__self__, "instance_name", instance_name)
        pulumi.set(__self__, "listener_id", listener_id)
        pulumi.set(__self__, "listener_name", listener_name)
        pulumi.set(__self__, "namespace", namespace)
        pulumi.set(__self__, "old_cert_id", old_cert_id)
        pulumi.set(__self__, "port", port)
        pulumi.set(__self__, "protocol", protocol)
        pulumi.set(__self__, "region", region)
        pulumi.set(__self__, "resource_type", resource_type)
        pulumi.set(__self__, "secret_name", secret_name)
        pulumi.set(__self__, "sni_switch", sni_switch)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "t_cb_type", t_cb_type)
        pulumi.set(__self__, "update_time", update_time)

    @property
    @pulumi.getter
    def bucket(self) -> str:
        return pulumi.get(self, "bucket")

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter
    def domains(self) -> Sequence[str]:
        return pulumi.get(self, "domains")

    @property
    @pulumi.getter(name="envId")
    def env_id(self) -> str:
        return pulumi.get(self, "env_id")

    @property
    @pulumi.getter(name="errorMsg")
    def error_msg(self) -> str:
        return pulumi.get(self, "error_msg")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="instanceId")
    def instance_id(self) -> str:
        return pulumi.get(self, "instance_id")

    @property
    @pulumi.getter(name="instanceName")
    def instance_name(self) -> str:
        return pulumi.get(self, "instance_name")

    @property
    @pulumi.getter(name="listenerId")
    def listener_id(self) -> str:
        return pulumi.get(self, "listener_id")

    @property
    @pulumi.getter(name="listenerName")
    def listener_name(self) -> str:
        return pulumi.get(self, "listener_name")

    @property
    @pulumi.getter
    def namespace(self) -> str:
        return pulumi.get(self, "namespace")

    @property
    @pulumi.getter(name="oldCertId")
    def old_cert_id(self) -> str:
        return pulumi.get(self, "old_cert_id")

    @property
    @pulumi.getter
    def port(self) -> int:
        return pulumi.get(self, "port")

    @property
    @pulumi.getter
    def protocol(self) -> str:
        return pulumi.get(self, "protocol")

    @property
    @pulumi.getter
    def region(self) -> str:
        return pulumi.get(self, "region")

    @property
    @pulumi.getter(name="resourceType")
    def resource_type(self) -> str:
        return pulumi.get(self, "resource_type")

    @property
    @pulumi.getter(name="secretName")
    def secret_name(self) -> str:
        return pulumi.get(self, "secret_name")

    @property
    @pulumi.getter(name="sniSwitch")
    def sni_switch(self) -> int:
        return pulumi.get(self, "sni_switch")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="tCBType")
    def t_cb_type(self) -> str:
        return pulumi.get(self, "t_cb_type")

    @property
    @pulumi.getter(name="updateTime")
    def update_time(self) -> str:
        return pulumi.get(self, "update_time")


@pulumi.output_type
class GetDescribeHostVodInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostVodInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")


@pulumi.output_type
class GetDescribeHostWafInstanceListFilterResult(dict):
    def __init__(__self__, *,
                 filter_key: str,
                 filter_value: str):
        pulumi.set(__self__, "filter_key", filter_key)
        pulumi.set(__self__, "filter_value", filter_value)

    @property
    @pulumi.getter(name="filterKey")
    def filter_key(self) -> str:
        return pulumi.get(self, "filter_key")

    @property
    @pulumi.getter(name="filterValue")
    def filter_value(self) -> str:
        return pulumi.get(self, "filter_value")


@pulumi.output_type
class GetDescribeHostWafInstanceListInstanceListResult(dict):
    def __init__(__self__, *,
                 cert_id: str,
                 domain: str,
                 status: int):
        pulumi.set(__self__, "cert_id", cert_id)
        pulumi.set(__self__, "domain", domain)
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter(name="certId")
    def cert_id(self) -> str:
        return pulumi.get(self, "cert_id")

    @property
    @pulumi.getter
    def domain(self) -> str:
        return pulumi.get(self, "domain")

    @property
    @pulumi.getter
    def status(self) -> int:
        return pulumi.get(self, "status")


@pulumi.output_type
class GetDescribeManagerDetailCompanyInfoResult(dict):
    def __init__(__self__, *,
                 company_address: str,
                 company_city: str,
                 company_country: str,
                 company_id: int,
                 company_name: str,
                 company_phone: str,
                 company_province: str,
                 id_number: str,
                 id_type: str):
        pulumi.set(__self__, "company_address", company_address)
        pulumi.set(__self__, "company_city", company_city)
        pulumi.set(__self__, "company_country", company_country)
        pulumi.set(__self__, "company_id", company_id)
        pulumi.set(__self__, "company_name", company_name)
        pulumi.set(__self__, "company_phone", company_phone)
        pulumi.set(__self__, "company_province", company_province)
        pulumi.set(__self__, "id_number", id_number)
        pulumi.set(__self__, "id_type", id_type)

    @property
    @pulumi.getter(name="companyAddress")
    def company_address(self) -> str:
        return pulumi.get(self, "company_address")

    @property
    @pulumi.getter(name="companyCity")
    def company_city(self) -> str:
        return pulumi.get(self, "company_city")

    @property
    @pulumi.getter(name="companyCountry")
    def company_country(self) -> str:
        return pulumi.get(self, "company_country")

    @property
    @pulumi.getter(name="companyId")
    def company_id(self) -> int:
        return pulumi.get(self, "company_id")

    @property
    @pulumi.getter(name="companyName")
    def company_name(self) -> str:
        return pulumi.get(self, "company_name")

    @property
    @pulumi.getter(name="companyPhone")
    def company_phone(self) -> str:
        return pulumi.get(self, "company_phone")

    @property
    @pulumi.getter(name="companyProvince")
    def company_province(self) -> str:
        return pulumi.get(self, "company_province")

    @property
    @pulumi.getter(name="idNumber")
    def id_number(self) -> str:
        return pulumi.get(self, "id_number")

    @property
    @pulumi.getter(name="idType")
    def id_type(self) -> str:
        return pulumi.get(self, "id_type")


@pulumi.output_type
class GetDescribeManagersManagerResult(dict):
    def __init__(__self__, *,
                 cert_count: int,
                 create_time: str,
                 domain_count: int,
                 expire_time: str,
                 manager_department: str,
                 manager_first_name: str,
                 manager_id: int,
                 manager_last_name: str,
                 manager_mail: str,
                 manager_phone: str,
                 manager_position: str,
                 status: str,
                 submit_audit_time: str,
                 verify_time: str):
        pulumi.set(__self__, "cert_count", cert_count)
        pulumi.set(__self__, "create_time", create_time)
        pulumi.set(__self__, "domain_count", domain_count)
        pulumi.set(__self__, "expire_time", expire_time)
        pulumi.set(__self__, "manager_department", manager_department)
        pulumi.set(__self__, "manager_first_name", manager_first_name)
        pulumi.set(__self__, "manager_id", manager_id)
        pulumi.set(__self__, "manager_last_name", manager_last_name)
        pulumi.set(__self__, "manager_mail", manager_mail)
        pulumi.set(__self__, "manager_phone", manager_phone)
        pulumi.set(__self__, "manager_position", manager_position)
        pulumi.set(__self__, "status", status)
        pulumi.set(__self__, "submit_audit_time", submit_audit_time)
        pulumi.set(__self__, "verify_time", verify_time)

    @property
    @pulumi.getter(name="certCount")
    def cert_count(self) -> int:
        return pulumi.get(self, "cert_count")

    @property
    @pulumi.getter(name="createTime")
    def create_time(self) -> str:
        return pulumi.get(self, "create_time")

    @property
    @pulumi.getter(name="domainCount")
    def domain_count(self) -> int:
        return pulumi.get(self, "domain_count")

    @property
    @pulumi.getter(name="expireTime")
    def expire_time(self) -> str:
        return pulumi.get(self, "expire_time")

    @property
    @pulumi.getter(name="managerDepartment")
    def manager_department(self) -> str:
        return pulumi.get(self, "manager_department")

    @property
    @pulumi.getter(name="managerFirstName")
    def manager_first_name(self) -> str:
        return pulumi.get(self, "manager_first_name")

    @property
    @pulumi.getter(name="managerId")
    def manager_id(self) -> int:
        return pulumi.get(self, "manager_id")

    @property
    @pulumi.getter(name="managerLastName")
    def manager_last_name(self) -> str:
        return pulumi.get(self, "manager_last_name")

    @property
    @pulumi.getter(name="managerMail")
    def manager_mail(self) -> str:
        return pulumi.get(self, "manager_mail")

    @property
    @pulumi.getter(name="managerPhone")
    def manager_phone(self) -> str:
        return pulumi.get(self, "manager_phone")

    @property
    @pulumi.getter(name="managerPosition")
    def manager_position(self) -> str:
        return pulumi.get(self, "manager_position")

    @property
    @pulumi.getter
    def status(self) -> str:
        return pulumi.get(self, "status")

    @property
    @pulumi.getter(name="submitAuditTime")
    def submit_audit_time(self) -> str:
        return pulumi.get(self, "submit_audit_time")

    @property
    @pulumi.getter(name="verifyTime")
    def verify_time(self) -> str:
        return pulumi.get(self, "verify_time")


