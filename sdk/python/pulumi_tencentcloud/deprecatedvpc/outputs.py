# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'Ipv6EniAddressIpv6Address',
]

@pulumi.output_type
class Ipv6EniAddressIpv6Address(dict):
    @staticmethod
    def __key_warning(key: str):
        suggest = None
        if key == "addressId":
            suggest = "address_id"
        elif key == "isWanIpBlocked":
            suggest = "is_wan_ip_blocked"

        if suggest:
            pulumi.log.warn(f"Key '{key}' not found in Ipv6EniAddressIpv6Address. Access the value via the '{suggest}' property getter instead.")

    def __getitem__(self, key: str) -> Any:
        Ipv6EniAddressIpv6Address.__key_warning(key)
        return super().__getitem__(key)

    def get(self, key: str, default = None) -> Any:
        Ipv6EniAddressIpv6Address.__key_warning(key)
        return super().get(key, default)

    def __init__(__self__, *,
                 address: str,
                 address_id: Optional[str] = None,
                 description: Optional[str] = None,
                 is_wan_ip_blocked: Optional[bool] = None,
                 primary: Optional[bool] = None,
                 state: Optional[str] = None):
        pulumi.set(__self__, "address", address)
        if address_id is not None:
            pulumi.set(__self__, "address_id", address_id)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if is_wan_ip_blocked is not None:
            pulumi.set(__self__, "is_wan_ip_blocked", is_wan_ip_blocked)
        if primary is not None:
            pulumi.set(__self__, "primary", primary)
        if state is not None:
            pulumi.set(__self__, "state", state)

    @property
    @pulumi.getter
    def address(self) -> str:
        return pulumi.get(self, "address")

    @property
    @pulumi.getter(name="addressId")
    def address_id(self) -> Optional[str]:
        return pulumi.get(self, "address_id")

    @property
    @pulumi.getter
    def description(self) -> Optional[str]:
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="isWanIpBlocked")
    def is_wan_ip_blocked(self) -> Optional[bool]:
        return pulumi.get(self, "is_wan_ip_blocked")

    @property
    @pulumi.getter
    def primary(self) -> Optional[bool]:
        return pulumi.get(self, "primary")

    @property
    @pulumi.getter
    def state(self) -> Optional[str]:
        return pulumi.get(self, "state")


